<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8791945cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8791ccfc00"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8791ccfc00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8791c30110"/></to>
    </wire>
    <wire loc="27:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8791942360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c16c40"/></to>
    </wire>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7f8791935820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8791879980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791879980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879186f050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f8791932cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8791549260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791549260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879186f050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f87918d3910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8790799c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8790799c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f878fdceaa0"/></to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f87918c38d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f87907978b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f87907978b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f878fdcd720"/></to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f87918b0a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879083e360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879083e360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8791536cc0"/></to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f87918b88f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8790799020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8790799020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f878fdd0e60"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f87918b3180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8790792910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8790792910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879083c5c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f87918a9c20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8791530610"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8791530610"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f87914f7020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8790910dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8790999b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f87909b9750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f87909d6080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8790b29620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8790c20c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f87913b57e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f878ffd9020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f87910f1020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791460510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879186ae50"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f8791c30780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f87921771e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f87921771e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f8791d1c140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f8791c2f1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791cca0c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8791cca0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791cbd1a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791c2f8d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f8791cbf130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f8791cbd810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f8791cbb020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f8791ca4900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f8791ca4900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791c8b850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f8791cbb700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791cbe640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f8791cbbde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791bed600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8791c8b850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791c711c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8791c82de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8791c71830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8791df2c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8791c70af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8791d1b040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f8791d16490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f8791f4f9a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8791bed600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8791c16640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8791c0d1d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f8791c17d80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8791c17d80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8791970480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8791c134d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f8791bef020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8791bef020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879195ab20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8791c127f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f8791bee380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8791bee380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f87919531b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879195e610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f8791b818a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f8791b818a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a2ab90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791958de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f8791b7e020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f8791b7e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a24060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791952480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f8791b7c8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f8791b7c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a1f540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f8791bd2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ad9060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f8791bb9710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791aa2740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f8791b2fd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a92540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f8791b34d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919f3060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f8791b5dd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a8db90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f8791bb4710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a97060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f8791b9a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a61740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f8791b6c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919fe540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f8791b58d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a81540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f8791b44d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a14060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f8791b25d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919ee540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f8791bcbd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ac8060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f8791b55580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a7cb90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f8791bc6d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791abeb90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f8791bace50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a87060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f8791b92020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a50540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f8791b79020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a1ab90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f8791b64020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919ee540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f8791bd7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ae4740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f8791bbe580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791aadd10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f8791ba4710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a76060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f8791b5f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a92540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f8791b3c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a03060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f8791b27570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919ee540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f8791b4b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a2f540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f8791b9f710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a6cdc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f8791b868a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a35060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f8791b718a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a0ab90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f8791b39d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919fe540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f8791b53d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a40540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f8791bd0d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ad3540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f8791bb7e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a9db90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f8791b778a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a14060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f8791bb2e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a92540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f8791b97020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a5cb90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f8791b69020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919f9b90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f8791b4ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a35060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f8791bda530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791b1dd10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f8791bc3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ab8060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f8791ba9710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a81540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f8791b908a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a4bb90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f8791b49d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a76060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f8791b41570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a0f540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f8791b31570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919ee540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f8791b8b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a40540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f8791b46580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a71540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f8791bd5d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791adfb90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f8791bbce50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791aa7260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f8791ba2e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a71540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f8791b50580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a3bb90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f8791b36570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919f9b90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f8791b9c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a66260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f8791b83020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a2f540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f8791b6e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a03060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f8791bcd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791aceb90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f8791b73020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a0f540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f8791bc8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ac3540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f8791bae710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a8db90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f8791b958a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a55060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f8791b678a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919f3060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f8791be8d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ae9260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f8791bc1d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791ab3540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f8791ba7e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a7cb90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f8791b8d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a45060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f8791b3fd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a0ab90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f8791b2c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a87060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f8791b5a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a87060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f8791b88020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a3bb90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f8791b2ad40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f87919f3060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f8791b22580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a1ab90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f8791b628f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8791a97060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f879186f050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8791866c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f8791866c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87915718e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879186ae50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879161f020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f87915718e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87901c3db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f879185c500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8791562020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879161f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f87903b9b10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f879156a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87915f22f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f87915ed850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879161f870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879161f870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f87903b2890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8791558300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f87916988c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f87916988c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879167bcf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f87903b9b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879039a660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f87903ab0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f87903b84f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f87903b84f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8790399020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f87903aec00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f87916988c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790395190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f87903a1340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f87903a1340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8790394770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f87903a0a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f87903a0a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8790393a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879039fda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879039fda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f8791811280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f8791811280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879175b6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f8791810700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f8791810700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879175aac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f879180ba50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f879180ba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879174b220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f8791809020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f8791809020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879174a610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f8791808d40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f8791808d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f87917436d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f8791806160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f8791806160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8791742ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f8791804020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f8791804020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879173cb30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f8791803570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f8791803570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879173a020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f87918015a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f87918015a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8791733220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f8791800a20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f8791800a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8791732610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f87917fe8c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f87917fe8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879172c6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f87917fcd40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f87917fcd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879172bac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f8791816730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8791762220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f8791818700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8791769cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f8791805020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f87917417a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f879181e890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8791769020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f87917fbae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879172a7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f87918220c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f87917b76d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f879180ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8791751cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f879180dbb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8791751020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f879180e730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f8791753b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f8791814a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f87917602f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f8791802570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879173acb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f8791815bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8791761610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f8791826830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917c53e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f879181f410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879176bb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f8791819410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f87917707a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f8791809da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f87917492f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f8791821570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8791771ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f87917ff890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f87917312f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f879180f700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f87917587a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f87917c22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917c3bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f87917c2940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f87917223f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f87917c1020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f8791722b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879176f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917c53e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879176ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917c3bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791767b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917c53e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f87917652f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917c3bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879175f160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917c53e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879175e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917c3bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f87917bb100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f87917bb750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f8791721430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f87917bbda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f8791721bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791757610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f8791756c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791750b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879174e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791747160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f87917467a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791740610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879173fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791738b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f87917362f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791730160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879172f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8791729610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f8791727c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f879165d0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f87916968e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f87916968e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879168fb80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8791681c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f87915e99c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f87901bc3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f879156a020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f87901b6a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f8791565450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f87901b75d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f8791cbf130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f87901b5100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8791536cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8791509020"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8791509020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8790903b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f87915282c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f87908cc8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f879151c1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f87908cdce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f87915318f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f87908cea80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8791535d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f87908d2020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f8791533c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f87908d1df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f87914f7020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f8791517130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f87914f5080"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f87914f5080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f8790903080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8791533020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f87908d1210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879152e080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f87914f6020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f87914f6020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f8790aa66e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f879150e430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f87914f5b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f87914f5b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f87908ef020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f87915322d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f87908cf470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8791524170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f87914f69d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f87914f69d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8790aa5a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f87908c40f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8791508530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f87908cb860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f8791501a70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f8791501a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f879096cc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f87908ca690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f87914fa840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f87914fa840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f879096ba50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f87908c64d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8790cd7b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f87908cace0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790a9bd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f87908c9b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790a97640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f87908c8610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8791469dc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f8791469dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f879145f970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f87908c51f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f87914ef330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f87914ef330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f87914e97e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f87908c4d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8790903b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f8790900d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8790aa5a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8790a96020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f87908ef020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f87908ed410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f879096cc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f8790961a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f8790903080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f87908fc2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f8791502690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879096c5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879096c5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f8790961370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f8790aa66e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f8790a98c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8791508530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879096ebe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879096ebe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f87909647b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f87914f9940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879096d8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879096d8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f87909634d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f8791502d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f879096a170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f879096a170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f879095f020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f879096ba50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f8790960840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f8790900d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f87914f1390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f87914f1390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f87914eee70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f87909696b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f87909be220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f87909be220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f87909bca10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f87909bd020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f87908f2350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f87908f2350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f87908efd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f87908efd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8790907ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8790907ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f8790901860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8790901860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f87914f1e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f87914f1e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f87914ea990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8790969020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8790904980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8790904980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f8790900690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8790900690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f87909a0aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f87909a0aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879099ce30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879099d950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f87914f0b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f87914f0b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8790b2e7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8790b2e7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8790b26020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f87914e8640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8791479950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8791479950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8791460b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f87914e0b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f8791474bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f8791474bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f879145d740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f87914dc760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8790c2e6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f87914dc760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8790b315c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8790b315c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8790b29ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8790c2e6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8790c1e320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f87914d52a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8790c2b020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8790c2b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8790c1ebc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f87914de060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f8790c2bcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f8790c2bcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f8790c1d970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f87914d3330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f87914cb920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f87914d2420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f87909dca20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f87909dca20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f87909d5a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f87914ce110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87909deaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f87909deaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87910f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f87914d2bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f87914c1b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f87914c2ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f87914c3c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f87914660c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f879145cb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f8791458a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f87913b1220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f87913b1220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f87913abaf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8791454c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f879136de60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f879136de60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879135e630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f8791453e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f87913686a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f87913686a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879134d630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f87914510f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f8791366ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f8791366ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8791342020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f879144cc00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f8791328400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f8791328400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f87911c7680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8791439520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790d61e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790d61e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f87911754d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8791438570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f8790d5e7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8790d5e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8791438c80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f8790d5cae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8790d5cae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f879143ad70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f8790d5fad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8790d5fad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879143a450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790d5b160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790d5b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f879143f420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f8790d53870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8790d53870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f879143fcd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f8790d51880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8790d51880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f87914465d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f8790d4f0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8790d4f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879143e020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790d58e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790d58e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879143e8f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790d56670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790d56670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8791442e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f8790d43500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8790d43500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f87914424a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f8790d44ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8790d44ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f879143d1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790d54e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790d54e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f879143da80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f8790d56e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8790d56e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879143c3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f8790d55e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8790d55e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f8791436180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790d31a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790d31a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f87911754d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f87914373d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790d049e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790d049e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f87911754d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8791447390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8790cd7b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8791458020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8790cd6d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8790cd6d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8790cbb310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f879142bca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f879142ddb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f87913b57e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f87913ab260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f87913ab260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879015f720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f87913abaf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879015e020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879015f720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8790158760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879015e020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f87901511d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8790158760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879013b340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f879014bb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8790157020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8790157020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879013bbd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879014d690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8791395080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8791395080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8791390cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790138dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790142e70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790142e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8790135440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879013f5d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879013f5d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f8790134760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879013e8f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879013e8f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f879138d0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f87916968e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f879136b090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8791359b00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f879136a390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8791353020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f87913b3b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8791363020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f87913679b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8791348af0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f87913622f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f8791bd2580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879135d7a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f8791b9a8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791358c60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f8791bd5d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f87913522f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f8791bda530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879134c7a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f8791b908a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791347c60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f8791b9c020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f87913412f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f8791b92020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f8791324700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8791321c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8791327060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f87911b8b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879130a760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f879180e730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f8791309a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f879180ca20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f8791307930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f8791b9c020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f87911c62f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f87912f53f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f87912f53f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f87912de3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f87911b77a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f87912f8620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f87912f8620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f87912e67a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f87912e93f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f87912d23f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f87912f2d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f87912dbd50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f87912ef3f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f87912d83f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f87912fdbc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f87912e1d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f87912ecd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f87912d5d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f87912f4710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f87912dd710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f87912e8710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f87912d1710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f87912ee710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f87912d7710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f87912f6020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f87912df020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f87912ea100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f87912d3100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f87912f3a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f87912dca30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f87912f0020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f87912d9020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f87912fe8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f87912e2a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f87912eda30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f87912d6a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8790d5e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790d52880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f8790d4a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8790d510a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8790d3e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8790d40500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8790d5c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f8790d46880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790d41500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f8790d4c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8790d4d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790d60a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8791173350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8791173350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879116b660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790d5be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8790d5a490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790d45c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8790d5abe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790d41ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f8790d460a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790d55670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790d470a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f8790d4a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790d47880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8790d3fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8790d40ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8790d4d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f8790d480a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8790d43ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8790d4f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8790d3ece0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8790d5f480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8790d58670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790d54670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f8790d4b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f8790d4b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790d520a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8790d592f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8790d58020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790d5b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790d44500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8790d3f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790d4c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f8790d48880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8790d5ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8790d4e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8790d59940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8790d4e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f8790d450a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8790d3d9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8791169890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791168ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791167a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f87911754d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879116a510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f87911658b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f8791159b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87910fa770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f87910fa770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87910f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8791164060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f87910d8c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f87910d8c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790060940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f8791161c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f87910d78f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f87910d78f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f879005fd70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f87911592e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f8790d89020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f8790d89020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f879005c020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8791160a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f8791155bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f87910f51d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87910f1b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f879005c020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f8791070850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f879005fd70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f8791071110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790060940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8791077d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879005f5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790054020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790054020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790ef22c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f8791071110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f8790ff5a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f879005d410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f8791071790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f8791071790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f8790ff4060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879106ba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879005c7c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790044760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879106e8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f879106c690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790055340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790055340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790ef3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f8791067b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879004fc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879004fc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f8790ef54d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879106e8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790ff5250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f8791070850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f8790ff4c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8791077d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790ff6470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f8790ff23e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879106ba40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f8790ff35b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f879106c690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f8790fec480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f8791067b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f8790ff2a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f8790fe2020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f8790fe2020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f8790fd9700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8790fecc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f8790fea2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f8790fda2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f8790fd4c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f8790fded10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f8790fd42d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f8790fa5bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f8791b5f580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f8790fa23e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f8791b5dd50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f8790fa0bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f8791b5a580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f8790f9d3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f8791b55580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f8790f9bbb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f8791b58d50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f8790fabd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f8790e48d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f879004c440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f8790ef43f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f879004ca50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f8790e50020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f8790e50020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f8790e48d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f8790053020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f8790fe2020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f87900547c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790ef2ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790ef2ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790e5be80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790ef18a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790044760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790ef22c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790e5ca60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790e5ca60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f878ffd66c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f8790ef54d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f8790eeed60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790ef3020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790e5dca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790e5dca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f878ffd7850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f8790ef43f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f8790eed710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790e5be80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f878ffd4a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790e5a790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790ef18a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790edcbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790e5be80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f8790eedd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f8790fded10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f8790edc5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f8790fda2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8790e5b270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f878ffd6e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f878ffd39d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790e5a790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f878ffd32d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f8790e59020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f878ffd22b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f878ffd9630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f878ffd0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f8790e3fbb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f8790fd9700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f8790e3a700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f8791b5f580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f8790e38e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f8791b5a580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790d24c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8790d2eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790d27b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790d21670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f8790d1ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8790d21e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8790d0d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8790d102f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8790d2c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f8790d15670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790d112f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8790d26c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8790d25c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f8790d1b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8790d1ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8790d20670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790d2f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8791173350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790d2baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8790d29120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790d14a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8790d29870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790d11ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790d2cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f8790d17e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790d25480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790d26480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8790d2e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790d18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f8790d19670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790d17670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8790d0ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8790d10ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8790d1c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f8790d19e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8790d12ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8790d1f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8790d0dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8790d2e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8790d27370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790d24480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f8790d1be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8790d20e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f8790d1a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8790d22670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8790d2d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790d22e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8790d28020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8790d28cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8790d122f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8790d13ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790d2b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790d132f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8790d0e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790d1ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f8790d18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8790d2daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8790d2c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8790d1fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8790d28670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8790d1e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f8790d15e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8790d0c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790cf7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8790d02da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790cfbb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790cf5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f8790ceee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8790cf5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8790ce12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8790ce32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8790cff120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f8790ce9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790ce42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8790cf9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8790cf8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f8790cef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8790cf1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8790cf3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790d03760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8791173350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790cfeaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8790cfd120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790ce8a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8790cfd870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790ce4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790cffdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f8790ceae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790cf8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790cf9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8790d02750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790cebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f8790cec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790cea670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8790ce2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8790ce3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8790cf0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f8790cece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8790ce5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8790cf2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8790ce1ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8790d02100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8790cfb370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790cf7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f8790cefe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8790cf3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f8790cee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8790cf6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8790d01450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790cf6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8790cfc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8790cfccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8790ce52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8790ce7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790cfe450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790ce72f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8790ce22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790cf0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f8790ceb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8790d01aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8790cff770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8790cf2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8790cfc670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8790cf1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f8790ce9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8790ce07a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f8790cb8880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f8790cad020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f8790cad020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f8790ca8140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f8790ca3bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f8790cacc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f8790cacc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f8790c8f150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f8790ca7530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8790c3a1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f8790c93540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f8790c94590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f8790c94590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8790c439e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f8790c8a950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f8790c91ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f8790c91ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f8790c67a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f8790c8f9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f8790c93540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8790c57020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f8790c51530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f8790c51530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8790c4de50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790c4a020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f8791826830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8790c42c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f8791bbe580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8790c27990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8790c1c900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f8790c29150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f8790c1b0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f8790c1bae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f87913b1220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f8790c06690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f87913b3b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8790c009b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f879136de60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f8790bffcd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f87913679b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f8790c07a80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f8791324700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8790bfd020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790b61c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790b61c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f87911754d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790bfdd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790b608f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790b608f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8791173350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8790bf96d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f8790b5f2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8790b5f2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8790bf9de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f8790b5ecc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8790b5ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8790bf8530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f8790b5d370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8790b5d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790bf8c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790b5cd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790b5cd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8790bfae00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f8790b55c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8790b55c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8790bfc780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f8790b3d7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8790b3d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790bfa550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790b422f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790b422f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790bf73e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790b57480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790b57480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790bf65e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790b53e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790b53e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790bf5020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790b52670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790b52670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8790bf7e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f8790b597b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8790b597b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8790bf49c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f8790b3fad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8790b3fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8790bf5890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f8790b402f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8790b402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8790bf4130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f8790b40ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8790b40ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f8790befd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f8790b31df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f8790b31df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f8790b27550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790c15d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790c14bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8790c0dc60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790aa4550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790aa4550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790a96a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8790c01e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8790a9c480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8790a9c480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8790a8e8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8790bf26c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790b54c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8790b5e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790b58c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f8790b4be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8790b52e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8790b3e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f8790b46670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8790b57c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f8790b4c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8790b4ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8790b51670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8790b5a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790b45a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8790b5aac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790b42ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790b5c060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f8790b47e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790b55480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8790b5f940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790b49e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f8790b4a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790b47670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8790b4d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f8790b4ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8790b43ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8790b50670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8790b3ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8790b58490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790b54480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f8790b4ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8790b51e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f8790b4b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8790b53670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8790b5e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8790b59160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8790b59e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8790b432f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8790b44ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790b5c6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790b442f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8790b3f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790b4de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f8790b49670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8790b5d9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8790b50e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8790b4e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f8790b46e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f8790b2d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f8790b267c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8790b11150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8790b25020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f879136de60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f8790b24380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f879136b090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f8790b236b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f879136a390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8790b22a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8791327060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8790b216e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8790a2cd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8790a2cd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f87911754d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8790b20530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f8790a08ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8790a08ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790b1fad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790a266b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790a266b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8790b1f3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f8790a25370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8790a25370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790b1e330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790b1d1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8790b1bd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790aa4550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f8790b1db90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8791469dc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790b163e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790a1de50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790a1de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790b16cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790a1c670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790a1c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8790b17b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f8790a23160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8790a23160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8790b146d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f8790a082f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8790a082f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8790b15590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f8790a0b2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8790a0b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8790b15e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f8790a0bad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8790a0bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790b13020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790a0cad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790a0cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8790b138b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f8790a29300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8790a29300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f8790b069d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8790aa0660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8790a92af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8790a38300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8791395080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f8790a8c3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8790a3a020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f8790a8b6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879185c500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8790a34450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879186f050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790a1fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8790a28020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790a22c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f8790a15e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8790a1ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8790a27370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f8790a10670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790a0c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8790a21c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8790a20c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f8790a16670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8790a19e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8790a1b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790a2a970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8791173350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790a26d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790a0fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8790a25ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790a26060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f8790a12e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790a20480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790a21480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8790a29950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790a13e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f8790a14670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790a12670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8790a0aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8790a18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f8790a14e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8790a0dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8790a1a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8790a22490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790a1f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f8790a16e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8790a1be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f8790a15670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8790a1d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8790a28670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8790a23e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8790a0d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8790a0ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790a0e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8790a0a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790a18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f8790a13670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8790a28cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8790a279c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8790a1ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8790a237b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8790a19670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f8790a10e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8790a077a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f87909d9920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f87909d6940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f87909e0990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f87909d6080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f87909b9e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f87909bd020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f87909b8ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87909ba690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f87909ba690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87910f51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f87909b78f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f87909dca20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f87909b6170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f879099d200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f8790999570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f87909973f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f879099d950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790997a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879095fd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f87909696b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879095eb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f8790969020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879095d2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879095c170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f879095cb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f879090f410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f8790930db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f8790902800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87908fe580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f87908fe580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f87910f51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f87908ea1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f87914f6020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879083d3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8791535d20"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f879083a1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f8791533c00"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879083a7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f87915318f0"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790837a20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790aa4550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f879082d890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f8791517130"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879083c5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8791533020"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8790838b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879152e080"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8790839470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f87915322d0"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8790831af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8790aa0660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f878fdd0e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f878fdc27f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f878fdceaa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879083a7e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f878fdcd720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8790839470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f8790795020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f878fdccda0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f878fdccda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8790838b20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f878fdc15f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8790800930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f878fdc0270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8790839470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8790800930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f87907afdf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f87907ad400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879083d3f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f87907ac060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8790839470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f87907ab720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879083a7e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f87907aa480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f87907aac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879078c020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879083a7e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f879078cc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8790839470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f87915e4530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f8791b1c1d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f8791b1c580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f8791b1c930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f8791b1cce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f8791b1b0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f87917f6930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f87917f6cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f87917f50d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f87917f5450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f87917f57d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f87917f5b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f87917f4020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f87917f43b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f87917f4780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f87917b9c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f87917b60d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f87916d3cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f87916d3cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f8791690a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f8791690a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f879167a570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f879167a570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f879167ad40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f879167ad40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f8791679160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f8791679160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f8791679940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f8791679940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f8791679d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f8791678540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f8791678540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f87916596d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f87916596d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f8791656020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f8791656020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f8791656410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f8791656410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f8791656bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f8791656bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f8791655020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879161acc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879161acc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f87915e4530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f87915e4530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f87915e4880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f87915d5980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f87915d5980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f87915d5cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8791561550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8791561550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f8790ed65e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f8790ecb9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f8790eb0cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8790c65020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8790c65020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8790c657b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c657b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f8790825660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f879081b360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f87908140d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f87907fbc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f8790791330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f8791ccd160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791ccd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791ccd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8791ccfc00" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f8791ccfc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8791cce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8791cca0c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791cca0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791cca440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f8791cbf130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f8791cbf130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f8791cc91b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f8791cc9340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f8791cbf7d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f8791cbf960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f8791cbfaf0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f8791cbfc80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f8791cbfe10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f8791cc9020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f8791cbf4b0"/>
        <function-ref name="node_id" scoped="" ref="0x7f8791cbf640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f8791cbb700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f8791cbb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791cbba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8791cbd1a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791cbd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791cbd520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f8791cbb020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f8791cbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791cbb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f8791cbbde0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f8791cbbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791cba180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f8791cbd810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f8791cbd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f8791cbc980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f8791cbcb10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f8791cbc020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f8791cbc1b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f8791cbc340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f8791cbc4d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f8791cbc660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f8791cbc7f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f8791cbdb90"/>
        <function-ref name="node_id" scoped="" ref="0x7f8791cbdd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8791cbe640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791cbe640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791cbe9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f8791ca4900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f8791ca4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791ca4c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f8791c82de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8791c82de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f8791c87c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f8791c87310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f8791c874a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f8791c87630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f8791c87180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f8791c877c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f8791c87950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f8791c87ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8791c8b850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791c8b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791c8bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f8791c71830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8791c71830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f8791c707f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f8791c71d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f8791c70020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f8791c701b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f8791c71bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f8791c70340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f8791c704d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f8791c70660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f8791c70af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8791c70af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f8791c70e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8791c711c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791c711c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791c71540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f8791df2c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8791df2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f8791fcd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f8791f4f9a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f8791f4f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f8791f4fd20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f879206a020"/>
        <function-ref name="sleep" scoped="" ref="0x7f879206a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f8791e903d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f8791e903d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f8791e90750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f8791c898b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f8791c898b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f8791c3c7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f8791c89dc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f8791c3c020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f8791c3c1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f8791c89c30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f8791c3c340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f8791c3c4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f8791c3c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f8791c2f8d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8791c2f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791c2fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8791c30110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f8791c30110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8791c30490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f8791c2f1d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f8791c2f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791c2f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f8791c30780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f8791c30780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791c30b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8791c30c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8791c30e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f879216a940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f879216a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879216acc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879216ae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f87921771e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f87921771e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8792177560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f87921776f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8792177880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f8791d1b040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f8791d1b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8791d1b3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8791d1b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f8791d16490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f8791d16490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f8791d16810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f8791d169a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f8791d16b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f8791d1c140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f8791d1c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791d1c4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8791d1c650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8791d1c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8791c180d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8791c180d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8791c18450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8791c185e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8791c18770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8791c18900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8791c18a90"/>
        <function-ref name="get" scoped="" ref="0x7f8791c18c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8791c18db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8791c234d0"/>
        <function-ref name="set" scoped="" ref="0x7f8791c23020"/>
        <function-ref name="led0On" scoped="" ref="0x7f8791c231b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8791c23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f8791c0d1d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f8791c0d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791c0d550"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791c0d6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791c0d870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791c0da00"/>
        <function-ref name="get" scoped="" ref="0x7f8791c0db90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791c0dd20"/>
        <function-ref name="set" scoped="" ref="0x7f8791c13020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791c131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8791c16640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791c16640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791c169c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f8791c134d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f8791c134d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791c13850"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791c139e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791c13b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791c13d00"/>
        <function-ref name="get" scoped="" ref="0x7f8791c12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791c121b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791c12340"/>
        <function-ref name="clr" scoped="" ref="0x7f8791c124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8791c16c40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8791c16c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8791c15020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8791c151b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8791c15340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8791c154d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8791c15660"/>
        <function-ref name="get" scoped="" ref="0x7f8791c157f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8791c15980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8791c14020"/>
        <function-ref name="set" scoped="" ref="0x7f8791c15b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f8791c15ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8791c15e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f8791c127f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f8791c127f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791c12b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791c12d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791c0c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791c0c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791c0c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791c0c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8791c0c660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791c0c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f8791c17d80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f8791c17d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bf0180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bf0310"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bf04a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bf0630"/>
        <function-ref name="get" scoped="" ref="0x7f8791bf07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bf0950"/>
        <function-ref name="set" scoped="" ref="0x7f8791bf0ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bf0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f8791bef020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f8791bef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bef530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bef6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bef850"/>
        <function-ref name="get" scoped="" ref="0x7f8791bef9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791befb70"/>
        <function-ref name="set" scoped="" ref="0x7f8791befd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f8791bed600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791bed600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791bed980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f8791bee380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f8791bee380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bee700"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bee890"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791beea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791beebb0"/>
        <function-ref name="get" scoped="" ref="0x7f8791beed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bed020"/>
        <function-ref name="set" scoped="" ref="0x7f8791bed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f8791bd2580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f8791bd2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bd2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bd2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bd2c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bd0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bd11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bd1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bd14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bd1660"/>
        <function-ref name="get" scoped="" ref="0x7f8791bd17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bd1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bd1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bd1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bd0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bd01b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bd0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bd04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bd2db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bd0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bd07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f8791bb9710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f8791bb9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bb9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bb9c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bb9db0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bb7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bb81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bb8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bb84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bb8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bb87f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791bb8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bb8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bb8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bb8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bb7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bb72b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bb7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bb75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bb8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bb7760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bb78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f8791b2fd30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f8791b2fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b2e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b2e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b2e400"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b2c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b2e720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b2e8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b2ea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b2ebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b2ed60"/>
        <function-ref name="get" scoped="" ref="0x7f8791b2d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b2d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b2d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b2d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b2d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b2d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b2da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b2dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b2e590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b2dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f8791b34d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f8791b34d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b330e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b33270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b33400"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b311b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b33720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b338b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b33a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b33bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b33d60"/>
        <function-ref name="get" scoped="" ref="0x7f8791b32020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b32340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b324d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b32760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b328f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b32a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b32c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b33590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b32da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f8791b5dd50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f8791b5dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b5c100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b5c290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b5c420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b5a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b5c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b5c8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b5ca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b5cbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b5cd80"/>
        <function-ref name="get" scoped="" ref="0x7f8791b5b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b5b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b5b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b5b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b5b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b5b8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b5ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b5bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b5c5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b5bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f8791bb4710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f8791bb4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bb4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bb4c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bb4db0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bb2a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bb31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bb3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bb34d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bb3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bb37f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791bb3980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bb3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bb3ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bb3e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bb2120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bb22b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bb2440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bb25d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bb3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bb2760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bb28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f8791b9a8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f8791b9a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b9ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b9adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b99020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b98c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b99340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b99660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b997f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b99980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b99b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b99ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b99e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b98020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b982b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b98440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b985d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b98760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b991b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b988f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b98a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f8791b818a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f8791b818a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b81c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b81db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b80020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b7fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b80340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b804d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b80660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b807f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b80980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b80b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b80ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b80e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b7f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b7f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b7f440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b7f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b7f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b801b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b7f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b7fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f8791b6c8a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f8791b6c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b6cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b6cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b6b020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b6ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b6b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b6b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b6b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b6b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b6b980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b6bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b6bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b6be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b6a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b6a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b6a440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b6a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b6a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b6b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b6a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b6aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f8791b58d50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f8791b58d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b57100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b57290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b57420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b57740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b578d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b57a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b57bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b57d80"/>
        <function-ref name="get" scoped="" ref="0x7f8791b56020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b56340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b564d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b56760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b568f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b56a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b56c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b575b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b56da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f8791b44d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f8791b44d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b430e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b43270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b43400"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b43720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b438b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b43a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b43bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b43d60"/>
        <function-ref name="get" scoped="" ref="0x7f8791b42020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b42340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b424d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b42760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b428f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b42a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b42c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b43590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b42da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f8791b25d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f8791b25d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b24100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b24290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b24420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b24740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b248d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b24a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b24bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b24d80"/>
        <function-ref name="get" scoped="" ref="0x7f8791b23020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b23340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b234d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b23760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b238f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b23a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b23c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b245b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b23da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f8791bcbd50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f8791bcbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bca100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bca290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bca420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bc81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bca740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bca8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bcaa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bcabf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bcad80"/>
        <function-ref name="get" scoped="" ref="0x7f8791bc9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bc91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bc9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bc94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bc9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bc98f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bc9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bc9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bca5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bc9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f8791b55580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f8791b55580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b55900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b55a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b55c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b53980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b54020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b54340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b54660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b54980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b54b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b54ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b53020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b531b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b53340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b55db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b53660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f8791bc6d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f8791bc6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bc5100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bc5290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bc5420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bc31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bc5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bc58d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bc5a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bc5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bc5d80"/>
        <function-ref name="get" scoped="" ref="0x7f8791bc4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bc41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bc4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bc44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bc4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bc48f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bc4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bc4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bc55b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bc4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f8791bace50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f8791bace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bab210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bab3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bab530"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ba9340"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791babb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791babd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791baa020"/>
        <function-ref name="get" scoped="" ref="0x7f8791baa1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791baa340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791baa4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791baa660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791baa8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791baaa80"/>
        <function-ref name="set" scoped="" ref="0x7f8791baac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791baada0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bab6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ba9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ba91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f8791b92020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f8791b92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b92530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b926c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b904d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b929e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b92b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b92d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b91020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b911b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b91340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b914d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b91660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b91a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b91c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b91da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b90020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b92850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b901b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f8791b79020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f8791b79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b79530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b796c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b774d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b799e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b79b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b79d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b78020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b781b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b78340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b78660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b78a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b78c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b78da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b77020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b79850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b771b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f8791b64020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f8791b64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b643a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b64530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b646c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b624d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b649e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b64b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b64d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b63020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b631b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b63340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b634d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b63660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b637f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b63a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b63c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b63da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b62020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b64850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b621b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f8791bd7580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f8791bd7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bd7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bd7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bd7c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bd5980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bd6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bd61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bd6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bd64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bd6660"/>
        <function-ref name="get" scoped="" ref="0x7f8791bd67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bd6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bd6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bd6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bd5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bd51b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bd5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bd54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bd7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bd5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bd57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f8791bbe580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f8791bbe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bbea00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bbeb90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bbed20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bbca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bbd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bbd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bbd4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bbd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bbd7f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791bbd980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bbdb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bbdca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bbde30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bbc120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bbc2b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bbc440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bbc5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bbd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bbc760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bbc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f8791ba4710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f8791ba4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ba4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ba4c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ba4db0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ba2a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ba31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ba3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ba34d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ba3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ba37f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791ba3980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ba3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ba3ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ba3e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ba2120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ba22b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791ba2440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ba25d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ba3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ba2760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ba28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f8791b5f580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f8791b5f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b5f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b5fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b5fc20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b5d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b5e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b5e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b5e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b5e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b5e660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b5e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b5e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b5eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b5eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b5d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b5d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b5d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b5d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b5fdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b5d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f8791b3c570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f8791b3c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b3c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b3ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b3cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b39980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b3a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b3a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b3a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b3a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b3a660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b3a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b3a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b3ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b3aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b39020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b391b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b39340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b394d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b3cda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b39660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b397f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f8791b27570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f8791b27570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b278f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b27a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b27c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b25980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b26020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b26340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b26660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b267f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b26980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b26b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b26ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b25020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b251b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b25340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b254d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b27da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b25660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f8791b4b580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f8791b4b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b4b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b4ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b4bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b49980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b4a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b4a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b4a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b4a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b4a660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b4a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b4a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b4ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b4aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b49020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b491b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b49340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b494d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b4bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b49660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f8791b9f710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f8791b9f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b9fc90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b9fe20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b9e020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b9dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b9e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b9e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b9e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b9e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b9e980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b9eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b9eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b9ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b9d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b9d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b9d440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b9d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b9d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b9e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b9d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b9da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f8791b868a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f8791b868a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b86c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b86db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b85020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b84c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b85340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b854d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b85660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b857f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b85980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b85b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b85ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b85e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b84020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b842b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b84440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b845d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b84760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b851b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b848f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b84a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f8791b718a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f8791b718a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b71c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b71db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b70020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b6fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b70340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b704d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b70660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b707f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b70980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b70b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b70ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b70e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b6f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b6f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b6f440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b6f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b6f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b701b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b6f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b6fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f8791b39d40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f8791b39d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b380e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b38270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b38400"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b361b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b38720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b388b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b38a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b38bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b38d60"/>
        <function-ref name="get" scoped="" ref="0x7f8791b37020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b37340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b374d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b37760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b378f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b37a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b37c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b38590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b37da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f8791b53d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f8791b53d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b520e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b52270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b52400"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b52720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b528b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b52a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b52bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b52d60"/>
        <function-ref name="get" scoped="" ref="0x7f8791b51020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b51340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b514d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b51760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b518f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b51a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b51c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b52590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b51da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f8791bd0d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f8791bd0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bcf100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bcf290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bcf420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bcd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bcf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bcf8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bcfa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bcfbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bcfd80"/>
        <function-ref name="get" scoped="" ref="0x7f8791bce020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bce1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bce340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bce4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bce760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bce8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bcea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bcec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bcf5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bceda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f8791bb7e50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f8791bb7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bb6210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bb63a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bb6530"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bb4340"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bb6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bb69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bb6b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bb6d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bb5020"/>
        <function-ref name="get" scoped="" ref="0x7f8791bb51b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bb5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bb54d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bb5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bb58f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bb5a80"/>
        <function-ref name="set" scoped="" ref="0x7f8791bb5c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bb5da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bb66c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bb4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f8791b778a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f8791b778a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b77c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b77db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b75020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b74c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b75340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b754d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b75660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b757f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b75980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b75b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b75ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b75e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b74020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b742b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b74440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b745d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b74760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b751b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b748f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b74a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f8791bb2e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f8791bb2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bb0210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bb03a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bb0530"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bae340"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bb0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bb09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bb0b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bb0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791baf020"/>
        <function-ref name="get" scoped="" ref="0x7f8791baf1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791baf340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791baf4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791baf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791baf8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bafa80"/>
        <function-ref name="set" scoped="" ref="0x7f8791bafc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bafda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bb06c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bae020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f8791b97020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f8791b97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b97530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b976c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b954d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b979e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b97b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b97d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b96020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b961b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b96340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b96660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b96a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b96c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b96da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b95020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b97850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b951b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f8791b7e020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f8791b7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b7e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b7e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b7e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b7c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b7e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b7eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b7ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b7d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b7d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b7d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b7d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b7d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b7d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b7da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b7dc10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b7dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b7c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b7e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b7c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b7c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f8791b69020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f8791b69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b69530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b696c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b674d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b699e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b69b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b69d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b681b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b68340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b68660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b68a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b68c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b68da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b67020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b69850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b671b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f8791b4ed50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f8791b4ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b4d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b4d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b4d420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b4b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b4d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b4d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b4da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b4dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b4dd80"/>
        <function-ref name="get" scoped="" ref="0x7f8791b4c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b4c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b4c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b4c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b4c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b4c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b4ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b4cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b4d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b4cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f8791bda530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f8791bda530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bda8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bdaa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bdabd0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791be8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791be9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791be91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791be9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791be94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791be9660"/>
        <function-ref name="get" scoped="" ref="0x7f8791be97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791be9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791be9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791be9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791be8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791be81b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791be8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791be84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bdad60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791be8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791be87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f8791bc3580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f8791bc3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bc3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bc3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bc3c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bc1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bc2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bc21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bc2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bc24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bc2660"/>
        <function-ref name="get" scoped="" ref="0x7f8791bc27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bc2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bc2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bc2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bc1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bc11b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bc1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bc14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bc3db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bc1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bc17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f8791ba9710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f8791ba9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ba9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ba9c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ba9db0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ba7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ba81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ba8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ba84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ba8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ba87f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791ba8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ba8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ba8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ba8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ba7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ba72b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791ba7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ba75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ba8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ba7760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ba78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f8791b908a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f8791b908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b90c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b90db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b8f020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b8ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b8f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b8f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b8f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b8f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b8f980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b8fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b8fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b8fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b8e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b8e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b8e440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b8e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b8e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b8f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b8e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b8ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f8791b49d50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f8791b49d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b48100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b48290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b48420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b48740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b488d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b48a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b48bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b48d80"/>
        <function-ref name="get" scoped="" ref="0x7f8791b47020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b47340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b474d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b47760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b478f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b47a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b47c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b485b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b47da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f8791b41570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f8791b41570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b418f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b41a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b41c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b3f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b40020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b40340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b40660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b407f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b40980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b40b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b40ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b3f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b3f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b3f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b3f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b41da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b3f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b3f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f8791b31570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f8791b31570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b318f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b31a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b31c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b2f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b30020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b30340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b30660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b307f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b30980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b30b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b30ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b2f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b2f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b2f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b2f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b31da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b2f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b2f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f8791b8b8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f8791b8b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b8bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b8bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b8a020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b89c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b8a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b8a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b8a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b8a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b8a980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b8ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b8aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b8ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b89020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b892b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b89440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b895d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b89760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b8a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b898f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b89a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f8791b46580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f8791b46580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b46900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b46a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b46c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b44980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b45020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b45340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b45660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b457f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b45980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b45b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b45ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b44020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b441b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b44340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b444d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b46db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b44660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f8791bd5d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f8791bd5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bd4100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bd4290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bd4420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bd21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bd4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bd48d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bd4a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bd4bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bd4d80"/>
        <function-ref name="get" scoped="" ref="0x7f8791bd3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bd31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bd3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bd34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bd3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bd38f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bd3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bd3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bd45b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bd3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f8791bbce50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f8791bbce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bbb210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bbb3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bbb530"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bb9340"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bbb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bbb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bbbb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bbbd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bba020"/>
        <function-ref name="get" scoped="" ref="0x7f8791bba1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bba340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bba4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bba660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bba8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bbaa80"/>
        <function-ref name="set" scoped="" ref="0x7f8791bbac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bbada0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bbb6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bb9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f8791ba2e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f8791ba2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ba1210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ba13a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ba1530"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b9f340"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ba1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ba19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ba1b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ba1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ba0020"/>
        <function-ref name="get" scoped="" ref="0x7f8791ba01b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ba0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ba04d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ba0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ba08f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ba0a80"/>
        <function-ref name="set" scoped="" ref="0x7f8791ba0c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ba0da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ba16c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b9f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f8791b50580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f8791b50580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b50900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b50a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b50c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b4e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b4f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b4f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b4f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b4f660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b4f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b4f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b4fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b4fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b4e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b4e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b4e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b4e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b50db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b4e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f8791b36570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f8791b36570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b368f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b36a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b36c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b34980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b35020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b35340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b35660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b357f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b35980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b35b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b35ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b34020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b341b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b34340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b344d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b36da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b34660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f8791b9c020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f8791b9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b9c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b9c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b9c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b9a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b9c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b9cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b9cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b9b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b9b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b9b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b9b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b9b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b9b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b9ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b9bc10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b9bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b9a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b9c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b9a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f8791b83020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f8791b83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b83530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b836c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b814d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b839e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b83b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b83d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b82020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b821b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b82340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b82660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b82a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b82c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b82da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b81020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b83850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b811b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b81340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f8791b6e020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f8791b6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b6e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b6e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b6e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b6c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b6e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b6eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b6ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b6d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b6d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b6d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b6d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b6d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b6d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b6da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b6dc10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b6dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b6c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b6e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b6c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b6c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f8791bcd580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f8791bcd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bcd900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bcda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bcdc20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bcb980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bcc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bcc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bcc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bcc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bcc660"/>
        <function-ref name="get" scoped="" ref="0x7f8791bcc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bcc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bccb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bccca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bcb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bcb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bcb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bcb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bcddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bcb660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bcb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f8791b73020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f8791b73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b73530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b736c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b714d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b739e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b73b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b73d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b72020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b721b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b72340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b724d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b72660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b72a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b72c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b72da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b71020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b73850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b711b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b71340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f8791bc8580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f8791bc8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bc8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bc8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bc8c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bc6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bc7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bc71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bc7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bc74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bc7660"/>
        <function-ref name="get" scoped="" ref="0x7f8791bc77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bc7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bc7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bc7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bc6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bc61b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bc6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bc64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bc8db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bc6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bc67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f8791bae710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f8791bae710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791baea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791baec20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791baedb0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791baca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bad340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bad4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bad7f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791bad980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791badb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791badca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bade30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bac120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bac2b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bac440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bac5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bad020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bac760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f8791b958a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f8791b958a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b95c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b95db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b94020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b93c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b94340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b944d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b94660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b947f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b94980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b94b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b94ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b94e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b93020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b932b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b93440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b935d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b93760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b941b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b938f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b93a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f8791b7c8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f8791b7c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b7cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b7cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b7b020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b7ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b7b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b7b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b7b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b7b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b7b980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b7bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b7bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b7be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b7a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b7a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b7a440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b7a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b7a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b7b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b7a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b7aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f8791b678a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f8791b678a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b67c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b67db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b66020"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b65c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b66340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b664d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b66660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b667f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b66980"/>
        <function-ref name="get" scoped="" ref="0x7f8791b66b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b66ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b66e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b65020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b652b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b65440"/>
        <function-ref name="set" scoped="" ref="0x7f8791b655d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b65760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b661b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b658f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b65a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f8791be8d50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f8791be8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bd9100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bd9290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bd9420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bd71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bd9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bd98d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bd9a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bd9bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bd9d80"/>
        <function-ref name="get" scoped="" ref="0x7f8791bd8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bd81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bd8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bd84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bd8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bd88f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bd8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bd8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bd95b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bd8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f8791bc1d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f8791bc1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791bc0100"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791bc0290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791bc0420"/>
        <function-ref name="clr" scoped="" ref="0x7f8791bbe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791bc0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791bc08d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791bc0a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791bc0bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791bc0d80"/>
        <function-ref name="get" scoped="" ref="0x7f8791bbf020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791bbf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791bbf340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791bbf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791bbf760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791bbf8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791bbfa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791bbfc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791bc05b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791bbfda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791bbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f8791ba7e50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f8791ba7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ba6210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ba63a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ba6530"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ba4340"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ba6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ba69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ba6b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ba6d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ba5020"/>
        <function-ref name="get" scoped="" ref="0x7f8791ba51b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ba5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ba54d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ba5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ba58f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ba5a80"/>
        <function-ref name="set" scoped="" ref="0x7f8791ba5c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ba5da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ba66c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ba4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ba41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f8791b8d020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f8791b8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b8d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b8d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b8d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b8b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b8d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b8db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b8dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b8c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b8c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b8c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b8c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b8c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b8c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b8ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b8cc10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b8cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b8b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b8d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b8b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f8791b3fd40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f8791b3fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b3e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b3e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b3e400"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b3c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b3e720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b3e8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b3ea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b3ebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b3ed60"/>
        <function-ref name="get" scoped="" ref="0x7f8791b3d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b3d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b3d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b3d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b3d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b3d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b3da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b3dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b3e590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b3dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f8791b2c560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f8791b2c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b2c8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b2ca70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b2cc00"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b2a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b2b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b2b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b2b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b2b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b2b660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b2b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b2b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b2bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b2bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b2a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b2a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b2a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b2a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b2cd90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b2a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f8791b5a580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f8791b5a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b5a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b5aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b5ac20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b58980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b59020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b59340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b59660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b597f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b59980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b59b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b59ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b58020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b581b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b58340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b584d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b5adb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b58660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f8791b88020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f8791b88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b88530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b886c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b864d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b889e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b88b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b88d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b871b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791b87340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b874d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b87660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b877f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b87a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b87c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791b87da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b86020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b88850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b861b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b86340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f8791b2ad40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f8791b2ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b290e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b29270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b29400"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b29720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b298b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b29a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b29bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b29d60"/>
        <function-ref name="get" scoped="" ref="0x7f8791b28020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b28340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b284d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b28760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b288f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b28a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b28c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b29590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b28da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f8791b22580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f8791b22580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b22900"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b22a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b22c20"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b20980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b21340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b21660"/>
        <function-ref name="get" scoped="" ref="0x7f8791b217f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b21980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b21b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b21ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b20020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b201b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b20340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b204d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b22db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b20660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f8791b628f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f8791b628f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791b610a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791b61230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791b613c0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791b5f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791b616e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791b61870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791b61a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791b61b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791b61d20"/>
        <function-ref name="get" scoped="" ref="0x7f8791b60020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791b601b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791b60340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791b604d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791b60760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791b608f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791b60a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791b60c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791b61550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791b60da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791b5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791b1dd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791b1dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791aee0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791aee270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791aee400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791aec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791aee720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791aee8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791aeea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791aeebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791aeed60"/>
        <function-ref name="get" scoped="" ref="0x7f8791aed020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791aed1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791aed340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791aed4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791aed760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791aed8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791aeda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791aedc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791aedda0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791aee590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791aec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ae9260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ae9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ae95e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ae9770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ae9900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ae7660"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ae9c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ae9db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ae8020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ae81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ae8340"/>
        <function-ref name="get" scoped="" ref="0x7f8791ae84d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ae8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ae87f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ae8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ae8c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ae8da0"/>
        <function-ref name="set" scoped="" ref="0x7f8791ae7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ae71b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ae7340"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ae9a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ae74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ae4740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ae4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ae4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ae4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ae4de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ae2a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ae31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ae3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ae34d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ae3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ae37f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791ae3980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ae3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ae3ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ae3e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ae2120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ae22b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791ae2440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ae25d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ae2760"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ae3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ae28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791adfb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791adfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ade020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ade1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ade340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791adc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ade660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ade7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ade980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791adeb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791adeca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791adee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791add020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791add1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791add340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791add5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791add760"/>
        <function-ref name="set" scoped="" ref="0x7f8791add8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791adda80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791addc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ade4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791addda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ad9060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ad9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ad93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ad9570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ad9700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ad64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ad9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ad9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ad9d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ad7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ad71b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791ad7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ad74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ad7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ad77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ad7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ad7c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791ad7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ad6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ad61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ad9890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ad6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ad3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ad3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ad38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ad3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ad3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ad1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ad2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ad21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ad2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ad24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ad2660"/>
        <function-ref name="get" scoped="" ref="0x7f8791ad27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ad2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ad2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ad2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ad1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ad11b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791ad1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ad14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ad1660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ad3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ad17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791aceb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791aceb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791acd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791acd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791acd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791acb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791acd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791acd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791acd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791acdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791acdca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791acde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791acc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791acc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791acc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791acc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791acc760"/>
        <function-ref name="set" scoped="" ref="0x7f8791acc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791acca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791accc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791acd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791accda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ac8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ac8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ac83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ac8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ac8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ac64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ac8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ac8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ac8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ac7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ac71b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791ac7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ac74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ac7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ac77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ac7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ac7c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791ac7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ac6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ac61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ac8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ac6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ac3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ac3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ac38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ac3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ac3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ac1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ac2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ac21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ac2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ac24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ac2660"/>
        <function-ref name="get" scoped="" ref="0x7f8791ac27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ac2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ac2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ac2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ac1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ac11b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791ac1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ac14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ac1660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ac3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ac17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791abeb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791abeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791abd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791abd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791abd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791abb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791abd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791abd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791abd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791abdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791abdca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791abde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791abc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791abc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791abc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791abc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791abc760"/>
        <function-ref name="set" scoped="" ref="0x7f8791abc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791abca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791abcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791abd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791abcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ab8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ab8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ab83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ab8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ab8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ab64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ab8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ab8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ab8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ab7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ab71b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791ab7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ab74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ab7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ab77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ab7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ab7c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791ab7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ab6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ab61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ab8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ab6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791ab3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791ab3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791ab38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791ab3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791ab3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791ab1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791ab2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791ab21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791ab2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791ab24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791ab2660"/>
        <function-ref name="get" scoped="" ref="0x7f8791ab27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791ab2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791ab2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791ab2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791ab1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791ab11b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791ab1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791ab14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791ab1660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791ab3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791ab17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791aadd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791aadd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791aac0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791aac270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791aac400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791aaa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791aac720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791aac8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791aaca40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791aacbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791aacd60"/>
        <function-ref name="get" scoped="" ref="0x7f8791aab020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791aab1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791aab340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791aab4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791aab760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791aab8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791aaba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791aabc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791aabda0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791aac590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791aaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791aa7260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791aa7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791aa75e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791aa7770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791aa7900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791aa5660"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791aa7c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791aa7db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791aa6020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791aa61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791aa6340"/>
        <function-ref name="get" scoped="" ref="0x7f8791aa64d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791aa6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791aa67f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791aa6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791aa6c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791aa6da0"/>
        <function-ref name="set" scoped="" ref="0x7f8791aa5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791aa51b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791aa5340"/>
        <function-ref name="clr" scoped="" ref="0x7f8791aa7a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791aa54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791aa2740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791aa2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791aa2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791aa2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791aa2de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791aa0a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791aa11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791aa1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791aa14d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791aa1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791aa17f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791aa1980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791aa1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791aa1ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791aa1e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791aa0120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791aa02b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791aa0440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791aa05d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791aa0760"/>
        <function-ref name="clr" scoped="" ref="0x7f8791aa1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791aa08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a9db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a9db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a9c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a9c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a9c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a9a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a9c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a9c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a9c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a9cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a9cca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a9ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a9b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a9b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a9b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a9b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a9b760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a9b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a9ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a9bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a9c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a9bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a97060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a97060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a973e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a97570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a97700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a954d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a97a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a97bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a97d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a96020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a961b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a96340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a96660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a96a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a96c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a96da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a95020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a97890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a92540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a92540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a928c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a92a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a92be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a90980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a91020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a91340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a91660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a917f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a91980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a91b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a91ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a90020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a901b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a90340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a904d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a90660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a92d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a8db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a8db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a8c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a8c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a8c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a8a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a8c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a8c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a8c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a8cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a8cca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a8ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a8b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a8b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a8b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a8b760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a8b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a8ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a8bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a8c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a8bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a87060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a87060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a873e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a87570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a87700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a844d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a87a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a87bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a87d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a85020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a851b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a85340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a854d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a85660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a857f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a85a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a85c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a85da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a84020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a87890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a84340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a81540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a81540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a818c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a81a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a81be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a7f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a80020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a801b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a80340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a80660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a807f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a80980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a80b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a80ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a7f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a7f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a7f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a7f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a7f660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a81d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a7f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a7cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a7cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a7b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a7b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a7b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a79020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a7b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a7b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a7b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a7bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a7bca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a7be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a7a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a7a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a7a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a7a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a7a760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a7a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a7aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a7ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a7b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a7ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a76060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a76060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a763e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a76570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a76700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a744d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a76a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a76bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a76d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a751b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a75340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a754d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a75660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a757f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a75a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a75c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a75da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a74020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a741b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a76890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a74340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a71540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a71540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a718c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a71a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a71be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a6f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a70020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a70340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a70660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a707f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a70980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a70b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a70ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a6f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a6f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a6f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a6f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a6f660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a71d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a6cdc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a6cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a6b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a6b310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a6b4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a6b7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a6b950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a6bae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a6bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a6be00"/>
        <function-ref name="get" scoped="" ref="0x7f8791a6a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a6a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a6a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a6a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a6a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a6a8f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a6aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a6ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a6ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a6b630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a66260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a66260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a665e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a66770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a66900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a64660"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a66c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a66db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a65020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a65340"/>
        <function-ref name="get" scoped="" ref="0x7f8791a654d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a65660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a657f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a65980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a65c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a65da0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a64020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a641b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a64340"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a66a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a61740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a61740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a61ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a61c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a61de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a5fa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a60340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a604d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a60660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a607f0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a60980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a60b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a60ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a60e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a5f120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a5f2b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a5f440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a5f5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a5f760"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a60020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a5cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a5cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a5a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a5a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a5a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a58020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a5a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a5a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a5a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a5ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a5aca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a5ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a59020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a591b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a59340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a595d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a59760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a598f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a59a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a59c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a5a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a59da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a55060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a55060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a553e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a55570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a55700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a534d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a55a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a55bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a55d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a54020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a541b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a54340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a544d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a54660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a547f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a54a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a54c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a54da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a53020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a531b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a55890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a50540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a50540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a508c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a50a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a50be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a4e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a4f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a4f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a4f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a4f660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a4f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a4f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a4fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a4fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a4e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a4e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a4e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a4e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a4e660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a50d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a4bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a4bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a4a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a4a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a4a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a48020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a4a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a4a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a4a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a4ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a4aca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a4ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a49020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a491b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a49340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a495d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a49760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a498f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a49a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a49c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a4a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a49da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a45060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a45060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a453e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a45570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a45700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a434d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a45a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a45bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a45d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a44020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a441b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a44340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a444d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a44660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a447f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a44a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a44c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a44da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a43020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a431b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a45890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a40540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a40540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a408c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a40a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a40be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a3e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a3f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a3f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a3f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a3f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a3f660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a3f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a3f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a3fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a3fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a3e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a3e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a3e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a3e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a3e660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a40d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a3e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a3bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a3bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a3a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a3a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a3a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a38020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a3a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a3a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a3a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a3ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a3aca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a3ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a39020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a391b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a39340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a395d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a39760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a398f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a39a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a39c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a3a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a39da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a35060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a353e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a35570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a35700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a334d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a35a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a35bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a35d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a34020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a341b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a34340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a344d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a34660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a34a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a34c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a34da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a33020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a331b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a35890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a33340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a2f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a2f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a2f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a2fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a2fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a2d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a2e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a2e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a2e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a2e660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a2e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a2e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a2eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a2eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a2d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a2d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a2d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a2d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a2d660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a2fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a2d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a2ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a2ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a29020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a291b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a29340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a27020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a29660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a297f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a29980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a29b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a29ca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a29e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a28020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a281b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a28340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a285d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a28760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a288f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a28a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a28c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a294d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a28da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a24060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a24060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a243e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a24570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a24700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a224d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a24a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a24bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a24d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a23020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a231b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a23340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a234d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a23660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a23a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a23c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a23da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a22020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a221b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a24890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a22340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a1f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a1f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a1f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a1fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a1fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a1d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a1e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a1e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a1e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a1e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a1e660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a1e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a1e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a1eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a1eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a1d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a1d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a1d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a1d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a1d660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a1fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a1d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a1ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a1ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a19020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a191b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a19340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a17020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a19660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a197f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a19980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a19b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a19ca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a19e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a18020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a181b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a18340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a185d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a18760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a188f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a18a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a18c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a194d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a18da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a14060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a143e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a14570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a14700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a124d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a14a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a14bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a14d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a131b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a13340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a13660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a13a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a13c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a13da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a12020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a121b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a14890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a0f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a0f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a0f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a0fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a0fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a0d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a0e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a0e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a0e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a0e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a0e660"/>
        <function-ref name="get" scoped="" ref="0x7f8791a0e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a0e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a0eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a0eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a0d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a0d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791a0d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a0d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a0d660"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a0fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a0d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a0ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a0ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a08020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a081b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a08340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a06020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a08660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a087f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a08980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a08b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a08ca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a08e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a07020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a071b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a07340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a075d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a07760"/>
        <function-ref name="set" scoped="" ref="0x7f8791a078f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a07a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a07c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a084d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a07da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8791a03060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f8791a03060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791a033e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791a03570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791a03700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791a014d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791a03a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791a03bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791a03d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791a02020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791a021b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791a02340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791a024d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791a02660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791a027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791a02a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791a02c10"/>
        <function-ref name="set" scoped="" ref="0x7f8791a02da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791a01020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791a011b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791a03890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791a01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f87919fe540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f87919fe540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87919fe8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f87919fea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f87919febe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f87919fc980"/>
        <function-ref name="toggle" scoped="" ref="0x7f87919fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87919fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f87919fd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87919fd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87919fd660"/>
        <function-ref name="get" scoped="" ref="0x7f87919fd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f87919fd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87919fdb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f87919fdca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f87919fc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f87919fc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f87919fc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f87919fc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f87919fc660"/>
        <function-ref name="clr" scoped="" ref="0x7f87919fed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f87919fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f87919f9b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f87919f9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87919f8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f87919f81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f87919f8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f87919f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f87919f8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87919f87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f87919f8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87919f8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87919f8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f87919f8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f87919f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87919f71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f87919f7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f87919f75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f87919f7760"/>
        <function-ref name="set" scoped="" ref="0x7f87919f78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f87919f7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f87919f7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f87919f84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f87919f7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f87919f3060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f87919f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87919f33e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f87919f3570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f87919f3700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f87919f14d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f87919f3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87919f3bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f87919f3d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87919f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87919f21b0"/>
        <function-ref name="get" scoped="" ref="0x7f87919f2340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f87919f24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87919f2660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f87919f27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f87919f2a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f87919f2c10"/>
        <function-ref name="set" scoped="" ref="0x7f87919f2da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f87919f1020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f87919f11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f87919f3890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f87919f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f87919ee540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f87919ee540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87919ee8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f87919eea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f87919eebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f87919ec980"/>
        <function-ref name="toggle" scoped="" ref="0x7f87919ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87919ed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f87919ed340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87919ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87919ed660"/>
        <function-ref name="get" scoped="" ref="0x7f87919ed7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f87919ed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87919edb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f87919edca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f87919ec020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f87919ec1b0"/>
        <function-ref name="set" scoped="" ref="0x7f87919ec340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f87919ec4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f87919ec660"/>
        <function-ref name="clr" scoped="" ref="0x7f87919eed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f87919ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879195e610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879195e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879195e990"/>
        <function-ref name="isInput" scoped="" ref="0x7f879195eb20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879195ecb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879195c980"/>
        <function-ref name="toggle" scoped="" ref="0x7f879195d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879195d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879195d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f879195d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879195d660"/>
        <function-ref name="get" scoped="" ref="0x7f879195d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f879195d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879195db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f879195dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879195c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f879195c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879195c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879195c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f879195c660"/>
        <function-ref name="clr" scoped="" ref="0x7f879195ee40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879195c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8791970480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8791970480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791970800"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791970990"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791970b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791970cb0"/>
        <function-ref name="get" scoped="" ref="0x7f8791970e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879195e020"/>
        <function-ref name="set" scoped="" ref="0x7f879195e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879195e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8791958de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791958de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791957180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791957310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f87919574a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f87919551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f87919577c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791957950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791957ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791957c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791957e00"/>
        <function-ref name="get" scoped="" ref="0x7f8791956020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f87919561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791956340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f87919564d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791956760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f87919568f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791956a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791956c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791956da0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791957630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791955020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879195ab20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879195ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791958020"/>
        <function-ref name="isInput" scoped="" ref="0x7f87919581b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791958340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87919584d0"/>
        <function-ref name="get" scoped="" ref="0x7f8791958660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87919587f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791958980"/>
        <function-ref name="clr" scoped="" ref="0x7f8791958b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8791952480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791952480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791952800"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791952990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791952b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f87919507f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791952e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791951020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f87919511b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791951340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87919514d0"/>
        <function-ref name="get" scoped="" ref="0x7f8791951660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f87919517f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791951980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791951b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791951da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791950020"/>
        <function-ref name="set" scoped="" ref="0x7f87919501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791950340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f87919504d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791952cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791950660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f87919531b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f87919531b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791953530"/>
        <function-ref name="isInput" scoped="" ref="0x7f87919536c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791953850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87919539e0"/>
        <function-ref name="get" scoped="" ref="0x7f8791953b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791953d00"/>
        <function-ref name="set" scoped="" ref="0x7f8791952020"/>
        <function-ref name="clr" scoped="" ref="0x7f87919521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f87918b0a50" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f87918b0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f87918b0dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f87918b9020"/>
        <function-ref name="start" scoped="" ref="0x7f87918b91b0"/>
        <function-ref name="stop" scoped="" ref="0x7f87918b9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f8791945cf0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f8791945cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f87919420a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f87918d3910" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f87918d3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87918d3c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f87918d3e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879192b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879192b1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879192b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f87918b88f0" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f87918b88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87918b8c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87918b8e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87918c2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f87918c21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87918c2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f87918a9c20" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f87918a9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f87918b7020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f87918b71b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f87918b7340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f87918b74d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f87918b7660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f87918b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f87918b3180" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f87918b3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87918b3500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8791942360" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8791942360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f87919426e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8791942870"/>
        <function-ref name="led1On" scoped="" ref="0x7f8791942a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8791942b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8791942d20"/>
        <function-ref name="get" scoped="" ref="0x7f8791941020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f87919411b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f87919417f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791941340"/>
        <function-ref name="led0On" scoped="" ref="0x7f87919414d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8791941660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7f8791935820" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7f8791935820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8791934cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f879193f300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f87919340d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879193fc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f8791932660"/>
        <function-ref name="gett0" scoped="" ref="0x7f87919321e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879193f780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8791940480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f87919346e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8791940950"/>
        <function-ref name="stop" scoped="" ref="0x7f8791940e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f8791932cd0" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f8791932cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879192d220"/>
        <function-ref name="fired" scoped="" ref="0x7f87919307c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879192f590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879192f110"/>
        <function-ref name="getdt" scoped="" ref="0x7f879192db20"/>
        <function-ref name="gett0" scoped="" ref="0x7f879192d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8791930c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8791931940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879192fba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8791931e10"/>
        <function-ref name="stop" scoped="" ref="0x7f8791930340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f87918c38d0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f87918c38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f87918c3c50"/>
        <function-ref name="source" scoped="" ref="0x7f87918c3de0"/>
        <function-ref name="address" scoped="" ref="0x7f879192a020"/>
        <function-ref name="destination" scoped="" ref="0x7f879192a1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f879192a340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879192a4d0"/>
        <function-ref name="type" scoped="" ref="0x7f879192a660"/>
        <function-ref name="setType" scoped="" ref="0x7f879192a7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879192a980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879192ab10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879192aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8791879980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791879980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879154de80"/>
        <function-ref name="fired" scoped="" ref="0x7f879154e4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879154d260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879154eda0"/>
        <function-ref name="getdt" scoped="" ref="0x7f879154c7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f879154c320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879154e920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879154f5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879154d870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879154fa70"/>
        <function-ref name="stop" scoped="" ref="0x7f879154e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f879186f050" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f879186f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879186b630"/>
        <function-ref name="fired" scoped="" ref="0x7f879186eac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879186c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879186c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f879186a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f879186bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879186c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879186fc40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879186b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879186e170"/>
        <function-ref name="stop" scoped="" ref="0x7f879186e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f8791866c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f8791866c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8791861110"/>
        <function-ref name="fired" scoped="" ref="0x7f87918646a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f87918634a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8791863020"/>
        <function-ref name="getdt" scoped="" ref="0x7f8791861a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f8791861590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8791864b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8791865860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8791863ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8791865d30"/>
        <function-ref name="stop" scoped="" ref="0x7f8791864220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f879185c500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879185c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879185e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879186ae50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879186ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791866210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879161f870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879161f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879161c090"/>
        <function-ref name="fired" scoped="" ref="0x7f879161d090"/>
        <function-ref name="startAt" scoped="" ref="0x7f879161da10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879161d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879161c550"/>
        <function-ref name="start" scoped="" ref="0x7f879161e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879161ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879161f020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879161f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879161f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f87903b84f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f87903b84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87903b5db0"/>
        <function-ref name="fired" scoped="" ref="0x7f87903b7da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f87903b5760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87903b52a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f87903b42a0"/>
        <function-ref name="start" scoped="" ref="0x7f87903b73d0"/>
        <function-ref name="stop" scoped="" ref="0x7f87903b78e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f87903b9b10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f87903b9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87903b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f879039fda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879039fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879039e180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879039e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879039e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879039e630"/>
        <function-ref name="fired" scoped="" ref="0x7f879039e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f87903a1340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f87903a1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87903a16c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87903a1850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87903a19e0"/>
        <function-ref name="get" scoped="" ref="0x7f87903a1b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87903a1d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87903a0020"/>
        <function-ref name="getMode" scoped="" ref="0x7f87903a01b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87903a0340"/>
        <function-ref name="overflow" scoped="" ref="0x7f87903a04d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f87903a0660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f87903a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f87903a0a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f87903a0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87903a0e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f879039f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879039f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879039f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879039f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879039f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879039f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879039f980"/>
        <function-ref name="setControl" scoped="" ref="0x7f879039fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f87918271d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f87918271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791827550"/>
        <function-ref name="setEvent" scoped="" ref="0x7f87918276e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791827870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791827a00"/>
        <function-ref name="fired" scoped="" ref="0x7f8791827b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f879182c990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879182c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879182cd10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879182b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879182b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f879182b340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879182b4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879182b660"/>
        <function-ref name="getMode" scoped="" ref="0x7f879182b7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879182b980"/>
        <function-ref name="overflow" scoped="" ref="0x7f879182bb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f879182bca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879182be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f8791829720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8791829720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8791829aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791829c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791829dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791828020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87918281b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791828340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87918284d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791828660"/>
        <function-ref name="setControl" scoped="" ref="0x7f87918287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f8791816730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f8791816730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8791816ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791816c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791816dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791815020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87918151b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791815340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87918154d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791815660"/>
        <function-ref name="setControl" scoped="" ref="0x7f87918157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f8791811280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f8791811280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8791811600"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791811790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791811920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791811ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8791811c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791811dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791810020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f87918101b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8791810340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f8791818700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f8791818700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791818a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791818c10"/>
        <function-ref name="captured" scoped="" ref="0x7f8791818da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791816020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87918161b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791816340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f8791805020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f8791805020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87918053a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791805530"/>
        <function-ref name="captured" scoped="" ref="0x7f87918056c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791805850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87918059e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791805b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f879181e890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f879181e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879181ec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879181eda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791818020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f87918181b0"/>
        <function-ref name="fired" scoped="" ref="0x7f8791818340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f8791806160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f8791806160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87918064e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791806670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791806800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791806990"/>
        <function-ref name="fired" scoped="" ref="0x7f8791806b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f87917fbae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f87917fbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917fbe60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f87917fa020"/>
        <function-ref name="captured" scoped="" ref="0x7f87917fa1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917fa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917fa4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f87917fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f8791804020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f8791804020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87918043a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791804530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87918046c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791804850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87918049e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791804b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791804d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791803020"/>
        <function-ref name="setControl" scoped="" ref="0x7f87918031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f87918220c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f87918220c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8791822440"/>
        <function-ref name="getControl" scoped="" ref="0x7f87918225d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791822760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f87918228f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8791822a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791822c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791822da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791821020"/>
        <function-ref name="setControl" scoped="" ref="0x7f87918211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f879180ca20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f879180ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879180cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879180b020"/>
        <function-ref name="captured" scoped="" ref="0x7f879180b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879180b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879180b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879180b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f879180dbb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f879180dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879180c020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879180c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879180c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879180c4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f879180c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f879180e730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f879180e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879180eab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879180ec40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879180edd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879180d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879180d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879180d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879180d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879180d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f879180d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f8791814a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f8791814a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791814da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791813020"/>
        <function-ref name="captured" scoped="" ref="0x7f87918131b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791813340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87918134d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791813660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f8791802570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f8791802570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87918028f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791802a80"/>
        <function-ref name="captured" scoped="" ref="0x7f8791802c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791802da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791801020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f87918011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f879180ba50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f879180ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879180bdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879180a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879180a1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879180a340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879180a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879180a660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879180a7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879180a980"/>
        <function-ref name="setControl" scoped="" ref="0x7f879180ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f8791815bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f8791815bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791814020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f87918141b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791814340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f87918144d0"/>
        <function-ref name="fired" scoped="" ref="0x7f8791814660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f8791826830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f8791826830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791826bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8791826d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791823020"/>
        <function-ref name="get" scoped="" ref="0x7f87918231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791823340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87918234d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791823660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87918237f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791823980"/>
        <function-ref name="setMode" scoped="" ref="0x7f8791823b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8791823ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f8791803570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f8791803570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791803af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791803c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791803e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791802020"/>
        <function-ref name="fired" scoped="" ref="0x7f87918021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f879181f410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f879181f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879181f790"/>
        <function-ref name="getControl" scoped="" ref="0x7f879181f920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879181fab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879181fc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879181fdd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879181e020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879181e1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879181e340"/>
        <function-ref name="setControl" scoped="" ref="0x7f879181e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f87918015a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f87918015a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8791801920"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791801ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791801c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791801dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8791800020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87918001b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791800340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f87918004d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8791800660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f8791819410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f8791819410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791819790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791819920"/>
        <function-ref name="captured" scoped="" ref="0x7f8791819ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791819c40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791819dd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879181f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f8791809da0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f8791809da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791808180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791808310"/>
        <function-ref name="captured" scoped="" ref="0x7f87918084a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791808630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87918087c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791808950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f8791821570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f8791821570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87918218f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791821a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791821c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791821da0"/>
        <function-ref name="fired" scoped="" ref="0x7f8791820020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f8791809020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f8791809020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87918093a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791809530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87918096c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791809850"/>
        <function-ref name="fired" scoped="" ref="0x7f87918099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f87917ff890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f87917ff890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917ffc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f87917ffda0"/>
        <function-ref name="captured" scoped="" ref="0x7f87917fe020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917fe1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917fe340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f87917fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f8791808d40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f8791808d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87918070e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791807270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791807400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791807590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8791807720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87918078b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791807a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791807bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8791807d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f87918139e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f87918139e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791813d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8791812020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87918121b0"/>
        <function-ref name="get" scoped="" ref="0x7f8791812340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87918124d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791812660"/>
        <function-ref name="getMode" scoped="" ref="0x7f87918127f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791812980"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791812b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f8791812ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8791812e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f879180f700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f879180f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879180fa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879180fc10"/>
        <function-ref name="captured" scoped="" ref="0x7f879180fda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879180e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879180e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879180e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f8791800a20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f8791800a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791800da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f87917ff020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87917ff1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f87917ff340"/>
        <function-ref name="fired" scoped="" ref="0x7f87917ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f87917fcd40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f87917fcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917fb0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f87917fb270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87917fb400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f87917fb590"/>
        <function-ref name="fired" scoped="" ref="0x7f87917fb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f8791810700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f8791810700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791810b80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791810d10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879180f020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879180f1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f879180f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f87917fe8c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f87917fe8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87917fec40"/>
        <function-ref name="getControl" scoped="" ref="0x7f87917fedd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87917fc020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f87917fc1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87917fc340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87917fc4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87917fc660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f87917fc7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f87917fc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f87917c2940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f87917c2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917c2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f87917c22f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f87917c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917c2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f87917c1020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f87917c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f87917c3bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f87917c3bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f87917c53e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f87917c53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87917c5760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87917c58f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87917c5a80"/>
        <function-ref name="get" scoped="" ref="0x7f87917c5c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87917c5da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917c3020"/>
        <function-ref name="getMode" scoped="" ref="0x7f87917c31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917c3340"/>
        <function-ref name="overflow" scoped="" ref="0x7f87917c34d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f87917c3660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f87917c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f87917bb750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f87917bb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917bbad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f87917bb100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f87917bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917bb480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f87917bbda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f87917bbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917ba180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f87917bca60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f87917bca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917bce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f87917bd260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f87917bd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87917bd5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87917bd770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87917bd900"/>
        <function-ref name="get" scoped="" ref="0x7f87917bda90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87917bdc20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917bddb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f87917bc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917bc1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f87917bc340"/>
        <function-ref name="setMode" scoped="" ref="0x7f87917bc4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f87917bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f87917707a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f87917707a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791770b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791770cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f8791770e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879176f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879176f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879176f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f87917b76d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f87917b76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87917b7a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f87917b7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87917b7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791771020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87917711b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791771340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87917714d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791771660"/>
        <function-ref name="setControl" scoped="" ref="0x7f87917717f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879176ec50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879176ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879176d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8791771ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8791771ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791771e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791770020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87917701b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791770340"/>
        <function-ref name="fired" scoped="" ref="0x7f87917704d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879176f610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879176f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879176f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879176fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879176fcb0"/>
        <function-ref name="get" scoped="" ref="0x7f879176fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879176e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879176e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879176e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879176e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879176e660"/>
        <function-ref name="setMode" scoped="" ref="0x7f879176e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879176e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8791769cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f8791769cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917670a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791767230"/>
        <function-ref name="captured" scoped="" ref="0x7f87917673c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791767550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917676e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791767870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879176bb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879176bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879176a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f879176a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879176a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879176a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879176a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879176a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879176a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879176ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f879176aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f87917652f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f87917652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791765670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8791769020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8791769020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917693a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791769530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87917696c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791769850"/>
        <function-ref name="fired" scoped="" ref="0x7f87917699e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791767b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791767b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791766020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87917661b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791766340"/>
        <function-ref name="get" scoped="" ref="0x7f87917664d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791766660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917667f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791766980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791766b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791766ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8791766e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8791765020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f87917602f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f87917602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791760670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791760800"/>
        <function-ref name="captured" scoped="" ref="0x7f8791760990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791760b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791760cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791760e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8791762220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8791762220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87917625a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791762730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87917628c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791762a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8791762be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791762d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791761020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f87917611b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8791761340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879175e7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879175e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879175eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8791761610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8791761610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791761990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791761b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791761cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791761e40"/>
        <function-ref name="fired" scoped="" ref="0x7f8791760020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879175f160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879175f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879175f4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879175f670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879175f800"/>
        <function-ref name="get" scoped="" ref="0x7f879175f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879175fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879175fcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879175fe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879175e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879175e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879175e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879175e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f87917587a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f87917587a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791758b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791758cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f8791758e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791757020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917571b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791757340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879175b6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879175b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879175ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7f879175bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879175bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879175a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879175a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879175a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879175a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879175a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f879175a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f8791756c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f8791756c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791755020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879175aac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879175aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879175ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791758020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87917581b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791758340"/>
        <function-ref name="fired" scoped="" ref="0x7f87917584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791757610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791757610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791757990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8791757b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791757cb0"/>
        <function-ref name="get" scoped="" ref="0x7f8791757e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791756020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917561b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791756340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917564d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791756660"/>
        <function-ref name="setMode" scoped="" ref="0x7f87917567f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8791756980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8791751cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f8791751cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917500a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791750230"/>
        <function-ref name="captured" scoped="" ref="0x7f87917503c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791750550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917506e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791750870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8791753b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8791753b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8791752020"/>
        <function-ref name="getControl" scoped="" ref="0x7f87917521b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791752340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f87917524d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8791752660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87917527f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791752980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791752b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f8791752ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879174e2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879174e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879174e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8791751020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8791751020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917513a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791751530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87917516c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791751850"/>
        <function-ref name="fired" scoped="" ref="0x7f87917519e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791750b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791750b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879174f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879174f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879174f340"/>
        <function-ref name="get" scoped="" ref="0x7f879174f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879174f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879174f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879174f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879174fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879174fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879174fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879174e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f87917492f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f87917492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791749670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791749800"/>
        <function-ref name="captured" scoped="" ref="0x7f8791749990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791749b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791749cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791749e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879174b220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879174b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879174b5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879174b730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879174b8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879174ba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879174bbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879174bd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879174a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879174a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879174a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f87917467a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f87917467a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791746b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879174a610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879174a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879174a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879174ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879174acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879174ae40"/>
        <function-ref name="fired" scoped="" ref="0x7f8791749020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791747160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791747160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87917474e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8791747670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791747800"/>
        <function-ref name="get" scoped="" ref="0x7f8791747990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791747b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791747cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791747e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791746020"/>
        <function-ref name="overflow" scoped="" ref="0x7f87917461b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8791746340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f87917464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f87917417a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f87917417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791741b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791741cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f8791741e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791740020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917401b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791740340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f87917436d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f87917436d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8791743a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791743be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791743d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791742020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87917421b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791742340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87917424d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791742660"/>
        <function-ref name="setControl" scoped="" ref="0x7f87917427f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879173fc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879173fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879173e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8791742ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8791742ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791742e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791741020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87917411b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791741340"/>
        <function-ref name="fired" scoped="" ref="0x7f87917414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791740610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791740610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791740990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8791740b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791740cb0"/>
        <function-ref name="get" scoped="" ref="0x7f8791740e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879173f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879173f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879173f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879173f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879173f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f879173f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879173f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879173acb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879173acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f87917380a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791738230"/>
        <function-ref name="captured" scoped="" ref="0x7f87917383c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791738550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917386e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791738870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879173cb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879173cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879173b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f879173b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879173b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879173b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879173b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879173b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879173b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879173bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f879173bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f87917362f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f87917362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791736670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879173a020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879173a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879173a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879173a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879173a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879173a850"/>
        <function-ref name="fired" scoped="" ref="0x7f879173a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791738b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791738b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791737020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87917371b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791737340"/>
        <function-ref name="get" scoped="" ref="0x7f87917374d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791737660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917377f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791737980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791737b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791737ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8791737e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8791736020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f87917312f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f87917312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791731670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791731800"/>
        <function-ref name="captured" scoped="" ref="0x7f8791731990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791731b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791731cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791731e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f8791733220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f8791733220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87917335a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8791733730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87917338c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791733a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8791733be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791733d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8791732020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f87917321b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8791732340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879172f7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879172f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879172fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8791732610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f8791732610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791732990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8791732b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8791732cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8791732e40"/>
        <function-ref name="fired" scoped="" ref="0x7f8791731020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791730160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791730160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87917304e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8791730670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791730800"/>
        <function-ref name="get" scoped="" ref="0x7f8791730990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791730b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791730cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791730e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879172f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879172f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879172f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879172f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879172a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879172a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879172ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879172acb0"/>
        <function-ref name="captured" scoped="" ref="0x7f879172ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791729020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917291b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791729340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879172c6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879172c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879172ca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f879172cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879172cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879172b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879172b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879172b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879172b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879172b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f879172b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f8791727c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f8791727c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791726020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879172bac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879172bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879172be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879172a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879172a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879172a340"/>
        <function-ref name="fired" scoped="" ref="0x7f879172a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8791729610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791729610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791729990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8791729b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791729cb0"/>
        <function-ref name="get" scoped="" ref="0x7f8791729e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791727020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87917271b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791727340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87917274d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791727660"/>
        <function-ref name="setMode" scoped="" ref="0x7f87917277f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8791727980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f8791721bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f8791721bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791720020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f87917223f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f87917223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791722770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f8791722b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f8791722b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791721020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f8791721430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f8791721430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87917217b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f8790393a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f8790393a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8790393e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8790392020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f87903921b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8790392340"/>
        <function-ref name="fired" scoped="" ref="0x7f87903924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f8790395190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790395190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8790395510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87903956a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8790395830"/>
        <function-ref name="get" scoped="" ref="0x7f87903959c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8790395b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8790395ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790395e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790394030"/>
        <function-ref name="overflow" scoped="" ref="0x7f87903941c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8790394350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f87903944e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8790399020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f8790399020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8790397870"/>
        <function-ref name="fired" scoped="" ref="0x7f8790398840"/>
        <function-ref name="startAt" scoped="" ref="0x7f8790397220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8790398d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8790397d30"/>
        <function-ref name="start" scoped="" ref="0x7f8790399e30"/>
        <function-ref name="stop" scoped="" ref="0x7f8790398380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879039a660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879039a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879039a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f8790394770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8790394770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f8790394af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8790394c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8790394e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8790393020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87903931b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8790393340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87903934d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8790393660"/>
        <function-ref name="setControl" scoped="" ref="0x7f87903937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f87916988c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f87916988c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879169c700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87916970d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879169cbc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791697590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f87916968e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f87916968e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8791693780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791692150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791693c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791692610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f8791681c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f8791681c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791680020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87916801b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8791680340"/>
        <function-ref name="get" scoped="" ref="0x7f87916804d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791680660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87916807f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8791680980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791680b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791680ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8791680e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879167f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879168fb80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879168fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879168e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791681360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879168ee70"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791681820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f879165d0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f879165d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879165c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879165c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879165c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879165ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879167bcf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879167bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8791660b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879165f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879165f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f879165fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f87903b2890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f87903b2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87903ae0d0"/>
        <function-ref name="fired" scoped="" ref="0x7f87903b00d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f87903b0a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87903b0590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f87903ae590"/>
        <function-ref name="start" scoped="" ref="0x7f87903b16e0"/>
        <function-ref name="stop" scoped="" ref="0x7f87903b1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f87903ab0a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f87903ab0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87903a9b30"/>
        <function-ref name="fired" scoped="" ref="0x7f87903aa9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f87903a94e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87903a9020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f87903a7020"/>
        <function-ref name="start" scoped="" ref="0x7f87903aa020"/>
        <function-ref name="stop" scoped="" ref="0x7f87903aa530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f87903aec00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f87903aec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f87903ada80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87903ac4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87903ac020"/>
        <function-ref name="overflow" scoped="" ref="0x7f87903ac9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f87915e99c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f87915e99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f87915e9d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f87915e8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f87915ed850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f87915ed850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87915e9090"/>
        <function-ref name="fired" scoped="" ref="0x7f87915ea090"/>
        <function-ref name="startAt" scoped="" ref="0x7f87915eaa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87915ea550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f87915e9550"/>
        <function-ref name="start" scoped="" ref="0x7f87915ec6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f87915ecbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f87915f22f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f87915f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87915ee870"/>
        <function-ref name="fired" scoped="" ref="0x7f87915f1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f87915efc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f87915ef780"/>
        <function-ref name="getdt" scoped="" ref="0x7f87915ed1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f87915eecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87915ef300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f87915f1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f87915ee260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f87915f14f0"/>
        <function-ref name="stop" scoped="" ref="0x7f87915f19c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f879156a020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f879156a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8791566630"/>
        <function-ref name="fired" scoped="" ref="0x7f8791569a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8791568920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f87915684a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8791565020"/>
        <function-ref name="gett0" scoped="" ref="0x7f8791566ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8791568020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879156ac10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8791566020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8791569110"/>
        <function-ref name="stop" scoped="" ref="0x7f87915695e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f8791565450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f8791565450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f87915657d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f87915718e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f87915718e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879156c020"/>
        <function-ref name="fired" scoped="" ref="0x7f879156f4c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879156d300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879156fe00"/>
        <function-ref name="getdt" scoped="" ref="0x7f879156c960"/>
        <function-ref name="gett0" scoped="" ref="0x7f879156c4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879156f960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8791570560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879156d930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8791570a50"/>
        <function-ref name="stop" scoped="" ref="0x7f879156f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f87901b5100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f87901b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f87901b5480"/>
        <function-ref name="runTask" scoped="" ref="0x7f87901b5610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f87901bc3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f87901bc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87901b8870"/>
        <function-ref name="fired" scoped="" ref="0x7f87901bbe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f87901b9c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f87901b9780"/>
        <function-ref name="getdt" scoped="" ref="0x7f87901b71e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f87901b8cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87901b9300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f87901bb020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f87901b8260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f87901bb4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f87901bb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f87901b6a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f87901b6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f87901b6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f87901b75d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f87901b75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f87901b6660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f87901b67f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f87901b7c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f87901b7e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f87901b6020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f87901b61b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f87901b6340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f87901b64d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f87901b7950"/>
        <function-ref name="node_id" scoped="" ref="0x7f87901b7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f87901c3db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f87901c3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87901bd470"/>
        <function-ref name="fired" scoped="" ref="0x7f87901c19b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f87901bf7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f87901bf320"/>
        <function-ref name="getdt" scoped="" ref="0x7f87901bddb0"/>
        <function-ref name="gett0" scoped="" ref="0x7f87901bd910"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87901c1e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f87901c2a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f87901bfdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f87901c1020"/>
        <function-ref name="stop" scoped="" ref="0x7f87901c1510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8791562020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f8791562020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8791562c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8791558300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8791558300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8791557150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791557ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8791557610"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791555020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8791549260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8791549260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87915466e0"/>
        <function-ref name="fired" scoped="" ref="0x7f8791548ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8791547a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f87915475f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8791545020"/>
        <function-ref name="gett0" scoped="" ref="0x7f8791546b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8791547170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8791549e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f87915460d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8791548350"/>
        <function-ref name="stop" scoped="" ref="0x7f8791548820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8791536cc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f8791536cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f87915350a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8791535230"/>
        <function-ref name="start" scoped="" ref="0x7f87915353c0"/>
        <function-ref name="stop" scoped="" ref="0x7f8791535550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f87915282c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f87915282c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8791528640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f87915287d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8791528960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8791528af0"/>
        <function-ref name="setCca" scoped="" ref="0x7f8791528c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8791528e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f879151c1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f879151c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f879151c650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f87915318f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f87915318f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791531c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8791531e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8791530020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87915301b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8791530340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8791535d20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f8791535d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87915340e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8791534270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8791534400"/>
        <function-ref name="cancel" scoped="" ref="0x7f8791534590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8791534720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f8791533c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f8791533c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8791532020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f8791530610" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8791530610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8791530990"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8791530b20"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8791530cb0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8791530e40"/>
        <function-ref name="getPower" scoped="" ref="0x7f879152f020"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879152f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f8791517130" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f8791517130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f87915174b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f8791517640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f87915177d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f8791517960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8791533020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f8791533020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87915333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f879152e080" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879152e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879152e400"/>
        <function-ref name="noAck" scoped="" ref="0x7f879152e590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879152e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f879150e430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f879150e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f879150e7b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f879150e940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f879150ead0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f879150ec60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f879150edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f87915322d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f87915322d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8791532650"/>
        <function-ref name="source" scoped="" ref="0x7f87915327e0"/>
        <function-ref name="address" scoped="" ref="0x7f8791532970"/>
        <function-ref name="destination" scoped="" ref="0x7f8791532b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f8791532c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8791532e20"/>
        <function-ref name="type" scoped="" ref="0x7f8791531020"/>
        <function-ref name="setType" scoped="" ref="0x7f87915311b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8791531340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f87915314d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8791531660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f8791524170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8791524170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f87915244f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8791509020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f8791509020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f87915093a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8791509530"/>
        <function-ref name="start" scoped="" ref="0x7f87915096c0"/>
        <function-ref name="stop" scoped="" ref="0x7f8791509850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f87914f69d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f87914f69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f87914f6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f87914f5b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f87914f5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f87914f4020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f87914f41b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f87914f4340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f87914f44d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f87914f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f87914f7020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f87914f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f87914f73a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f87914f7530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f87914f76c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f87914f7850"/>
        <function-ref name="getPower" scoped="" ref="0x7f87914f79e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f87914f7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f8791501a70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f8791501a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8791501df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87914fa020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87914fa1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87914fa340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87914fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f87914f5080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f87914f5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f87914f5400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f87914f5590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f87914f5720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f87914f58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f8791502690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f8791502690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8791502a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f87914f6020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f87914f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f87914f63a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f87914f6530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f87914f66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8791508530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8791508530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f87915088b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8791508a40"/>
        <function-ref name="request" scoped="" ref="0x7f8791508bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f8791508d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791507020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f87914f9940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f87914f9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87914f9cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87914f9e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8791502020"/>
        <function-ref name="cancel" scoped="" ref="0x7f87915021b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8791502340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f8791502d50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f8791502d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8791501100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8791501290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8791501420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87915015b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8791501740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f87914fa840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f87914fa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87914fabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f87914f1390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f87914f1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f87914f1710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f87914f18a0"/>
        <function-ref name="start" scoped="" ref="0x7f87914f1a30"/>
        <function-ref name="stop" scoped="" ref="0x7f87914f1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f87914ef330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f87914ef330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f87914ef6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f87914ef840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f87914ef9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f87914efb60"/>
        <function-ref name="setCca" scoped="" ref="0x7f87914efcf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f87914efe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f87914f1e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f87914f1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87914f0220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87914f03b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87914f0540"/>
        <function-ref name="cancel" scoped="" ref="0x7f87914f06d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87914f0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f87914f0b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f87914f0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87914ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f87914eee70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f87914eee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f87914ea220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f87914ea3b0"/>
        <function-ref name="start" scoped="" ref="0x7f87914ea540"/>
        <function-ref name="stop" scoped="" ref="0x7f87914ea6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f87914e97e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f87914e97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f87914e9b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f87914e9cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f87914e9e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f87914e8030"/>
        <function-ref name="setCca" scoped="" ref="0x7f87914e81c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f87914e8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f87914de060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f87914de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f87914de3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f87914de570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f87914de700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f87914de890"/>
        <function-ref name="setCca" scoped="" ref="0x7f87914dea20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f87914debb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f87914d3330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f87914d3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f87914d36b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f87914d3840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f87914d39d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f87914d3b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f87914d3cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f87914d3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f87914d52a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f87914d52a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87914d5620"/>
        <function-ref name="cancel" scoped="" ref="0x7f87914d57b0"/>
        <function-ref name="modify" scoped="" ref="0x7f87914d5940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87914d5ad0"/>
        <function-ref name="resend" scoped="" ref="0x7f87914d5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f87914ea990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f87914ea990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87914ead10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87914e9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87914e91b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87914e9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87914e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f87914d2420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f87914d2420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f87914d27a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f87914d2930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f87914dc760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f87914dc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f87914dcae0"/>
        <function-ref name="stop" scoped="" ref="0x7f87914dcc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f87914cb920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f87914cb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f87914cbca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f87914cbe30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f87914cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f87914e0b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f87914e0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f87914e6020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f87914e61b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f87914e6340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f87914e64d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f87914e6660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f87914e67f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f87914e6980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f87914e6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f87914d2bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f87914d2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f87914d4020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f87914d41b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f87914d4340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f87914d44d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f87914d4660"/>
        <function-ref name="get" scoped="" ref="0x7f87914d47f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f87914d4980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f87914d3020"/>
        <function-ref name="set" scoped="" ref="0x7f87914d4b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f87914d4ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f87914d4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f87914e8640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f87914e8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f87914e89c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f87914e8b50"/>
        <function-ref name="request" scoped="" ref="0x7f87914e8ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f87914e8e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f87914e7030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f87914ce110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f87914ce110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87914ce590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87914ce720"/>
        <function-ref name="isState" scoped="" ref="0x7f87914ce8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87914cea40"/>
        <function-ref name="requestState" scoped="" ref="0x7f87914cebd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f87914ced60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f87914c1b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f87914c1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f87914bf020"/>
        <function-ref name="runTask" scoped="" ref="0x7f87914bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f87914c2ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f87914c2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f87914c1020"/>
        <function-ref name="runTask" scoped="" ref="0x7f87914c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f87914c3c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f87914c3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f87914c2020"/>
        <function-ref name="runTask" scoped="" ref="0x7f87914c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f8791469dc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f8791469dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8791475180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8791475310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f87914754a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f8791475630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f87914757c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f8791475950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f8791475ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f8791475c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f8791475e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f8791474020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f87914741b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f8791474340"/>
        <function-ref name="sync" scoped="" ref="0x7f87914744d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f8791474760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f87914748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f87914660c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f87914660c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8791466cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8791465170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f8791474bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f8791474bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f8791468020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f87914681b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f8791468340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f87914684d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f8791468660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f87914687f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f8791468980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f8791468b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8791479950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8791479950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8791479cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8791479e60"/>
        <function-ref name="request" scoped="" ref="0x7f8791476020"/>
        <function-ref name="granted" scoped="" ref="0x7f87914761b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791476340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f879145f970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f879145f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f879145fcf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f879145fe80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f879145e030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f879145e1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f879145e350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f879145e4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f879145e670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f879145e800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f879145e990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f879145eb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f879145ecb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f879145ee40"/>
        <function-ref name="sync" scoped="" ref="0x7f879145d020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f879145d2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f879145d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f879143d1e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f879143d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879143d560"/>
        <function-ref name="write" scoped="" ref="0x7f879143d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f8791458020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8791458020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f87914583a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f8791458a10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f8791458a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87914542a0"/>
        <function-ref name="fired" scoped="" ref="0x7f87914562a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8791456c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8791456760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8791454760"/>
        <function-ref name="start" scoped="" ref="0x7f8791457890"/>
        <function-ref name="stop" scoped="" ref="0x7f8791457da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f879143e020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879143e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879143e3a0"/>
        <function-ref name="write" scoped="" ref="0x7f879143e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f8791453e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f8791453e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791452220"/>
        <function-ref name="isInput" scoped="" ref="0x7f87914523b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791452540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87914526d0"/>
        <function-ref name="get" scoped="" ref="0x7f8791452860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87914529f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791452b80"/>
        <function-ref name="clr" scoped="" ref="0x7f8791452d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f879145cb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f879145cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879145b750"/>
        <function-ref name="readDone" scoped="" ref="0x7f879145bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f879142bca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f879142bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879142a0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879142a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f879143da80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f879143da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879143de00"/>
        <function-ref name="write" scoped="" ref="0x7f879143c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f879143c3c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879143c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879143c740"/>
        <function-ref name="write" scoped="" ref="0x7f879143c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f879143fcd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f879143fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f87914460a0"/>
        <function-ref name="write" scoped="" ref="0x7f8791446230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f8791447390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8791447390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f8791447710"/>
        <function-ref name="changed" scoped="" ref="0x7f87914478a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f8791447a30"/>
        <function-ref name="setAddress" scoped="" ref="0x7f8791447bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f8791454c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f8791454c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791453020"/>
        <function-ref name="isInput" scoped="" ref="0x7f87914531b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791453340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87914534d0"/>
        <function-ref name="get" scoped="" ref="0x7f8791453660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f87914537f0"/>
        <function-ref name="set" scoped="" ref="0x7f8791453980"/>
        <function-ref name="clr" scoped="" ref="0x7f8791453b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f879143a450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879143a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879143a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f87914510f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f87914510f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791451470"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791451600"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791451790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791451920"/>
        <function-ref name="get" scoped="" ref="0x7f8791451ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791451c40"/>
        <function-ref name="set" scoped="" ref="0x7f8791451dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791450020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8791460510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8791460510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8791460890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f879143e8f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879143e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879143ec70"/>
        <function-ref name="write" scoped="" ref="0x7f879143ee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f879143ad70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f879143ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8791439180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8791439520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f8791439520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f87914398a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8791439a30"/>
        <function-ref name="request" scoped="" ref="0x7f8791439bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f8791439d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791437020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f8791436180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f8791436180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8791436500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8791436690"/>
        <function-ref name="request" scoped="" ref="0x7f8791436820"/>
        <function-ref name="granted" scoped="" ref="0x7f87914369b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791436b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f879145d740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f879145d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f879145dac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f879145dc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f879145dde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f879145c020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f879145c1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f879145c340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f879145c4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f879145c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f87914465d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f87914465d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8791446950"/>
        <function-ref name="write" scoped="" ref="0x7f8791446ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f879143f420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f879143f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879143f7a0"/>
        <function-ref name="write" scoped="" ref="0x7f879143f930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f8791438570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f8791438570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f87914388f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8791436e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8791436e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f87914351c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8791435350"/>
        <function-ref name="led1On" scoped="" ref="0x7f87914354e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8791435670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8791435800"/>
        <function-ref name="get" scoped="" ref="0x7f8791435990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8791435b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f87914341b0"/>
        <function-ref name="set" scoped="" ref="0x7f8791435cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8791435e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f8791434020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f879142ddb0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f879142ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879142b180"/>
        <function-ref name="runTask" scoped="" ref="0x7f879142b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8791460b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8791460b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879145f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879145f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f879145f340"/>
        <function-ref name="granted" scoped="" ref="0x7f879145f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879145f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f8791442e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f8791442e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879144a1c0"/>
        <function-ref name="write" scoped="" ref="0x7f879144a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f87914424a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f87914424a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8791442920"/>
        <function-ref name="write" scoped="" ref="0x7f8791442ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f879144cc00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f879144cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879144f020"/>
        <function-ref name="disable" scoped="" ref="0x7f879144f1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879144f340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879144f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f87914373d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f87914373d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8791437750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f87914378e0"/>
        <function-ref name="request" scoped="" ref="0x7f8791437a70"/>
        <function-ref name="granted" scoped="" ref="0x7f8791437c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791437d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f8791438c80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f8791438c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879143a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f87913b57e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f87913b57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87913b5b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f87913b1220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f87913b1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87913afb30"/>
        <function-ref name="fired" scoped="" ref="0x7f87913b0a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f87913af4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87913af020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f87913ae020"/>
        <function-ref name="start" scoped="" ref="0x7f87913b0090"/>
        <function-ref name="stop" scoped="" ref="0x7f87913b05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f87913ab260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f87913ab260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87913ab5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f87913abaf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f87913abaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8791371390"/>
        <function-ref name="fired" scoped="" ref="0x7f8791372360"/>
        <function-ref name="startAt" scoped="" ref="0x7f8791372ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8791372820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8791371850"/>
        <function-ref name="start" scoped="" ref="0x7f8791373970"/>
        <function-ref name="stop" scoped="" ref="0x7f8791373e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879015e020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879015e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879015c870"/>
        <function-ref name="fired" scoped="" ref="0x7f879015d840"/>
        <function-ref name="startAt" scoped="" ref="0x7f879015c220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879015dd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879015cd30"/>
        <function-ref name="start" scoped="" ref="0x7f879015ee30"/>
        <function-ref name="stop" scoped="" ref="0x7f879015d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879015f720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879015f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879015faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8790157020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f8790157020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8790154870"/>
        <function-ref name="fired" scoped="" ref="0x7f8790156840"/>
        <function-ref name="startAt" scoped="" ref="0x7f8790154220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8790156d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8790154d30"/>
        <function-ref name="start" scoped="" ref="0x7f8790157e30"/>
        <function-ref name="stop" scoped="" ref="0x7f8790156380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8790158760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8790158760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8790158ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f879013e8f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879013e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879013ec70"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879013ee00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879013d020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879013d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f879013d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f8790142e70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790142e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8790141220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f87901413b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8790141540"/>
        <function-ref name="get" scoped="" ref="0x7f87901416d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8790141860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87901419f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790141b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790141d10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879013f020"/>
        <function-ref name="setMode" scoped="" ref="0x7f879013f1b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879013f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f879013f5d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879013f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879013f950"/>
        <function-ref name="getControl" scoped="" ref="0x7f879013fae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879013fc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879013fe00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879013e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879013e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879013e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879013e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879013e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f8790134760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f8790134760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8790134ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f8790134c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f8790134e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f8790133020"/>
        <function-ref name="fired" scoped="" ref="0x7f87901331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f8790138dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790138dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8790136180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8790136310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f87901364a0"/>
        <function-ref name="get" scoped="" ref="0x7f8790136630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f87901367c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8790136950"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790136ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790136c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f8790136e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f8790135020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f87901351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879013bbd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879013bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87901384e0"/>
        <function-ref name="fired" scoped="" ref="0x7f87901394e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8790139e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87901399a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f87901389a0"/>
        <function-ref name="start" scoped="" ref="0x7f879013aa80"/>
        <function-ref name="stop" scoped="" ref="0x7f8790139020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879013b340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879013b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879013b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f8790135440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f8790135440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f87901357c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f8790135950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8790135ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8790135c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f8790135e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8790134020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87901341b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8790134340"/>
        <function-ref name="setControl" scoped="" ref="0x7f87901344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8791395080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8791395080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8791394020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f87913949a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87913944e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8791394e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f879138d0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f879138d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879138b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879138b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879138b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879138be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8791390cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8791390cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879138fb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879138e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879138e090"/>
        <function-ref name="overflow" scoped="" ref="0x7f879138ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f87901511d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f87901511d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879014fb30"/>
        <function-ref name="fired" scoped="" ref="0x7f87901509f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879014f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879014f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879014d020"/>
        <function-ref name="start" scoped="" ref="0x7f8790150020"/>
        <function-ref name="stop" scoped="" ref="0x7f8790150530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f879014bb90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f879014bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f87901484e0"/>
        <function-ref name="fired" scoped="" ref="0x7f87901494e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8790149e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f87901499a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f87901489a0"/>
        <function-ref name="start" scoped="" ref="0x7f879014a9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8790149020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879014d690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879014d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879014c5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879014b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879014ca70"/>
        <function-ref name="overflow" scoped="" ref="0x7f879014b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f879136b090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f879136b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879136b410"/>
        <function-ref name="isInput" scoped="" ref="0x7f879136b5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879136b730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879136b8c0"/>
        <function-ref name="get" scoped="" ref="0x7f879136ba50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879136bbe0"/>
        <function-ref name="set" scoped="" ref="0x7f879136bd70"/>
        <function-ref name="clr" scoped="" ref="0x7f879136a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f879136a390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f879136a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879136a710"/>
        <function-ref name="isInput" scoped="" ref="0x7f879136a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879136aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879136abc0"/>
        <function-ref name="get" scoped="" ref="0x7f879136ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791368020"/>
        <function-ref name="set" scoped="" ref="0x7f87913681b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791368340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f87913686a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f87913686a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791368a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791368bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791368d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791367020"/>
        <function-ref name="get" scoped="" ref="0x7f87913671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791367340"/>
        <function-ref name="set" scoped="" ref="0x7f87913674d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791367660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f879136de60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f879136de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879136c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f879136c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879136c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879136c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f879136c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879136c9e0"/>
        <function-ref name="set" scoped="" ref="0x7f879136cb70"/>
        <function-ref name="clr" scoped="" ref="0x7f879136cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f8791366ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f8791366ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87913650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791365230"/>
        <function-ref name="toggle" scoped="" ref="0x7f87913653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791365550"/>
        <function-ref name="get" scoped="" ref="0x7f87913656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791365870"/>
        <function-ref name="set" scoped="" ref="0x7f8791365a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8791365b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f87913b3b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f87913b3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879136d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f879136d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879136d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879136d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879136d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879136d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f879136d980"/>
        <function-ref name="clr" scoped="" ref="0x7f879136db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f87913679b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f87913679b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791367d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791366020"/>
        <function-ref name="toggle" scoped="" ref="0x7f87913661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791366340"/>
        <function-ref name="get" scoped="" ref="0x7f87913664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791366660"/>
        <function-ref name="set" scoped="" ref="0x7f87913667f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8791366980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f87913622f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f87913622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791362670"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791362800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791362990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791360660"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791362cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791362e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791361020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87913611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791361340"/>
        <function-ref name="get" scoped="" ref="0x7f87913614d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791361660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87913617f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791361980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791361c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791361da0"/>
        <function-ref name="set" scoped="" ref="0x7f8791360020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f87913601b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791360340"/>
        <function-ref name="clr" scoped="" ref="0x7f8791362b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f87913604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8791363020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8791363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87913633a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791363530"/>
        <function-ref name="toggle" scoped="" ref="0x7f87913636c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791363850"/>
        <function-ref name="get" scoped="" ref="0x7f87913639e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791363b70"/>
        <function-ref name="set" scoped="" ref="0x7f8791363d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8791362020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879135d7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879135d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879135db20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879135dcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879135de40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879135ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f879135c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879135c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879135c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f879135c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879135c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879135c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f879135cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879135cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f879135ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879135b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f879135b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f879135b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879135b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f879135b760"/>
        <function-ref name="clr" scoped="" ref="0x7f879135c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879135b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879135e630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879135e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879135e9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879135eb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f879135ecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879135ee60"/>
        <function-ref name="get" scoped="" ref="0x7f879135d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879135d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879135d340"/>
        <function-ref name="clr" scoped="" ref="0x7f879135d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8791358c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791358c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791357020"/>
        <function-ref name="isInput" scoped="" ref="0x7f87913571b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791357340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791355020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791357660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87913577f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791357980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791357b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791357ca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791357e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791356020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87913561b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791356340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f87913565d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791356760"/>
        <function-ref name="set" scoped="" ref="0x7f87913568f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791356a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791356c10"/>
        <function-ref name="clr" scoped="" ref="0x7f87913574d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791356da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8791359b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8791359b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791359e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791358030"/>
        <function-ref name="toggle" scoped="" ref="0x7f87913581c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791358350"/>
        <function-ref name="get" scoped="" ref="0x7f87913584e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791358670"/>
        <function-ref name="set" scoped="" ref="0x7f8791358800"/>
        <function-ref name="clr" scoped="" ref="0x7f8791358990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f87913522f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f87913522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791352670"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791352800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791352990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879134f660"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791352cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791352e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791350020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87913501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791350340"/>
        <function-ref name="get" scoped="" ref="0x7f87913504d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791350660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87913507f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791350980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791350c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791350da0"/>
        <function-ref name="set" scoped="" ref="0x7f879134f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879134f1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f879134f340"/>
        <function-ref name="clr" scoped="" ref="0x7f8791352b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879134f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8791353020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8791353020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87913533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791353530"/>
        <function-ref name="toggle" scoped="" ref="0x7f87913536c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791353850"/>
        <function-ref name="get" scoped="" ref="0x7f87913539e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791353b70"/>
        <function-ref name="set" scoped="" ref="0x7f8791353d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8791352020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879134c7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879134c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879134cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879134ccb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879134ce40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879134aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f879134b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879134b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879134b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f879134b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879134b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879134b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f879134bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879134bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f879134be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879134a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f879134a2b0"/>
        <function-ref name="set" scoped="" ref="0x7f879134a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879134a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f879134a760"/>
        <function-ref name="clr" scoped="" ref="0x7f879134b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879134a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879134d630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879134d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879134d9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879134db40"/>
        <function-ref name="toggle" scoped="" ref="0x7f879134dcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879134de60"/>
        <function-ref name="get" scoped="" ref="0x7f879134c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879134c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879134c340"/>
        <function-ref name="clr" scoped="" ref="0x7f879134c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8791347c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8791347c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791346020"/>
        <function-ref name="isInput" scoped="" ref="0x7f87913461b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791346340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791344020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791346660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87913467f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791346980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8791346b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791346ca0"/>
        <function-ref name="get" scoped="" ref="0x7f8791346e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791345020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87913451b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791345340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f87913455d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791345760"/>
        <function-ref name="set" scoped="" ref="0x7f87913458f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791345a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8791345c10"/>
        <function-ref name="clr" scoped="" ref="0x7f87913464d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791345da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8791348af0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8791348af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791348e70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791347030"/>
        <function-ref name="toggle" scoped="" ref="0x7f87913471c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791347350"/>
        <function-ref name="get" scoped="" ref="0x7f87913474e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791347670"/>
        <function-ref name="set" scoped="" ref="0x7f8791347800"/>
        <function-ref name="clr" scoped="" ref="0x7f8791347990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f87913412f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f87913412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791341670"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791341800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791341990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879133f660"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791341cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791341e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791340020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87913401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791340340"/>
        <function-ref name="get" scoped="" ref="0x7f87913404d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791340660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f87913407f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791340980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8791340c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791340da0"/>
        <function-ref name="set" scoped="" ref="0x7f879133f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879133f1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f879133f340"/>
        <function-ref name="clr" scoped="" ref="0x7f8791341b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879133f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8791342020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8791342020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f87913423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791342530"/>
        <function-ref name="toggle" scoped="" ref="0x7f87913426c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8791342850"/>
        <function-ref name="get" scoped="" ref="0x7f87913429e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791342b70"/>
        <function-ref name="set" scoped="" ref="0x7f8791342d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8791341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f8791324700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f8791324700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f8791324a80"/>
        <function-ref name="disable" scoped="" ref="0x7f8791324c10"/>
        <function-ref name="captured" scoped="" ref="0x7f8791324da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f8791328020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f8791328400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f8791328400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8791328780"/>
        <function-ref name="disable" scoped="" ref="0x7f8791328910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8791328aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8791328c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f8791327060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8791327060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87913273e0"/>
        <function-ref name="disable" scoped="" ref="0x7f8791327570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8791327700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8791327890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f8791309a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f8791309a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f8791309e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f8791307020"/>
        <function-ref name="captured" scoped="" ref="0x7f87913071b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8791307340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f87913074d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f8791307660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8791321c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f8791321c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f879130a020"/>
        <function-ref name="disable" scoped="" ref="0x7f879130a1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f879130a340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f879130a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f879130a760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879130a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879130aae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879130ac70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879130ae00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f8791309020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f87913091b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8791309340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f87913094d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f8791309660"/>
        <function-ref name="setControl" scoped="" ref="0x7f87913097f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f8791307930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8791307930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8791307cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8791307e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8791306020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8791305c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8791306340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f87913064d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8791306660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f87913067f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8791306980"/>
        <function-ref name="get" scoped="" ref="0x7f8791306b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8791306ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8791306e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8791305020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f87913052b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8791305440"/>
        <function-ref name="set" scoped="" ref="0x7f87913055d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8791305760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f87913058f0"/>
        <function-ref name="clr" scoped="" ref="0x7f87913061b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8791305a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f87912f53f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f87912f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f5770"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f5900"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f5a90"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f5c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912f5db0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912f4020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912f41b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f87912e93f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f87912e93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912e9770"/>
        <function-ref name="fired" scoped="" ref="0x7f87912e9900"/>
        <function-ref name="disable" scoped="" ref="0x7f87912e9a90"/>
        <function-ref name="edge" scoped="" ref="0x7f87912e9c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912e9db0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912e8020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912e81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f87912f2d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f87912f2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f1100"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f1290"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f1420"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f15b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912f1740"/>
        <function-ref name="enable" scoped="" ref="0x7f87912f18d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912f1a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912f1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f87912ef3f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f87912ef3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912ef770"/>
        <function-ref name="fired" scoped="" ref="0x7f87912ef900"/>
        <function-ref name="disable" scoped="" ref="0x7f87912efa90"/>
        <function-ref name="edge" scoped="" ref="0x7f87912efc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912efdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912ee020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912ee1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f87912fdbc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f87912fdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f7020"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f71b0"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f7340"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f74d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912f7660"/>
        <function-ref name="enable" scoped="" ref="0x7f87912f77f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912f7980"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912f7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f87912ecd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f87912ecd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912eb210"/>
        <function-ref name="fired" scoped="" ref="0x7f87912eb3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f87912eb530"/>
        <function-ref name="edge" scoped="" ref="0x7f87912eb6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912eb850"/>
        <function-ref name="enable" scoped="" ref="0x7f87912eb9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912ebb70"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912ebd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f87912f4710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f87912f4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f4a90"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f4c20"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f4db0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f3020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912f31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912f3340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912f34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f87912e8710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f87912e8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912e8a90"/>
        <function-ref name="fired" scoped="" ref="0x7f87912e8c20"/>
        <function-ref name="disable" scoped="" ref="0x7f87912e8db0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912e7020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912e71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912e7340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912e74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f87912f8620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f87912f8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f89a0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f8b30"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f8cc0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f8e50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912fe020"/>
        <function-ref name="enable" scoped="" ref="0x7f87912fe1b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912fe340"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f87912ee710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f87912ee710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912eea90"/>
        <function-ref name="fired" scoped="" ref="0x7f87912eec20"/>
        <function-ref name="disable" scoped="" ref="0x7f87912eedb0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912ed020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912ed1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912ed340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912ed4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f87912f6020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f87912f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f63a0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f6530"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f66c0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f6850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912f69e0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912f6b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912f6d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f87912ea100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f87912ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912ea480"/>
        <function-ref name="fired" scoped="" ref="0x7f87912ea610"/>
        <function-ref name="disable" scoped="" ref="0x7f87912ea7a0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912ea930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912eaac0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912eac50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912eade0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f87912f3a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f87912f3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f3db0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f2020"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f21b0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f2340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912f24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912f2660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912f27f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f87912f0020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f87912f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912f03a0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912f0530"/>
        <function-ref name="disable" scoped="" ref="0x7f87912f06c0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912f0850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912f09e0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912f0b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912f0d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f87912fe8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f87912fe8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912fec20"/>
        <function-ref name="fired" scoped="" ref="0x7f87912fedb0"/>
        <function-ref name="disable" scoped="" ref="0x7f87912fd020"/>
        <function-ref name="edge" scoped="" ref="0x7f87912fd1b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912fd340"/>
        <function-ref name="enable" scoped="" ref="0x7f87912fd4d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912fd660"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912fd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f87912eda30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f87912eda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912eddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912ec020"/>
        <function-ref name="disable" scoped="" ref="0x7f87912ec1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912ec340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912ec4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912ec660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912ec7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f87912de3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f87912de3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912de770"/>
        <function-ref name="fired" scoped="" ref="0x7f87912de900"/>
        <function-ref name="disable" scoped="" ref="0x7f87912dea90"/>
        <function-ref name="edge" scoped="" ref="0x7f87912dec20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912dedb0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912dd020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912dd1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f87912d23f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f87912d23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d2770"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d2900"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d2a90"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d2c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d2db0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d1020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f87912dbd50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f87912dbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912da100"/>
        <function-ref name="fired" scoped="" ref="0x7f87912da290"/>
        <function-ref name="disable" scoped="" ref="0x7f87912da420"/>
        <function-ref name="edge" scoped="" ref="0x7f87912da5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912da740"/>
        <function-ref name="enable" scoped="" ref="0x7f87912da8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912daa60"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912dabf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f87912d83f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f87912d83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d8770"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d8900"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d8a90"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d8c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d8db0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d7020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f87912e1d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f87912e1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912e0100"/>
        <function-ref name="fired" scoped="" ref="0x7f87912e0290"/>
        <function-ref name="disable" scoped="" ref="0x7f87912e0420"/>
        <function-ref name="edge" scoped="" ref="0x7f87912e05b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912e0740"/>
        <function-ref name="enable" scoped="" ref="0x7f87912e08d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912e0a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912e0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f87912d5d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f87912d5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d4210"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d43a0"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d4530"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d46c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d4850"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d49e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d4b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f87912dd710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f87912dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912dda90"/>
        <function-ref name="fired" scoped="" ref="0x7f87912ddc20"/>
        <function-ref name="disable" scoped="" ref="0x7f87912dddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912dc020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912dc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912dc340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912dc4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f87912d1710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f87912d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d1a90"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d1c20"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d1db0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d0020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d0340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f87912e67a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f87912e67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912e6b20"/>
        <function-ref name="fired" scoped="" ref="0x7f87912e6cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f87912e6e40"/>
        <function-ref name="edge" scoped="" ref="0x7f87912e2020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912e21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912e2340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912e24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f87912d7710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f87912d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d7a90"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d7c20"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d7db0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d6020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d6340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f87912df020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f87912df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912df3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912df530"/>
        <function-ref name="disable" scoped="" ref="0x7f87912df6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912df850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912df9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912dfb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912dfd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f87912d3100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f87912d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d3480"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d3610"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d37a0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d3930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d3ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d3c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d3de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f87912dca30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f87912dca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912dcdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912db020"/>
        <function-ref name="disable" scoped="" ref="0x7f87912db1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912db340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912db4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912db660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912db7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f87912d9020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f87912d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d93a0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d9530"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d96c0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d9850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d99e0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d9b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d9d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f87912e2a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f87912e2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912e2db0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912e1020"/>
        <function-ref name="disable" scoped="" ref="0x7f87912e11b0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912e1340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912e14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912e1660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912e17f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912e1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f87912d6a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f87912d6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87912d6db0"/>
        <function-ref name="fired" scoped="" ref="0x7f87912d5020"/>
        <function-ref name="disable" scoped="" ref="0x7f87912d51b0"/>
        <function-ref name="edge" scoped="" ref="0x7f87912d5340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87912d54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f87912d5660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87912d57f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87912d5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f87911c62f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f87911c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87911c6670"/>
        <function-ref name="fired" scoped="" ref="0x7f87911c6800"/>
        <function-ref name="disable" scoped="" ref="0x7f87911c6990"/>
        <function-ref name="edge" scoped="" ref="0x7f87911c6b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87911c6cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f87911c6e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87911b9020"/>
        <function-ref name="getValue" scoped="" ref="0x7f87911b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f87911c7680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f87911c7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87911c7a00"/>
        <function-ref name="disable" scoped="" ref="0x7f87911c7b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f87911c7d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f87911c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f87911b77a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f87911b77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87911b7b20"/>
        <function-ref name="fired" scoped="" ref="0x7f87911b7cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f87911b7e40"/>
        <function-ref name="edge" scoped="" ref="0x7f87911b6020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f87911b61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f87911b6340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f87911b64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f87911b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f87911b8b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f87911b8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f87911b7020"/>
        <function-ref name="disable" scoped="" ref="0x7f87911b71b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f87911b7340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f87911b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8790d54e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790d54e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d53410"/>
        <function-ref name="write" scoped="" ref="0x7f8790d535a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8790d5e160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f8790d5e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8790d58e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790d58e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d56210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8790d52880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790d52880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d52c00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d52d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f8790d4a0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f8790d4a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4a420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8790d510a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f8790d510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d51420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d515b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8790d3e500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f8790d3e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d3e880"/>
        <function-ref name="write" scoped="" ref="0x7f8790d3ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8790d40500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f8790d40500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d40880"/>
        <function-ref name="write" scoped="" ref="0x7f8790d40a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8790d5c490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f8790d5c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f8790d46880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f8790d46880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d46c00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d46d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8790d41500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790d41500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d41880"/>
        <function-ref name="write" scoped="" ref="0x7f8790d41a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8790d56e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f8790d56e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d55210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8790d55e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f8790d55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d54210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f8790d4c880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f8790d4c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4cc00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8790d4d0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f8790d4d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4d420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8790d51880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f8790d51880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d51c00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d51d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8790d60a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790d60a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8790d60e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8790d5f020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8790d5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8790d5be00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790d5be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8790d5a490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f8790d5a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f8790d45c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790d45c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d440a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d44230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8790d5abe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f8790d5abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8790d41ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790d41ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d400a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d40230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8790d5b160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790d5b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f8790d460a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f8790d460a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d46420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d465b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8790d55670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790d55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d559f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8790d56670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790d56670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d569f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d56b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8790d5fad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f8790d5fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f8790d470a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790d470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d47420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d475b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f8790d4a880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f8790d4a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4ac00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f8790d47880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790d47880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d47c00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d47d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8790d3fce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f8790d3fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d3e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d3e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8790d40ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f8790d40ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d3f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d3f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8790d4d880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f8790d4d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4dc00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f8790d480a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f8790d480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d48420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d485b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8790d43ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f8790d43ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d410a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d41230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8790d4f880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f8790d4f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4fc00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8790d3ece0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f8790d3ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790d3d0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790d3d230"/>
        <function-ref name="write" scoped="" ref="0x7f8790d3d3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790d3d550"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790d3d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8790d5f480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f8790d5f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8790d58670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f8790d58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d589f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d58b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8790d54670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790d54670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d549f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d54b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f8790d4b0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f8790d4b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4b420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8790d4f0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f8790d4f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4f420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f8790d4b880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f8790d4b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4bc00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8790d53870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f8790d53870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d53bf0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d53d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8790d5e7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f8790d5e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8790d520a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790d520a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d52420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d525b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790d61e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790d61e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790d601c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790d60350"/>
        <function-ref name="request" scoped="" ref="0x7f8790d604e0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790d60670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790d60800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8790d592f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f8790d592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d59670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8790d58020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f8790d58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8790d43500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f8790d43500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d43880"/>
        <function-ref name="write" scoped="" ref="0x7f8790d43a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8790d44ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f8790d44ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d430a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d43230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8790d5b7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790d5b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8790d44500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790d44500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d44880"/>
        <function-ref name="write" scoped="" ref="0x7f8790d44a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8790d3f500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f8790d3f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d3f880"/>
        <function-ref name="write" scoped="" ref="0x7f8790d3fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8790d4c0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790d4c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4c420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f8790d48880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f8790d48880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d48c00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d48d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8790d5ee00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f8790d5ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8790d5cae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f8790d5cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d5ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8790d4e0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f8790d4e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4e420"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8790d59940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f8790d59940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d59cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8790d4e880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f8790d4e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d4ec00"/>
        <function-ref name="write" scoped="" ref="0x7f8790d4ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f8790d450a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f8790d450a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d45820"/>
        <function-ref name="write" scoped="" ref="0x7f8790d459b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8790d3d9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f8790d3d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790d3dd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790d3c020"/>
        <function-ref name="write" scoped="" ref="0x7f8790d3c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790d3c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790d3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f87911722c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f87911722c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8791172640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f87911727d0"/>
        <function-ref name="write" scoped="" ref="0x7f8791172960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8791172af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8791172c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8791173350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8791173350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f87911736d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8791173860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f87911739f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f8791171540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f8791171540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f87911718c0"/>
        <function-ref name="write" scoped="" ref="0x7f8791171a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f8791170370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f8791170370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f87911706f0"/>
        <function-ref name="write" scoped="" ref="0x7f8791170880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f87911754d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f87911754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8791175850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f87911759e0"/>
        <function-ref name="request" scoped="" ref="0x7f8791175b70"/>
        <function-ref name="granted" scoped="" ref="0x7f8791175d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791173020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f879116e1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f879116e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879116e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f87911592e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f87911592e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8791159660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87911597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f8791169890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f8791169890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8791169c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8791169da0"/>
        <function-ref name="write" scoped="" ref="0x7f8791168020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f87911681b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8791168340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879116b660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879116b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879116b9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879116bb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879116bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f8791161c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f8791161c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f8791163020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f8791159b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f8791159b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8791160020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87911601b0"/>
        <function-ref name="isState" scoped="" ref="0x7f8791160340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87911604d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8791160660"/>
        <function-ref name="forceState" scoped="" ref="0x7f87911607f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8791164060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f8791164060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f87911643e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8791164570"/>
        <function-ref name="request" scoped="" ref="0x7f8791164700"/>
        <function-ref name="granted" scoped="" ref="0x7f8791164890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791164a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f8791168ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f8791168ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8791167020"/>
        <function-ref name="write" scoped="" ref="0x7f87911671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f8791167a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f8791167a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8791167db0"/>
        <function-ref name="write" scoped="" ref="0x7f8791165020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8791160a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8791160a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8791160df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879115a020"/>
        <function-ref name="led1On" scoped="" ref="0x7f879115a1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879115a340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879115a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879115a660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879115a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879115ae30"/>
        <function-ref name="set" scoped="" ref="0x7f879115a980"/>
        <function-ref name="led0On" scoped="" ref="0x7f879115ab10"/>
        <function-ref name="led2On" scoped="" ref="0x7f879115aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879116a510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879116a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879116a890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879116aa20"/>
        <function-ref name="request" scoped="" ref="0x7f879116abb0"/>
        <function-ref name="granted" scoped="" ref="0x7f879116ad40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8791169020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f8791155bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f8791155bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8791154020"/>
        <function-ref name="runTask" scoped="" ref="0x7f87911541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f87911658b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f87911658b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8791165c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f87910fa770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f87910fa770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87910faaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87910fac80"/>
        <function-ref name="isState" scoped="" ref="0x7f87910fae10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87910f6020"/>
        <function-ref name="requestState" scoped="" ref="0x7f87910f61b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f87910f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f87910f51d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f87910f51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87910f5550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87910f56e0"/>
        <function-ref name="isState" scoped="" ref="0x7f87910f5870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87910f5a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f87910f5b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f87910f5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f87910f1020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f87910f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87910f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f87910f1b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f87910f1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87910f0020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87910f01b0"/>
        <function-ref name="isState" scoped="" ref="0x7f87910f0340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87910f04d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f87910f0660"/>
        <function-ref name="forceState" scoped="" ref="0x7f87910f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f8790d89020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f8790d89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790d893a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8790d89530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f87910d78f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f87910d78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f87910d7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f87910d8c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f87910d8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f87910d7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f87910d71b0"/>
        <function-ref name="request" scoped="" ref="0x7f87910d7340"/>
        <function-ref name="granted" scoped="" ref="0x7f87910d74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f87910d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879005f5d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879005f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879005f950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879005fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f879005c020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f879005c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879005c3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879005c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f879005c7c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879005c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879005cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f879005fd70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f879005fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f879005d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790060940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790060940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790060cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790060e50"/>
        <function-ref name="request" scoped="" ref="0x7f879005f020"/>
        <function-ref name="granted" scoped="" ref="0x7f879005f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879005f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f879005d410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f879005d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f879005d790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f879005d920"/>
        <function-ref name="splitRead" scoped="" ref="0x7f879005dab0"/>
        <function-ref name="write" scoped="" ref="0x7f879005dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f879106e8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879106e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879106ec60"/>
        <function-ref name="configure" scoped="" ref="0x7f879106edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f8791070850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f8791070850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8791070bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8791070d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f879106ba40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879106ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879106bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f8791071110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f8791071110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f8791071490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f879106c690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f879106c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879106ca10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879106cba0"/>
        <function-ref name="request" scoped="" ref="0x7f879106cd30"/>
        <function-ref name="granted" scoped="" ref="0x7f879106b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879106b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8791077d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8791077d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8791072180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8791072310"/>
        <function-ref name="request" scoped="" ref="0x7f87910724a0"/>
        <function-ref name="granted" scoped="" ref="0x7f8791072630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f87910727c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f8791071790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f8791071790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f8791071b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f8791071ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f8791071e30"/>
        <function-ref name="write" scoped="" ref="0x7f8791070020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f8791067b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f8791067b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8791069020"/>
        <function-ref name="txDone" scoped="" ref="0x7f87910691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f8790ff5250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790ff5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8790ff55f0"/>
        <function-ref name="configure" scoped="" ref="0x7f8790ff5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f8790ff4c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f8790ff4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790ff3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8790ff31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f8790ff23e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f8790ff23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f8790ff2780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f8790ff5a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f8790ff5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f8790ff5d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f8790ff2a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f8790ff2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8790ff2dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f8790ff0020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f8790ff01b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f8790ff0340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f8790ff04d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8790ff0660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f8790ff07f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f8790ff0980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f8790ff0b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f8790ff0ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f8790ff0e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f8790fef020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f8790fef1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f8790fef440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8790fef5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f8790fef760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f8790fef8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f8790fefa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8790fefc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f8790fefda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f8790fee020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8790fee1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f8790fee340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f8790fee4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790fee660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f8790fee9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f8790feeb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f8790feed10"/>
        <function-ref name="tx" scoped="" ref="0x7f8790fed020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f8790fed1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f8790fed340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8790fed4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f8790fed660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f8790fed7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f8790fed980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f8790fedb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f8790fedca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f8790fede30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f8790fec020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f8790fec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8790fecc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8790fecc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8790feb020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8790feb1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8790feb340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8790feb4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8790feb660"/>
        <function-ref name="get" scoped="" ref="0x7f8790feb7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8790feb980"/>
        <function-ref name="led2On" scoped="" ref="0x7f8790fea020"/>
        <function-ref name="set" scoped="" ref="0x7f8790febca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8790febb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f8790febe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f8790ff35b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f8790ff35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790ff3950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790ff3ae0"/>
        <function-ref name="request" scoped="" ref="0x7f8790ff3c70"/>
        <function-ref name="granted" scoped="" ref="0x7f8790ff3e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790ff2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790ff6470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790ff6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790ff6810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790ff69a0"/>
        <function-ref name="request" scoped="" ref="0x7f8790ff6b30"/>
        <function-ref name="granted" scoped="" ref="0x7f8790ff6cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790ff6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f8790ff4060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f8790ff4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f8790ff43e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f8790ff4570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f8790ff4700"/>
        <function-ref name="write" scoped="" ref="0x7f8790ff4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f8790fec480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f8790fec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8790fec800"/>
        <function-ref name="txDone" scoped="" ref="0x7f8790fec990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f8790fea2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f8790fea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8790fea670"/>
        <function-ref name="runTask" scoped="" ref="0x7f8790fea800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f8790fda2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f8790fda2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8790fda640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f8790fded10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f8790fded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8790fdd0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f8790fdd270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f8790fe2020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f8790fe2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8790fe23a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f8790fe2530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f8790fe26c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f8790fe2850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f8790fe29e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8790fe2b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f8790fe2d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f8790fe1020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f8790fe11b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f8790fe1340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f8790fe14d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f8790fe1660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f8790fe17f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f8790fe1a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8790fe1c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f8790fe1da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f8790fe0020"/>
        <function-ref name="isUart" scoped="" ref="0x7f8790fe01b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8790fe0340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f8790fe04d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f8790fe0660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8790fe07f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f8790fe0980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f8790fe0b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790fe0ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f8790fdf220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f8790fdf3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f8790fdf540"/>
        <function-ref name="tx" scoped="" ref="0x7f8790fdf6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f8790fdf860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f8790fdf9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8790fdfb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f8790fdfd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f8790fde020"/>
        <function-ref name="rx" scoped="" ref="0x7f8790fde1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f8790fde340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f8790fde4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f8790fde660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f8790fde7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f8790fde980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f8790fa0bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f8790fa0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790f9f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790f9f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790f9f340"/>
        <function-ref name="clr" scoped="" ref="0x7f8790f9d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790f9f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790f9f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790f9f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790f9fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790f9fca0"/>
        <function-ref name="get" scoped="" ref="0x7f8790f9fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790f9e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790f9e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790f9e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790f9e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790f9e760"/>
        <function-ref name="set" scoped="" ref="0x7f8790f9e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790f9ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790f9f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790f9ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790f9eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f8790fd42d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f8790fd42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8790fd4650"/>
        <function-ref name="txDone" scoped="" ref="0x7f8790fd47e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f8790f9d3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f8790f9d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790f9d760"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790f9d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790f9da80"/>
        <function-ref name="clr" scoped="" ref="0x7f8790f9b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790f9dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790f9c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790f9c1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790f9c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790f9c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8790f9c660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790f9c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790f9c980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790f9cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790f9cda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790f9b020"/>
        <function-ref name="set" scoped="" ref="0x7f8790f9b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790f9b340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790f9dc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790f9b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790f9b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f8790f9bbb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f8790f9bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790f9a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790f9a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790f9a340"/>
        <function-ref name="clr" scoped="" ref="0x7f8790f98020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790f9a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790f9a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790f9a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790f9ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790f9aca0"/>
        <function-ref name="get" scoped="" ref="0x7f8790f9ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790f99020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790f991b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790f99340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790f995d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790f99760"/>
        <function-ref name="set" scoped="" ref="0x7f8790f998f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790f99a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790f9a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790f99c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790f99da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f8790fd9700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f8790fd9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8790fd9a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f8790fd9c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f8790fd9da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f8790fd8020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f8790fd81b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8790fd8340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f8790fd84d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f8790fd8660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f8790fd87f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f8790fd8980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f8790fd8b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f8790fd8ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f8790fd8e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f8790fd7120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8790fd72b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f8790fd7440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f8790fd75d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f8790fd7760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8790fd78f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f8790fd7a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f8790fd7c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8790fd7da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f8790fd6020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f8790fd61b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790fd6340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f8790fd66d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f8790fd6860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f8790fd69f0"/>
        <function-ref name="tx" scoped="" ref="0x7f8790fd6b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f8790fd6d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f8790fd5020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8790fd51b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f8790fd5340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f8790fd54d0"/>
        <function-ref name="rx" scoped="" ref="0x7f8790fd5660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f8790fd57f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f8790fd5980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f8790fd5b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f8790fd5ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f8790fd5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f8790fabd10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f8790fabd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f8790fd20e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f8790fd2270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f8790fd2400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f8790fd2590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f8790fd2720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f8790fd28b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f8790fd2a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f8790fd2bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8790fd2d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f8790fd1020"/>
        <function-ref name="getData" scoped="" ref="0x7f8790fd11b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f8790fd1340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f8790fd14d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f8790fd1760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f8790fd18f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f8790fd1a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f8790fd1c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f8790fd1da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f8790fa9020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f8790fa91b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f8790fa9340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f8790fa94d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f8790fa9660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f8790fa97f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f8790fa9980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f8790fa9d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f8790fa8020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f8790fa81b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f8790fa8340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f8790fa84d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f8790fa8660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f8790fa87f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f8790fa8980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f8790fa8b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f8790fa8ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f8790fa8e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f8790fa7020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f8790fa71b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f8790fa7340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f8790fa74d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f8790fa7660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f8790fa77f0"/>
        <function-ref name="setData" scoped="" ref="0x7f8790fa7980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f8790fa7b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f8790fa7ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f8790fa7e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f8790fa6020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f8790fa61b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f8790fa6340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f8790fa68d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f8790fa6a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f8790fa6bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f8790fa6d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f8790fa5020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f8790fa51b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f8790fa5340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f8790fa54d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f8790fa5660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f8790fa57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f8790fa23e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f8790fa23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790fa2760"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790fa28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790fa2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f8790fa07f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790fa2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790fa1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790fa11b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790fa1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790fa14d0"/>
        <function-ref name="get" scoped="" ref="0x7f8790fa1660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790fa17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790fa1980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790fa1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790fa1da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790fa0020"/>
        <function-ref name="set" scoped="" ref="0x7f8790fa01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790fa0340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790fa2c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790fa04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790fa0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f8790fd4c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f8790fd4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8790fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f8790fa5bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f8790fa5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790fa4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790fa41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790fa4340"/>
        <function-ref name="clr" scoped="" ref="0x7f8790fa2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790fa4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790fa47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790fa4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790fa4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790fa4ca0"/>
        <function-ref name="get" scoped="" ref="0x7f8790fa4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790fa3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790fa31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790fa3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790fa35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790fa3760"/>
        <function-ref name="set" scoped="" ref="0x7f8790fa38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790fa3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790fa44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790fa3c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790fa3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f8790054020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790054020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f87900543a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8790054530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f879004c440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f879004c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879004c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f8790044760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790044760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8790044ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f8790044c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f879004ca50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f879004ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f879004cdd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f879004a020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f879004a1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f879004a340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f879004a4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f879004a660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f879004a7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f879004a980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879004ab10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f879004aca0"/>
        <function-ref name="getData" scoped="" ref="0x7f879004ae30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f8790049020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f87900491b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f8790049440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f87900495d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f8790049760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f87900498f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f8790049a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f8790049c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f8790049da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f8790048020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f87900481b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f8790048340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f87900484d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f8790048660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f87900489f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f8790048b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f8790048d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f8790047020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f87900471b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f8790047340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f87900474d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f8790047660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f87900477f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f8790047980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f8790047b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f8790047ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f8790047e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f8790046020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f87900461b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f8790046340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f87900464d0"/>
        <function-ref name="setData" scoped="" ref="0x7f8790046660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f87900467f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f8790046980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f8790046b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f8790046ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f8790046e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f8790045020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f87900455b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f8790045740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f87900458d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f8790045a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f8790045bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f8790045d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f8790044020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f87900441b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f8790044340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f87900444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f879004fc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879004fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879004c020"/>
        <function-ref name="txDone" scoped="" ref="0x7f879004c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790055340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790055340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f87900556c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790055850"/>
        <function-ref name="request" scoped="" ref="0x7f87900559e0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790055b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790055d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f8790053020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f8790053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f87900533a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f8790053530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f87900536c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f8790053850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f87900539e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8790053b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f8790053d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f8790052020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f87900521b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f8790052340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f87900524d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f8790052660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f87900527f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f8790052a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8790052c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f8790052da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f8790051020"/>
        <function-ref name="isUart" scoped="" ref="0x7f87900511b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8790051340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f87900514d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f8790051660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f87900517f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f8790051980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f8790051b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790051ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f8790050220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f87900503b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f8790050540"/>
        <function-ref name="tx" scoped="" ref="0x7f87900506d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f8790050860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f87900509f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8790050b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f8790050d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879004f020"/>
        <function-ref name="rx" scoped="" ref="0x7f879004f1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879004f340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879004f4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879004f660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879004f7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879004f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f87900547c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f87900547c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8790054b40"/>
        <function-ref name="userId" scoped="" ref="0x7f8790054cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f8790ef22c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790ef22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f8790ef2640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8790ef27d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f8790ef18a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790ef18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8790ef1c20"/>
        <function-ref name="configure" scoped="" ref="0x7f8790ef1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f8790ef54d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f8790ef54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8790ef5850"/>
        <function-ref name="txDone" scoped="" ref="0x7f8790ef59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790ef3020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790ef3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790ef33a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790ef3530"/>
        <function-ref name="request" scoped="" ref="0x7f8790ef36c0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790ef3850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790ef39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f8790ef43f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f8790ef43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8790ef4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f8790ef2ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790ef2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8790ef2e50"/>
        <function-ref name="userId" scoped="" ref="0x7f8790ef1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f8790edcbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790edcbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8790edb020"/>
        <function-ref name="userId" scoped="" ref="0x7f8790edb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f8790eeed60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f8790eeed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8790eed180"/>
        <function-ref name="txDone" scoped="" ref="0x7f8790eed310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f8790edc5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f8790edc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8790edc960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f8790eed710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f8790eed710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8790eedab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f8790eedd80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f8790eedd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f8790edc180"/>
        <function-ref name="txDone" scoped="" ref="0x7f8790edc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f8790e5ca60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f8790e5ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f8790e5ce00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8790e5b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f8790e5a790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8790e5a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8790e5ab30"/>
        <function-ref name="configure" scoped="" ref="0x7f8790e5acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f8790e5b270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8790e5b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790e5b5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f8790e5b780"/>
        <function-ref name="granted" scoped="" ref="0x7f8790e5b910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790e5baa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8790e5bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790e5dca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790e5dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790e5c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790e5c230"/>
        <function-ref name="request" scoped="" ref="0x7f8790e5c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790e5c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790e5c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f8790e59020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f8790e59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8790e593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f8790e5be80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8790e5be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8790e5a220"/>
        <function-ref name="userId" scoped="" ref="0x7f8790e5a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f878ffd9020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f878ffd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f878ffd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f878ffd9630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f878ffd9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f878ffd99b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f878ffd9b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f878ffd9cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f878ffd9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f878ffd66c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f878ffd66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f878ffd6a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f878ffd6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f878ffd39d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f878ffd39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f878ffd3d70"/>
        <function-ref name="configure" scoped="" ref="0x7f878ffd2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f878ffd22b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f878ffd22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f878ffd2630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f878ffd27c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f878ffd2950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f878ffd2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f878ffd6e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f878ffd6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f878ffd41e0"/>
        <function-ref name="requested" scoped="" ref="0x7f878ffd4370"/>
        <function-ref name="granted" scoped="" ref="0x7f878ffd4500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f878ffd4690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f878ffd4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f878ffd2d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f878ffd2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f878ffd10e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f878ffd1270"/>
        <function-ref name="led1On" scoped="" ref="0x7f878ffd1400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f878ffd1590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f878ffd1720"/>
        <function-ref name="get" scoped="" ref="0x7f878ffd18b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f878ffd1a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f878ffd01b0"/>
        <function-ref name="set" scoped="" ref="0x7f878ffd1d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f878ffd1bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f878ffd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f878ffd7850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f878ffd7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f878ffd7bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f878ffd7d80"/>
        <function-ref name="request" scoped="" ref="0x7f878ffd6020"/>
        <function-ref name="granted" scoped="" ref="0x7f878ffd61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f878ffd6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f878ffd32d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f878ffd32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f878ffd3650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f878ffd4a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f878ffd4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f878ffd4df0"/>
        <function-ref name="userId" scoped="" ref="0x7f878ffd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f878ffd0480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f878ffd0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f878ffd0800"/>
        <function-ref name="runTask" scoped="" ref="0x7f878ffd0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f8790e50020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f8790e50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f8790e503a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f8790e50530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f8790e506c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f8790e50850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f8790e509e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f8790e50b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f8790e50d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f8790e4f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8790e4f1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f8790e4f340"/>
        <function-ref name="getData" scoped="" ref="0x7f8790e4f4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f8790e4f660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f8790e4f7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f8790e4fa80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f8790e4fc10"/>
        <function-ref name="getIV" scoped="" ref="0x7f8790e4fda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f8790e4e020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f8790e4e1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f8790e4e340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f8790e4e4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f8790e4e660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f8790e4e7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f8790e4e980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f8790e4eb10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f8790e4eca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f8790e4d220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f8790e4d3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f8790e4d540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f8790e4d6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f8790e4d860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f8790e4d9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f8790e4db80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f8790e4dd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f8790e4c020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f8790e4c1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f8790e4c340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f8790e4c4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f8790e4c660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f8790e4c7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f8790e4c980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f8790e4cb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f8790e4cca0"/>
        <function-ref name="setData" scoped="" ref="0x7f8790e4ce30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f8790e4b020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f8790e4b1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f8790e4b340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f8790e4b4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f8790e4b660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f8790e4b7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f8790e4bd80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f8790e4a020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f8790e4a1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f8790e4a340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f8790e4a4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f8790e4a660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f8790e4a7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f8790e4a980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f8790e4ab10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f8790e4aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f8790e3fbb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f8790e3fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8790e3e020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f8790e3e1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f8790e3e340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f8790e3e4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f8790e3e660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8790e3e7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f8790e3e980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f8790e3eb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f8790e3eca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f8790e3ee30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f8790e3d020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f8790e3d1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f8790e3d340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f8790e3d5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8790e3d760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f8790e3d8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f8790e3da80"/>
        <function-ref name="isUart" scoped="" ref="0x7f8790e3dc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8790e3dda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f8790e3c020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f8790e3c1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8790e3c340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f8790e3c4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f8790e3c660"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790e3c7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f8790e3cb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f8790e3cd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f8790e3b020"/>
        <function-ref name="tx" scoped="" ref="0x7f8790e3b1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f8790e3b340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f8790e3b4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8790e3b660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f8790e3b7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f8790e3b980"/>
        <function-ref name="rx" scoped="" ref="0x7f8790e3bb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f8790e3bca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f8790e3be30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f8790e3a020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f8790e3a1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f8790e3a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f8790e38e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f8790e38e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790e371e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790e37370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790e37500"/>
        <function-ref name="clr" scoped="" ref="0x7f8790e351b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790e37820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790e379b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790e37b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790e37cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790e37e60"/>
        <function-ref name="get" scoped="" ref="0x7f8790e36020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790e361b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790e36340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790e364d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790e36760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790e368f0"/>
        <function-ref name="set" scoped="" ref="0x7f8790e36a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790e36c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790e37690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790e36da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790e35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f8790e48d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f8790e48d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f8790e450e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f8790e45270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f8790e45400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f8790e45590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f8790e45720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f8790e458b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f8790e45a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f8790e45bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8790e45d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f8790e44020"/>
        <function-ref name="getData" scoped="" ref="0x7f8790e441b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f8790e44340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f8790e444d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f8790e44760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f8790e448f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f8790e44a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f8790e44c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f8790e44da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f8790e43020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f8790e431b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f8790e43340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f8790e434d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f8790e43660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f8790e437f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f8790e43980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f8790e43d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f8790e42020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f8790e421b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f8790e42340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f8790e424d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f8790e42660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f8790e427f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f8790e42980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f8790e42b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f8790e42ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f8790e42e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f8790e41020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f8790e411b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f8790e41340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f8790e414d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f8790e41660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f8790e417f0"/>
        <function-ref name="setData" scoped="" ref="0x7f8790e41980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f8790e41b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f8790e41ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f8790e41e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f8790e40020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f8790e401b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f8790e40340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f8790e408d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f8790e40a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f8790e40bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f8790e40d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f8790e3f020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f8790e3f1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f8790e3f340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f8790e3f4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f8790e3f660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f8790e3f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f8790e3a700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f8790e3a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790e3aa80"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790e3ac10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790e3ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f8790e38a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790e391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790e39340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790e394d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790e39660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790e397f0"/>
        <function-ref name="get" scoped="" ref="0x7f8790e39980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790e39b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790e39ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790e39e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790e38120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790e382b0"/>
        <function-ref name="set" scoped="" ref="0x7f8790e38440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790e385d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790e39020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790e38760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790e388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8790d24c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790d24c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d22210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8790d2eda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f8790d2eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8790d27b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790d27b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d26020"/>
        <function-ref name="write" scoped="" ref="0x7f8790d261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8790d21670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790d21670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d219f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d21b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f8790d1ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f8790d1ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d19210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8790d21e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f8790d21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d20210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8790d0d2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f8790d0d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d0d670"/>
        <function-ref name="write" scoped="" ref="0x7f8790d0d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8790d102f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f8790d102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d10670"/>
        <function-ref name="write" scoped="" ref="0x7f8790d10800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8790d2c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f8790d2c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f8790d15670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f8790d15670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d159f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d15b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8790d112f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790d112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d11670"/>
        <function-ref name="write" scoped="" ref="0x7f8790d11800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8790d26c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f8790d26c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d25020"/>
        <function-ref name="write" scoped="" ref="0x7f8790d251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8790d25c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f8790d25c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d24020"/>
        <function-ref name="write" scoped="" ref="0x7f8790d241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f8790d1b670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f8790d1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8790d1ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f8790d1ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1c210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8790d20670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f8790d20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d209f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d20b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8790d2f760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790d2f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8790d2fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8790d2fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8790d2fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8790d2baa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790d2baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8790d29120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f8790d29120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d295a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f8790d14a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790d14a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d14df0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8790d29870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f8790d29870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d29bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8790d11ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790d11ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d11e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790d10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8790d2cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790d2cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f8790d17e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f8790d17e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d15210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8790d25480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790d25480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d25800"/>
        <function-ref name="write" scoped="" ref="0x7f8790d25990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8790d26480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790d26480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d26800"/>
        <function-ref name="write" scoped="" ref="0x7f8790d26990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8790d2e750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f8790d2e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f8790d18e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790d18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d17210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f8790d19670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f8790d19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d199f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f8790d17670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790d17670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d179f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d17b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8790d0ead0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f8790d0ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d0ee50"/>
        <function-ref name="write" scoped="" ref="0x7f8790d0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8790d10ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f8790d10ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d10e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790d0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8790d1c670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f8790d1c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f8790d19e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f8790d19e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d18210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8790d12ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f8790d12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d12e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790d11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8790d1f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f8790d1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8790d0dad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f8790d0dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790d0de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790d0c020"/>
        <function-ref name="write" scoped="" ref="0x7f8790d0c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790d0c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790d0c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8790d2e100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f8790d2e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8790d27370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f8790d27370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d276f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d27880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8790d24480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790d24480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d24800"/>
        <function-ref name="write" scoped="" ref="0x7f8790d24990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f8790d1be50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f8790d1be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1a210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8790d20e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f8790d20e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1f210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f8790d1a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f8790d1a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8790d22670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f8790d22670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d229f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d22b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8790d2d450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f8790d2d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8790d22e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790d22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d21210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790d31a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790d31a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790d31e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790d2f020"/>
        <function-ref name="request" scoped="" ref="0x7f8790d2f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790d2f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790d2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8790d28020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f8790d28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8790d28cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f8790d28cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d270a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8790d122f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f8790d122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d12670"/>
        <function-ref name="write" scoped="" ref="0x7f8790d12800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8790d13ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f8790d13ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d13e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790d12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8790d2b450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790d2b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8790d132f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790d132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d13670"/>
        <function-ref name="write" scoped="" ref="0x7f8790d13800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8790d0e2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f8790d0e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d0e670"/>
        <function-ref name="write" scoped="" ref="0x7f8790d0e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8790d1ce50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790d1ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1b210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f8790d18670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f8790d18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d189f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8790d2daa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f8790d2daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8790d2c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f8790d2c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d2caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8790d1fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f8790d1fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1e210"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8790d28670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f8790d28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d289f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8790d1e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f8790d1e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d1e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d1eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f8790d15e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f8790d15e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790d14610"/>
        <function-ref name="write" scoped="" ref="0x7f8790d147a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8790d0c7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f8790d0c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790d0cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790d0ccb0"/>
        <function-ref name="write" scoped="" ref="0x7f8790d0ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790d0b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790d0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8790cf7c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790cf7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf6210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8790d02da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f8790d02da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d01180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8790cfbb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790cfbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf9020"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8790cf5670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790cf5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf59f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f8790ceee50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f8790ceee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cec210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8790cf5e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f8790cf5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf3210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8790ce12f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f8790ce12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce1670"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8790ce32f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f8790ce32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce3670"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8790cff120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f8790cff120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cff4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f8790ce9670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f8790ce9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce99f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8790ce42f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790ce42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce4670"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8790cf9c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f8790cf9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf8020"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8790cf8c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f8790cf8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf7020"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f8790cef670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f8790cef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cef9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cefb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8790cf1e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f8790cf1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf0210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8790cf3670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f8790cf3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf39f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8790d03760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790d03760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8790d03ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8790d03c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8790d03e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8790cfeaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790cfeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8790cfd120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f8790cfd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfd5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f8790ce8a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790ce8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce8df0"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8790cfd870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f8790cfd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8790ce4ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790ce4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce4e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8790cffdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790cffdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfe180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f8790ceae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f8790ceae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce9210"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8790cf8480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790cf8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf8800"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8790cf9480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790cf9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf9800"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8790d02750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f8790d02750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d02ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f8790cebe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790cebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cea210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f8790cec670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f8790cec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cec9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f8790cea670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790cea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cea9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790ceab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8790ce2ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f8790ce2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce2e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8790ce3ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f8790ce3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce3e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8790cf0670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f8790cf0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf09f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f8790cece50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f8790cece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ceb210"/>
        <function-ref name="write" scoped="" ref="0x7f8790ceb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8790ce5ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f8790ce5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce5e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8790cf2670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f8790cf2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf29f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8790ce1ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f8790ce1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790ce1e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790ce0020"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce01b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790ce0340"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790ce04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8790d02100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f8790d02100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d02480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8790cfb370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f8790cfb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cfb6f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cfb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8790cf7480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790cf7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf7800"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f8790cefe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f8790cefe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cee210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8790cf3e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f8790cf3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf2210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f8790cee670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f8790cee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cee9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790ceeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8790cf6670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f8790cf6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf69f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8790d01450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f8790d01450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d017d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8790cf6e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790cf6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf5210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790d049e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790d049e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790d04d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790d03020"/>
        <function-ref name="request" scoped="" ref="0x7f8790d031b0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790d03340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790d034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8790cfc020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f8790cfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8790cfccc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f8790cfccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8790ce52f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f8790ce52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce5670"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8790ce7ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f8790ce7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce7e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8790cfe450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790cfe450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfe7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8790ce72f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790ce72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce7670"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8790ce22f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f8790ce22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce2670"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8790cf0e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790cf0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cef210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f8790ceb670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f8790ceb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ceb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8790d01aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f8790d01aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790d01e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8790cff770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f8790cff770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cffaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8790cf2e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f8790cf2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf1210"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8790cfc670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f8790cfc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790cfc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8790cf1670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f8790cf1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cf19f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790cf1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f8790ce9e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f8790ce9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ce8610"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce87a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8790ce07a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f8790ce07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790ce0b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790ce0cb0"/>
        <function-ref name="write" scoped="" ref="0x7f8790ce0e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790cdf020"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790cdf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f8790cd7b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8790cd7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f8790cd4020"/>
        <function-ref name="changed" scoped="" ref="0x7f8790cd41b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f8790cd4340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f8790cd44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f8790cd6d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8790cd6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f8790cc00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f8790cbb310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8790cbb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f8790cbb690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f8790cb8880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f8790cb8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cb8c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f8790cad020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f8790cad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790cad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f8790ca3bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f8790ca3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ca7020"/>
        <function-ref name="write" scoped="" ref="0x7f8790ca71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f8790ca7530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f8790ca7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8790ca78b0"/>
        <function-ref name="stop" scoped="" ref="0x7f8790ca7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f8790ca8140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f8790ca8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790ca84c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f8790cacc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f8790cacc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790c93020"/>
        <function-ref name="write" scoped="" ref="0x7f8790c931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f8790c93540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f8790c93540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790c938c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790c93a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790c93be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790c93d70"/>
        <function-ref name="get" scoped="" ref="0x7f8790c92020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790c921b0"/>
        <function-ref name="set" scoped="" ref="0x7f8790c92340"/>
        <function-ref name="clr" scoped="" ref="0x7f8790c924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f8790c8a950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f8790c8a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f8790c8c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f8790c8f150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f8790c8f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790c8f4d0"/>
        <function-ref name="write" scoped="" ref="0x7f8790c8f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f8790c8f9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f8790c8f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790c8fd70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790c8e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790c8e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790c8e340"/>
        <function-ref name="get" scoped="" ref="0x7f8790c8e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790c8e660"/>
        <function-ref name="set" scoped="" ref="0x7f8790c8e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8790c8e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f8790c91ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f8790c91ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f8790c69ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f8790c67a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f8790c67a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f8790c668d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8790c57020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8790c57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790c57e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8790c55800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790c55340"/>
        <function-ref name="overflow" scoped="" ref="0x7f8790c55cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f8790c51530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f8790c51530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790c503d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8790c50d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790c50890"/>
        <function-ref name="overflow" scoped="" ref="0x7f8790c4f260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f8790c4a020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f8790c4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8790c4a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f8790c4a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f8790c4a6c0"/>
        <function-ref name="get" scoped="" ref="0x7f8790c4a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f8790c4a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8790c4ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7f8790c4ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790c49020"/>
        <function-ref name="overflow" scoped="" ref="0x7f8790c491b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f8790c49340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f8790c494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8790c4de50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8790c4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd8640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8791cd89b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790c4cca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8790c4b670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790c4b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8790c4bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f8790c94590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f8790c94590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790c94910"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790c94aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790c94c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790c94dc0"/>
        <function-ref name="get" scoped="" ref="0x7f8790c45020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790c451b0"/>
        <function-ref name="set" scoped="" ref="0x7f8790c45340"/>
        <function-ref name="clr" scoped="" ref="0x7f8790c454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f8790c42c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f8790c42c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790c41020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790c411b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f8790c41340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f8790c3f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790c41660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790c417f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f8790c41980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f8790c41b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790c41ca0"/>
        <function-ref name="get" scoped="" ref="0x7f8790c41e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f8790c40020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f8790c401b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f8790c40340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f8790c405d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f8790c40760"/>
        <function-ref name="set" scoped="" ref="0x7f8790c408f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f8790c40a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f8790c40c10"/>
        <function-ref name="clr" scoped="" ref="0x7f8790c414d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f8790c40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8790c439e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f8790c439e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790c43d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790c42020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790c421b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790c42340"/>
        <function-ref name="get" scoped="" ref="0x7f8790c424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790c42660"/>
        <function-ref name="set" scoped="" ref="0x7f8790c427f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8790c42980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8790c3a1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f8790c3a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8790c3a530"/>
        <function-ref name="stop" scoped="" ref="0x7f8790c3a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8790c2bcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8790c2bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8790c2a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8790c2a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8790c2a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8790c2a550"/>
        <function-ref name="setCca" scoped="" ref="0x7f8790c2a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8790c2a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f8790c27990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8790c27990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8790c27d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f8790c2b020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8790c2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790c2b3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790c2b530"/>
        <function-ref name="modify" scoped="" ref="0x7f8790c2b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8790c2b850"/>
        <function-ref name="resend" scoped="" ref="0x7f8790c2b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8790c2e6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f8790c2e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8790c2ea40"/>
        <function-ref name="stop" scoped="" ref="0x7f8790c2ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f8790c29150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f8790c29150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8790c294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8790c1d970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8790c1d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8790c1dcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8790c1de80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8790c1c030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8790c1c1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f8790c1c350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8790c1c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f8790c0dc60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8790c0dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8790c11210"/>
        <function-ref name="clear" scoped="" ref="0x7f8790c11940"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790c12ac0"/>
        <function-ref name="set" scoped="" ref="0x7f8790c0a090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f8790bf5020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790bf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bf53a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790bf5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f8790bf5890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f8790bf5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bf5c10"/>
        <function-ref name="write" scoped="" ref="0x7f8790bf5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f8790c1c900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8790c1c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8790c1cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f8790bf8530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f8790bf8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790bf88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f8790c07a80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f8790c07a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f8790c07e00"/>
        <function-ref name="disable" scoped="" ref="0x7f8790c06020"/>
        <function-ref name="captured" scoped="" ref="0x7f8790c061b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f8790c06340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f8790c1bae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f8790c1bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8790c15390"/>
        <function-ref name="fired" scoped="" ref="0x7f8790c17360"/>
        <function-ref name="startAt" scoped="" ref="0x7f8790c17ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8790c17820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8790c15850"/>
        <function-ref name="start" scoped="" ref="0x7f8790c18970"/>
        <function-ref name="stop" scoped="" ref="0x7f8790c18e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8790c15d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790c15d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8790c140a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8790c14230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8790c143c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8790c14550"/>
        <function-ref name="getPower" scoped="" ref="0x7f8790c146e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8790c14870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f8790bfa550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790bfa550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bfa8d0"/>
        <function-ref name="write" scoped="" ref="0x7f8790bfaa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f8790bfae00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f8790bfae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bf91c0"/>
        <function-ref name="write" scoped="" ref="0x7f8790bf9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f8790befd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f8790befd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790bf20e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f8790bf2270"/>
        <function-ref name="sfd" scoped="" ref="0x7f8790bf2400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8790c1ebc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f8790c1ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790c1d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790c1d1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f8790c1d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8790c1d4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f8790c1d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f8790bfdd10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790bfdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8790bfc0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8790bfc270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8790bfc400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f8790bf8c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790bf8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790bf7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f8790c009b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f8790c009b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790c00d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790bff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790bff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790bff340"/>
        <function-ref name="get" scoped="" ref="0x7f8790bff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790bff660"/>
        <function-ref name="set" scoped="" ref="0x7f8790bff7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8790bff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8790c20c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8790c20c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8790c1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8790c14bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790c14bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8790c13020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8790c131b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8790c13340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f8790c01e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8790c01e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790c07220"/>
        <function-ref name="isSet" scoped="" ref="0x7f8790c073b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790c07540"/>
        <function-ref name="set" scoped="" ref="0x7f8790c076d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f8790bf73e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790bf73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bf7960"/>
        <function-ref name="write" scoped="" ref="0x7f8790bf7af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8790bfd020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f8790bfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790bfd3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790bfd530"/>
        <function-ref name="request" scoped="" ref="0x7f8790bfd6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790bfd850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790bfd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f8790c06690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f8790c06690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790c06b10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790c06ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790c06e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790c00020"/>
        <function-ref name="get" scoped="" ref="0x7f8790c001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790c00340"/>
        <function-ref name="set" scoped="" ref="0x7f8790c004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8790c00660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f8790bf4130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f8790bf4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bf44b0"/>
        <function-ref name="write" scoped="" ref="0x7f8790bf4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f8790bf49c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f8790bf49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bf4d40"/>
        <function-ref name="write" scoped="" ref="0x7f8790bf3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f8790bf96d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f8790bf96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790bf9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f8790bffcd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f8790bffcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790bfe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790bfe230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790bfe3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790bfe550"/>
        <function-ref name="get" scoped="" ref="0x7f8790bfe6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790bfe870"/>
        <function-ref name="set" scoped="" ref="0x7f8790bfea00"/>
        <function-ref name="clr" scoped="" ref="0x7f8790bfeb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8790bf26c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8790bf26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8790bf2a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8790bf2bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8790bf2d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8790bf1020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8790bf11b0"/>
        <function-ref name="get" scoped="" ref="0x7f8790bf1340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8790bf14d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8790bf1b10"/>
        <function-ref name="set" scoped="" ref="0x7f8790bf1660"/>
        <function-ref name="led0On" scoped="" ref="0x7f8790bf17f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8790bf1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f8790bf65e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790bf65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790bf6960"/>
        <function-ref name="write" scoped="" ref="0x7f8790bf6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8790c1e320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f8790c1e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8790c1e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8790c1e830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f8790bfc780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f8790bfc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790bfcb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790bfcc90"/>
        <function-ref name="write" scoped="" ref="0x7f8790bfce20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790bfa020"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790bfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f8790bf9de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f8790bf9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790bf8180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f8790bf7e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f8790bf7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790bf6220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f8790c1b0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f8790c1b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8790c1b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8790b54c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790b54c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b53210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8790b5e020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f8790b5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8790b58c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790b58c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b57020"/>
        <function-ref name="write" scoped="" ref="0x7f8790b571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8790b52670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790b52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b529f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b52b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f8790b4be50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f8790b4be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4a210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8790b52e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f8790b52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b51210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8790b3e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f8790b3e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b3e670"/>
        <function-ref name="write" scoped="" ref="0x7f8790b3e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8790b402f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f8790b402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b40670"/>
        <function-ref name="write" scoped="" ref="0x7f8790b40800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8790b5d370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f8790b5d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f8790b46670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f8790b46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b469f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b46b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8790b422f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790b422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b42670"/>
        <function-ref name="write" scoped="" ref="0x7f8790b42800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8790b57c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f8790b57c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b55020"/>
        <function-ref name="write" scoped="" ref="0x7f8790b551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8790b55c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f8790b55c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b54020"/>
        <function-ref name="write" scoped="" ref="0x7f8790b541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f8790b4c670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f8790b4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8790b4ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f8790b4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4d210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8790b51670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f8790b51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b519f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b51b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8790b608f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790b608f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8790b60c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8790b60e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8790b5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8790b5cd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790b5cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8790b5a370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f8790b5a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f8790b45a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790b45a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b45df0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8790b5aac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f8790b5aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8790b42ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790b42ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b42e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790b40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8790b5c060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790b5c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f8790b47e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f8790b47e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b46210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8790b55480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790b55480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b55800"/>
        <function-ref name="write" scoped="" ref="0x7f8790b55990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8790b57480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790b57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b57800"/>
        <function-ref name="write" scoped="" ref="0x7f8790b57990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8790b5f940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f8790b5f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f8790b49e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790b49e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b47210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f8790b4a670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f8790b4a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f8790b47670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790b47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b479f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b47b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8790b3fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f8790b3fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b3fe50"/>
        <function-ref name="write" scoped="" ref="0x7f8790b3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8790b40ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f8790b40ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b40e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790b3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8790b4d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f8790b4d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f8790b4ae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f8790b4ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b49210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8790b43ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f8790b43ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b43e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790b42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8790b50670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f8790b50670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b509f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b50b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8790b3ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f8790b3ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790b3ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790b3d020"/>
        <function-ref name="write" scoped="" ref="0x7f8790b3d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790b3d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790b3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8790b5f2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f8790b5f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8790b58490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f8790b58490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b58810"/>
        <function-ref name="write" scoped="" ref="0x7f8790b589a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8790b54480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790b54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b54800"/>
        <function-ref name="write" scoped="" ref="0x7f8790b54990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f8790b4ce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f8790b4ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4b210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8790b51e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f8790b51e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b50210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f8790b4b670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f8790b4b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8790b53670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f8790b53670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b539f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b53b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8790b5e670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f8790b5e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8790b53e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790b53e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b52210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790b61c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790b61c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790b60020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790b601b0"/>
        <function-ref name="request" scoped="" ref="0x7f8790b60340"/>
        <function-ref name="granted" scoped="" ref="0x7f8790b604d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790b60660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8790b59160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f8790b59160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b594e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8790b59e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f8790b59e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b581c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8790b432f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f8790b432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b43670"/>
        <function-ref name="write" scoped="" ref="0x7f8790b43800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8790b44ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f8790b44ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b44e50"/>
        <function-ref name="write" scoped="" ref="0x7f8790b43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8790b5c6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790b5c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8790b442f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790b442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b44670"/>
        <function-ref name="write" scoped="" ref="0x7f8790b44800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8790b3f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f8790b3f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b3f670"/>
        <function-ref name="write" scoped="" ref="0x7f8790b3f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8790b4de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790b4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4c210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f8790b49670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f8790b49670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b499f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b49b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8790b5ecc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f8790b5ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8790b5d9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f8790b5d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b5dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8790b50e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f8790b50e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4e210"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8790b597b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f8790b597b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b59b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8790b4e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f8790b4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b4e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f8790b46e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f8790b46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b45610"/>
        <function-ref name="write" scoped="" ref="0x7f8790b457a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8790b3d7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f8790b3d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790b3db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790b3dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b3de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790b3c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790b3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f8790b31df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f8790b31df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790b2e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f8790b2e350"/>
        <function-ref name="sfd" scoped="" ref="0x7f8790b2e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8790b2e7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f8790b2e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790b2eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f8790b2d020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f8790b2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8790b2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8790b315c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f8790b315c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8790b31940"/>
        <function-ref name="stop" scoped="" ref="0x7f8790b31ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f8790b24380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f8790b24380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790b24700"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790b24890"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790b24a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790b24bb0"/>
        <function-ref name="get" scoped="" ref="0x7f8790b24d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790b23020"/>
        <function-ref name="set" scoped="" ref="0x7f8790b231b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8790b23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f8790b1db90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f8790b1db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8790b1c020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8790b1c1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f8790b1c340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f8790b1c4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f8790b1c660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f8790b1c7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f8790b1c980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f8790b1cb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f8790b1cca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f8790b1ce30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f8790b1b020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f8790b1b1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f8790b1b340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f8790b1b5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f8790b1b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f8790b069d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f8790b069d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8790b06d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f8790b05020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f8790b1bd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8790b1bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8790b18330"/>
        <function-ref name="clear" scoped="" ref="0x7f8790b18a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790b1aba0"/>
        <function-ref name="set" scoped="" ref="0x7f8790b17210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f8790b236b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f8790b236b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790b23a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790b23bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790b23d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790b22020"/>
        <function-ref name="get" scoped="" ref="0x7f8790b221b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790b22340"/>
        <function-ref name="set" scoped="" ref="0x7f8790b224d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8790b22660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f8790b16cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790b16cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b150a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b15230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f8790b15590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f8790b15590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b15910"/>
        <function-ref name="write" scoped="" ref="0x7f8790b15aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f8790b146d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f8790b146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b14a50"/>
        <function-ref name="write" scoped="" ref="0x7f8790b14be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8790b1e330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790b1e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8790b1e6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8790b1e840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8790b1e9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8790b1eb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f8790b1ecf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8790b1ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f8790b27550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f8790b27550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790b278d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f8790b27a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f8790b27bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f8790b1f3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f8790b1f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b1f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f8790b25020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f8790b25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8790b253a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8790b25530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8790b256c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8790b25850"/>
        <function-ref name="get" scoped="" ref="0x7f8790b259e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8790b25b70"/>
        <function-ref name="set" scoped="" ref="0x7f8790b25d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8790b24020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f8790b13020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790b13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b133a0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b13530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8790b29620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8790b29620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8790b299a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8790b1d1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790b1d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8790b1d560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8790b1d6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8790b1d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8790b26020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f8790b26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790b263a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8790b216e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f8790b216e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790b21a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790b21bf0"/>
        <function-ref name="request" scoped="" ref="0x7f8790b21d80"/>
        <function-ref name="granted" scoped="" ref="0x7f8790b20020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790b201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f8790b15e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f8790b15e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b141c0"/>
        <function-ref name="write" scoped="" ref="0x7f8790b14350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f8790b20530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f8790b20530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790b208b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790b20a40"/>
        <function-ref name="write" scoped="" ref="0x7f8790b20bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790b20d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790b1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f8790b138b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f8790b138b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b13e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f8790b267c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f8790b267c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8790b26b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8790b11150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f8790b11150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8790b114d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8790b11660"/>
        <function-ref name="led1On" scoped="" ref="0x7f8790b117f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8790b11980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8790b11b10"/>
        <function-ref name="get" scoped="" ref="0x7f8790b11ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8790b11e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8790b104d0"/>
        <function-ref name="set" scoped="" ref="0x7f8790b10020"/>
        <function-ref name="led0On" scoped="" ref="0x7f8790b101b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8790b10340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f8790b163e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790b163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790b16760"/>
        <function-ref name="write" scoped="" ref="0x7f8790b168f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f8790b17b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f8790b17b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f8790b22a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8790b22a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8790b22dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f8790b21020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8790b211b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8790b21340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f8790b1fad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790b1fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790b1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8790b29ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f8790b29ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8790b270a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8790b27230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f8790aa5a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8790aa5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f8790aa5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f8790aa9670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790aa9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8790aa99f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8790aa9b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8790aa9d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8790aa6020"/>
        <function-ref name="getPower" scoped="" ref="0x7f8790aa61b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8790aa6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f8790aa4550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790aa4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8790aa3b00"/>
        <function-ref name="clear" scoped="" ref="0x7f8790aa12a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790aa33d0"/>
        <function-ref name="set" scoped="" ref="0x7f8790aa19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f8790aa50c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790aa50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8790aa5440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8790aa55d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8790aa5760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f8790a9c480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8790a9c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790a9c800"/>
        <function-ref name="isSet" scoped="" ref="0x7f8790a9c990"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790a9cb20"/>
        <function-ref name="set" scoped="" ref="0x7f8790a9ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f8790aa0660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8790aa0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8790a9fce0"/>
        <function-ref name="clear" scoped="" ref="0x7f8790a9d460"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790a9f5b0"/>
        <function-ref name="set" scoped="" ref="0x7f8790a9db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f8790aa66e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f8790aa66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8790aa6a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f8790aa6bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8790aa6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f8790a96020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8790a96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f8790a963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f8790a9bd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8790a9bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8790a980e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8790a98270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8790a98400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8790a98590"/>
        <function-ref name="getPower" scoped="" ref="0x7f8790a98720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8790a988b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f8790a8d4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f8790a8d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8790a8d820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8790a8d9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790a8db40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8790a8dcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8790a8de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f8790a96a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790a96a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8790a93020"/>
        <function-ref name="clear" scoped="" ref="0x7f8790a93750"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790a958d0"/>
        <function-ref name="set" scoped="" ref="0x7f8790a93e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f8790a97640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790a97640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8790a979c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8790a97b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8790a97ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f8790a8e8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8790a8e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790a8ec30"/>
        <function-ref name="isSet" scoped="" ref="0x7f8790a8edc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790a8d020"/>
        <function-ref name="set" scoped="" ref="0x7f8790a8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f8790a8c3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f8790a8c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790a8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f8790a8b6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f8790a8b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790a893d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f8790a92af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8790a92af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8790a8f0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f8790a8f800"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790a91970"/>
        <function-ref name="set" scoped="" ref="0x7f8790a8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f8790a98c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f8790a98c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8790a97020"/>
        <function-ref name="noAck" scoped="" ref="0x7f8790a971b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8790a97340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8790a3a020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f8790a3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790a3ac50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8790a38300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f8790a38300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8790a37150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8790a37ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8790a37610"/>
        <function-ref name="overflow" scoped="" ref="0x7f8790a36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8790a34450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f8790a34450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8790a30a20"/>
        <function-ref name="fired" scoped="" ref="0x7f8790a31020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8790a31da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8790a31920"/>
        <function-ref name="getdt" scoped="" ref="0x7f8790a2f4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f8790a2f020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8790a314a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8790a33090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8790a30410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8790a33560"/>
        <function-ref name="stop" scoped="" ref="0x7f8790a33a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8790a1fc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8790a1fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1d210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8790a28020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f8790a28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8790a22c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8790a22c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a21020"/>
        <function-ref name="write" scoped="" ref="0x7f8790a211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8790a1c670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8790a1c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f8790a15e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f8790a15e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a14210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8790a1ce50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f8790a1ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1b210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8790a082f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f8790a082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a08670"/>
        <function-ref name="write" scoped="" ref="0x7f8790a08800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8790a0b2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f8790a0b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0b670"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8790a27370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f8790a27370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a276f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f8790a10670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f8790a10670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a109f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a10b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8790a0c2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8790a0c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0c670"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8790a21c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f8790a21c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a20020"/>
        <function-ref name="write" scoped="" ref="0x7f8790a201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8790a20c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f8790a20c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1f020"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f8790a16670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f8790a16670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a169f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a16b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8790a19e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f8790a19e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a18210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8790a1b670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f8790a1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8790a2a970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8790a2a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8790a2acf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8790a2ae80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8790a29030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8790a26d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8790a26d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a250a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8790a25370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f8790a25370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f8790a0fa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f8790a0fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0fdf0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8790a25ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f8790a25ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a25e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8790a0cad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8790a0cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0ce50"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8790a26060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8790a26060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a263e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f8790a12e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f8790a12e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a10210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8790a20480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8790a20480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a20800"/>
        <function-ref name="write" scoped="" ref="0x7f8790a20990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8790a21480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8790a21480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a21800"/>
        <function-ref name="write" scoped="" ref="0x7f8790a21990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8790a29950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f8790a29950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a29cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f8790a13e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f8790a13e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a12210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f8790a14670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f8790a14670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a149f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a14b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f8790a12670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f8790a12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a129f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a12b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8790a0aad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f8790a0aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0ae50"/>
        <function-ref name="write" scoped="" ref="0x7f8790a08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8790a0bad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f8790a0bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0be50"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8790a18670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f8790a18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a189f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f8790a14e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f8790a14e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a13210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8790a0dad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f8790a0dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0de50"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8790a1a670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f8790a1a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8790a08ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f8790a08ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790a08e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790a07020"/>
        <function-ref name="write" scoped="" ref="0x7f8790a071b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790a07340"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790a074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8790a29300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f8790a29300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a29680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8790a22490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f8790a22490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a22810"/>
        <function-ref name="write" scoped="" ref="0x7f8790a229a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8790a1f480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8790a1f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1f800"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f8790a16e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f8790a16e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a15210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8790a1be50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f8790a1be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1a210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f8790a15670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f8790a15670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a159f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a15b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8790a1d670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f8790a1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8790a28670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f8790a28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a289f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8790a1de50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8790a1de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a1c210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8790a2cd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f8790a2cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790a2a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790a2a230"/>
        <function-ref name="request" scoped="" ref="0x7f8790a2a3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f8790a2a550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8790a2a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8790a23160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f8790a23160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a234e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8790a23e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f8790a23e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a221c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8790a0d2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f8790a0d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0d670"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8790a0ead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f8790a0ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0ee50"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8790a266b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8790a266b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a26a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8790a0e2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8790a0e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0e670"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8790a0a2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f8790a0a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0a670"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8790a18e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8790a18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a16210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f8790a13670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f8790a13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a139f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a13b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8790a28cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f8790a28cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a270a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8790a279c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f8790a279c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a27d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8790a1ae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f8790a1ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a19210"/>
        <function-ref name="write" scoped="" ref="0x7f8790a193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8790a237b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f8790a237b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8790a23b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8790a19670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f8790a19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a199f0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f8790a10e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f8790a10e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8790a0f610"/>
        <function-ref name="write" scoped="" ref="0x7f8790a0f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8790a077a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f8790a077a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8790a07b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8790a07cb0"/>
        <function-ref name="write" scoped="" ref="0x7f8790a07e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8790a06020"/>
        <function-ref name="readDone" scoped="" ref="0x7f8790a061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f87909dca20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f87909dca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f87909dcda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f87909db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f87909d9920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f87909d9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87909dc560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f87909e0990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f87909e0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87909e0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f87909d5a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f87909d5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f87909d5da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f87909d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f87909d6940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f87909d6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87909d5560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f87909d6080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f87909d6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87909d6400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f87909deaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f87909deaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87909dee20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87909c7020"/>
        <function-ref name="isState" scoped="" ref="0x7f87909c71b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87909c7340"/>
        <function-ref name="requestState" scoped="" ref="0x7f87909c74d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f87909c7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f87909bd020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f87909bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87909bd3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87909bd530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87909bd6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87909bd850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87909bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f87909be220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f87909be220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87909be5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87909be730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87909be8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87909bea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87909bebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f87909b9e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f87909b9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87909b8210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87909b83a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87909b8530"/>
        <function-ref name="cancel" scoped="" ref="0x7f87909b86c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87909b8850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f87909bca10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f87909bca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87909bcd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87909b9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87909b91b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87909b9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87909b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f87909b78f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f87909b78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f87909b7c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f87909b7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f87909b9750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f87909b9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f87909b9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f87909b6170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f87909b6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f87909b64f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f87909b6680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f87909b6810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f87909b8ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f87909b8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87909b8e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87909b7020"/>
        <function-ref name="isState" scoped="" ref="0x7f87909b71b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87909b7340"/>
        <function-ref name="requestState" scoped="" ref="0x7f87909b74d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f87909b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f87909ba690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f87909ba690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87909baa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87909baba0"/>
        <function-ref name="isState" scoped="" ref="0x7f87909bad30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87909a3020"/>
        <function-ref name="requestState" scoped="" ref="0x7f87909a31b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f87909a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879099d950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879099d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879099dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f87909a0aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f87909a0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87909a0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f879099d200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f879099d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879099d580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f87909973f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f87909973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790997770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8790999b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8790999b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8790997020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879099ce30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879099ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87909991e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8790997a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8790997a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8790997df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8790996020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f87909961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f8790999570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f8790999570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87909998f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8790969020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f8790969020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87909693a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f87909696b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f87909696b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790969a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790969bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8790969d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790968020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87909681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879096d8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879096d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879096dc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879096ddf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879096c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f879096c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879096c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f879096cc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f879096cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879096b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879096b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879096b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879096b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879096b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879096c5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879096c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879096c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879096ebe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879096ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879096d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879096d1b0"/>
        <function-ref name="request" scoped="" ref="0x7f879096d340"/>
        <function-ref name="granted" scoped="" ref="0x7f879096d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879096d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f879096ba50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f879096ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879096bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f879096a170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f879096a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879096a4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879096a680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879096a810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879096a9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879096ab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879095fd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879095fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879095e180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879095e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879095e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879095e630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879095e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879095eb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879095eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879095d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f8790930db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f8790930db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879092f180"/>
        <function-ref name="runTask" scoped="" ref="0x7f879092f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f879095d2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879095d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879095d670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879095d800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879095d990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879095db20"/>
        <function-ref name="getPower" scoped="" ref="0x7f879095dcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879095de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f8790961a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f8790961a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790961da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790960020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87909601b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790960340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87909604d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f879095cb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f879095cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879095b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879095b1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879095b340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879095b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879095c170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879095c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879095c4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879095c680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879095c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f8790961370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f8790961370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87909616f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f87909647b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f87909647b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8790964b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8790964cc0"/>
        <function-ref name="request" scoped="" ref="0x7f8790964e50"/>
        <function-ref name="granted" scoped="" ref="0x7f8790963020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f87909631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f87909634d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f87909634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790963850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87909639e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8790963b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790963d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8790961020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f8790960840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f8790960840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790960bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f879095f020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f879095f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879095f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879095f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879095f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879095f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879095f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8790910dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f8790910dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879090f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f879090f410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f879090f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879090f790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879090f920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879090fab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879090fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8790903b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f8790903b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8790902020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f87909021b0"/>
        <function-ref name="start" scoped="" ref="0x7f8790902340"/>
        <function-ref name="stop" scoped="" ref="0x7f87909024d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8790901860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f8790901860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790901be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790901d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8790900020"/>
        <function-ref name="cancel" scoped="" ref="0x7f87909001b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8790900340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8790900690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f8790900690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790900a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8790907ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f8790907ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87909040a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790904230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87909043c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790904550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87909046e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f8790903080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f8790903080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f8790903400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f8790903590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f8790903720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f87909038b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f8790902800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f8790902800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8790902b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8790902d10"/>
        <function-ref name="isState" scoped="" ref="0x7f8790901020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87909011b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8790901340"/>
        <function-ref name="forceState" scoped="" ref="0x7f87909014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f8790900d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f8790900d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f87908ff180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f87908ff310"/>
        <function-ref name="start" scoped="" ref="0x7f87908ff4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f87908ff630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8790904980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f8790904980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790904d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f87908fc2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f87908fc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f87908fc650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f87908fc7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f87908fc970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f87908fcb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f87908fe580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f87908fe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f87908fe900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f87908fea90"/>
        <function-ref name="isState" scoped="" ref="0x7f87908fec20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f87908fedb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f87908fd020"/>
        <function-ref name="forceState" scoped="" ref="0x7f87908fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f87908efd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f87908efd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87908ee180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87908ee310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87908ee4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87908ee630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87908ee7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f87908f2350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f87908f2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87908f26d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87908f2860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87908f29f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87908f2b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87908f2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f87908ef020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f87908ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f87908ef3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f87908ef530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f87908ef6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f87908ef850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f87908ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f87908ea1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f87908ea1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f87908ea540"/>
        <function-ref name="noAck" scoped="" ref="0x7f87908ea6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f87908ea860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f87908ed410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f87908ed410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f87908ed790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f87908ed920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f87908edab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f87908edc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f87908eddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f87908ca690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f87908ca690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87908caa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f87908cb860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f87908cb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87908cbbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87908cbd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87908ca020"/>
        <function-ref name="cancel" scoped="" ref="0x7f87908ca1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87908ca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f87908c8610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f87908c8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f87908c8990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f87908c8b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f87908c8cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f87908c8e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f87908c7020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f87908c71b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f87908c7340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f87908c74d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f87908c7660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f87908c77f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f87908c7980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f87908c7b10"/>
        <function-ref name="sync" scoped="" ref="0x7f87908c7ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f87908c6020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f87908c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f87908cc8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f87908cc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f87908ccc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f87908ccdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f87908cb020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f87908cb1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f87908cb340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f87908cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f87908cdce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f87908cdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f87908cc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f87908c51f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f87908c51f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f87908c5570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f87908c5700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f87908c5890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f87908c5a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f87908c5bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f87908c5d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f87908cea80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f87908cea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87908cee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f87908cd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87908cd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87908cd340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f87908cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f87908d2020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f87908d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87908d23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87908d2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87908d26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87908d2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87908d29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f87908d1df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f87908d1df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87908cf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f87908cace0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f87908cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f87908c90a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f87908c9230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f87908c93c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f87908c9550"/>
        <function-ref name="getPower" scoped="" ref="0x7f87908c96e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f87908c9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f87908c64d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f87908c64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f87908c6950"/>
        <function-ref name="changed" scoped="" ref="0x7f87908c6ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f87908c6c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f87908c6e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f87908c9b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f87908c9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f87908c8020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f87908c81b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f87908c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f87908d1210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f87908d1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f87908d1590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f87908c4d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f87908c4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f87908c20e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f87908c2270"/>
        <function-ref name="led1On" scoped="" ref="0x7f87908c2400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f87908c2590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f87908c2720"/>
        <function-ref name="get" scoped="" ref="0x7f87908c28b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f87908c2a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f87908c11b0"/>
        <function-ref name="set" scoped="" ref="0x7f87908c2bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f87908c2d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f87908c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f87908cf470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f87908cf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f87908cf7f0"/>
        <function-ref name="source" scoped="" ref="0x7f87908cf980"/>
        <function-ref name="address" scoped="" ref="0x7f87908cfb10"/>
        <function-ref name="destination" scoped="" ref="0x7f87908cfca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f87908cfe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f87908ce020"/>
        <function-ref name="type" scoped="" ref="0x7f87908ce1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f87908ce340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f87908ce4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f87908ce660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f87908ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f87908c40f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f87908c40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f87908c4470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f87908c4600"/>
        <function-ref name="request" scoped="" ref="0x7f87908c4790"/>
        <function-ref name="granted" scoped="" ref="0x7f87908c4920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f87908c4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879083e360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879083e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879083e6e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879083e870"/>
        <function-ref name="start" scoped="" ref="0x7f879083ea00"/>
        <function-ref name="stop" scoped="" ref="0x7f879083eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879083d3f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879083d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879083d770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879083d900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879083da90"/>
        <function-ref name="cancel" scoped="" ref="0x7f879083dc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879083ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f879083a1d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f879083a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879083a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879083a7e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879083a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879083ab60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879083acf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879083ae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8790839030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f87908391c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f8790837a20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8790837a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8791cd8200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8790835020"/>
        <function-ref name="clear" scoped="" ref="0x7f8790835750"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790836890"/>
        <function-ref name="set" scoped="" ref="0x7f8790835e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f879082d890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f879082d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f879082dc10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f879082dda0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f879082c020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f879082c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879083c5c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879083c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879083c940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8790838b20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8790838b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8790837020"/>
        <function-ref name="noAck" scoped="" ref="0x7f87908371b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8790837340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8790839470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f8790839470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f87908397f0"/>
        <function-ref name="source" scoped="" ref="0x7f8790839980"/>
        <function-ref name="address" scoped="" ref="0x7f8790839b10"/>
        <function-ref name="destination" scoped="" ref="0x7f8790839ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f8790839e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8790838020"/>
        <function-ref name="type" scoped="" ref="0x7f87908381b0"/>
        <function-ref name="setType" scoped="" ref="0x7f8790838340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f87908384d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8790838660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f87908387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f8790831af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8790831af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f8791cd9680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8791cd99f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879082f0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f879082f800"/>
        <function-ref name="isValid" scoped="" ref="0x7f8790830970"/>
        <function-ref name="set" scoped="" ref="0x7f879082d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8790799020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f8790799020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87907993a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790799530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87907996c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8790799850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87907999e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8790799c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f8790799c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8790797020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f87907971b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790797340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87907974d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8790797660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f87907978b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f87907978b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8790797c30"/>
        <function-ref name="source" scoped="" ref="0x7f8790797dc0"/>
        <function-ref name="address" scoped="" ref="0x7f8790796020"/>
        <function-ref name="destination" scoped="" ref="0x7f87907961b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f8790796340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f87907964d0"/>
        <function-ref name="type" scoped="" ref="0x7f8790796660"/>
        <function-ref name="setType" scoped="" ref="0x7f87907967f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8790796980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8790796b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8790796ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f8790795020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f8790795020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f87907953a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f8790795530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f87907956c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f878fdd0e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f878fdd0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f878fdce210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f878fdce3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f878fdce530"/>
        <function-ref name="cancel" scoped="" ref="0x7f878fdce6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f878fdce850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f878fdceaa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f878fdceaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f878fdcee20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f878fdcd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f878fdcd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f878fdcd340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f878fdcd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f878fdcd720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f878fdcd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f878fdcdaa0"/>
        <function-ref name="source" scoped="" ref="0x7f878fdcdc30"/>
        <function-ref name="address" scoped="" ref="0x7f878fdcddc0"/>
        <function-ref name="destination" scoped="" ref="0x7f878fdcc020"/>
        <function-ref name="setSource" scoped="" ref="0x7f878fdcc1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f878fdcc340"/>
        <function-ref name="type" scoped="" ref="0x7f878fdcc4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f878fdcc660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f878fdcc7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f878fdcc980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f878fdccb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f878fdccda0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f878fdccda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f878fdcb180"/>
        <function-ref name="noAck" scoped="" ref="0x7f878fdcb310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f878fdcb4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f878fdc27f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f878fdc27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f878fdc2b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f878fdc2d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f878fdc1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f878fdc11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f878fdc1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f878fdc15f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f878fdc15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f878fdc1970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f878fdc1b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f878fdc1c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f878fdc1e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f878fdc0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f878fdc0270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f878fdc0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f878fdc05f0"/>
        <function-ref name="source" scoped="" ref="0x7f878fdc0780"/>
        <function-ref name="address" scoped="" ref="0x7f878fdc0910"/>
        <function-ref name="destination" scoped="" ref="0x7f878fdc0aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f878fdc0c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f878fdc0dc0"/>
        <function-ref name="type" scoped="" ref="0x7f878fdbf020"/>
        <function-ref name="setType" scoped="" ref="0x7f878fdbf1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f878fdbf340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f878fdbf4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f878fdbf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8790800930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f8790800930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8790800cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8790800e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87907fd020"/>
        <function-ref name="cancel" scoped="" ref="0x7f87907fd1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87907fd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f87907ad400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f87907ad400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87907ad7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87907ad930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87907adac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87907adc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87907adde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f87907afdf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f87907afdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f87907ae1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87907ae350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87907ae4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f87907ae670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f87907ae800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f87907ab720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f87907ab720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f87907abaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f87907abc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f87907abdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f87907aa020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f87907aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f87907aeb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f87907aeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f87907ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f87907aa480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f87907aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f87907aa800"/>
        <function-ref name="runTask" scoped="" ref="0x7f87907aa990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f87907aac60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f87907aac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f87907a9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f87907a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f87907ac060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f87907ac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f87907ac3e0"/>
        <function-ref name="source" scoped="" ref="0x7f87907ac570"/>
        <function-ref name="address" scoped="" ref="0x7f87907ac700"/>
        <function-ref name="destination" scoped="" ref="0x7f87907ac890"/>
        <function-ref name="setSource" scoped="" ref="0x7f87907aca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f87907acbb0"/>
        <function-ref name="type" scoped="" ref="0x7f87907acd40"/>
        <function-ref name="setType" scoped="" ref="0x7f87907ab020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f87907ab1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f87907ab340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f87907ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879078c020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879078c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879078c3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879078c530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879078c6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879078c850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879078c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8790792910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f8790792910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8790792c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f879078cc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879078cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879078a020"/>
        <function-ref name="source" scoped="" ref="0x7f879078a1b0"/>
        <function-ref name="address" scoped="" ref="0x7f879078a340"/>
        <function-ref name="destination" scoped="" ref="0x7f879078a4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f879078a660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879078a7f0"/>
        <function-ref name="type" scoped="" ref="0x7f879078a980"/>
        <function-ref name="setType" scoped="" ref="0x7f879078ab10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879078aca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879078ae30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8790789020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f8791ccec60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f8791ccf830" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f8791cc4d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f8791cc0c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f8791cc0940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f8791cc5030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f8791cc7870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f8791cc3b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f8791cc3550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f8791cc38b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f8791cc0020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f8791cc1cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f8791cc15a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f8791cc1320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f8791cc45b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f8791cc70e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f8791cc5dd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f8791cc57e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f8791cc5b40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f8791c82b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f8791c85de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f8791c82420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f8791c85700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f8791c845a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f8791c888f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f8791c85020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f8791c84cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f8791df27e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f87920ba700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f8791d18a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f8791d161f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f8791d182b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f8791e90020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f8792830e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f8792178e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f8792178610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f879216c770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f879216a020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f8791c1e020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f8791c1e7d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f8791c1d020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f8791c1c020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f8791c1a7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8791c19020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f8791c1d7b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8791c19b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f8791c19910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f8791c1f850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f8791c1c800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f8791c1a020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f8791c0f8a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f8791c0e020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f8791c11a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f8791c0ee80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8791c0f190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f8791c0e740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8791c14c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f8791c11350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f8791be4880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f8791be3020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f8791bdfb10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f8791bdf890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f8791bdd5d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f8791be6120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f8791be2020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f8791bddd60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f8791bdc860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f8791bdc5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f8791be3760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8791be40e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f8791bda190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f8791be0770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f8791bdee30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f8791be68c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f8791bde3e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8791be7270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f8791be27a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f8791bdf020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f8791be0020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f8791be79a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f87918b1110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f87918b5e40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f87918b0600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f87918b0380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f87918b5460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f87918b1960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f87918db3f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918db170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f87918d9490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918d9210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f87918d77b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918d71b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f87918d74e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f87918d68a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f87918d8930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918d8370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f87918d86a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f87918bf2c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f87918d4930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f87918d4cb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f87918bf020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f87918bb970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918bb370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f87918bb6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f87918baa60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f87918be630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918be3b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f87918bdb80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918bd5a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f87918bd8f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f87918ad2b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87918aeb50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f87918ad020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f87918a9980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87918a9380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f87918a96f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f87918add90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f8792824110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87918adb10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f87918aa880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87918aa600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f87918ae350" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87918ae0d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f87918ab990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87918ab710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f87918b69c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
              <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87918b6060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f87918b63b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f87918b66e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879193e350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879193e350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f87919371f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f879193ca60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f8791939820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8791939250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8791939590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f879193aa60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f8791935270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f8791937980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f879193a270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f879193d020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f879193ec40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f8791938820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8791938250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8791938590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f879193dae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f879193d860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f879193c350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f87918c62a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f87918ed180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918c6020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f87918cfd60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918cfae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f87918d21f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f87918d2cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918d2a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f87918cc7a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918cc1c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f87918cc510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f87918ce2b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918d0c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f87918ce020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f87918c9bf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918c9970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f87918cb020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918c79a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f87918c7cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f87918eed50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f87918ca9f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918ca770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f87918c4730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f87918ed180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f87918c4150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f87918c44a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f87918ed180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f87918c3580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f87918ed180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879185f6d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879185f6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f879185c020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8791857070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8791857070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f87918572b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f8791853e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8791856e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f8791853460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8791855e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f87918531d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f8791855640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f8791852620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8791857e10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8791857b90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f87918572b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8791856680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f8791831270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f8791831bf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f8791831970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f8791830610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f8791830390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f879182e020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f8791830d60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f879182e710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f879183fad0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f879183d400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f879183d180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f879183e270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8791845d30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f879183e9b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f8791842c50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f879183f3e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f8791842510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8791840390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f8791840ca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f8791840a20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f879183de10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f879183db90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f87918358f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f8791835320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f8791835660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f87918397d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8791c79550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f8791c78020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f87918342b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f87918331f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f8791837a30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f87918349f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f8791838020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f87918387b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f87918372a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8791c79550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f8791c78020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8791837020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8791c79550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f8791c78020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f8791820d60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f879181a400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f879181a180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f8791819020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f879181ad10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f879181b9a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f879181b0e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f879181c740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f879181c4c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f87917ef1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879169fe10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879169fe10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f879169a070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879169a070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f879169a990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879169a070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f8791699ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f8791699270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8791698270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f87915d7e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f8792824930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f87915d7c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f8792824930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f879151f980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879151f700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f8791522c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87915229b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f8791523350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f87915230d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f8791525800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f8791525580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f8791523d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f8791523b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f8791520b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8791520890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f879150d2b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f879151dc50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f879150d020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f879151a680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879151a060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f879151a3f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f8791519850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87915195d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f879151b810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f879151ee10" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f879151eb90" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f879152c2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879152c060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f879152a510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879152a290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f8791529680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8791529400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f8791511b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87915118b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f8791516b90" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8791516570" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f8791516900" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f8791513ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8791513850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f8791513020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8791514960" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f8791514cf0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f8791510b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87915108f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f8791526780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8791526500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f87915002b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8791507c40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8791500020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f87914fc890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87914fc290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f87914fc5c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f87914fb9b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f87914ff5f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87914ff370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f87914feac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87914fe4e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f87914fe830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f8791504120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f8791505120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f8791506770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f8791505910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f8791504b70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f87914da3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87914dfdc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f87914da110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f87914d96a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f87914d6e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f87914d6060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f87914d68a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f87914d6bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f87914d8840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f87914d8260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f87914d85b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f87914dae30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f87914dabb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f87914d20e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f87914db870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f87914e5a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f87914dc270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f87914cc2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87914cc020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f87914cd710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f8791928410"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f8791927d70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87914cd410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f87914cb620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f8791925860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f8791923180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f87914cb320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f87914e26e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f87914e0840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f87914e0070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f87914e7e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f87914e3e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f87914e1020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f87914e1840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f87914e36c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f87914c6d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f87914c7350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f87914c6530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f87914c62b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f87914c7ac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f87914c8020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f87914cfc90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f87914c8ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f87914c8850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f879146a870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f879146a290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f879146a5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f879146c1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f879146d880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f879146d210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f879146d5f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f8791473c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8791473990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f879146ca70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f879146f730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f879146f4b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f8791472d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f8791472ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f8791469ae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f879146e9c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f879146e740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f87914692b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f87914704d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f8791543ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f8791540240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f8791470cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f87914731f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f8791472390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f879146e020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f87914674a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f87914674a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f8791467d60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f8791464ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f87914674a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8791464510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f8791464830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f87914674a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8791440520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879192c600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f87914402a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f879143f030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879192c600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8791440d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f8791459c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f8791543ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f8791540240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f87914480e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f8791447070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f87914488c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f87918ed180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f8791449860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f87918ed180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f8791449280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f87918ed180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f87914495d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f87918ed560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f8791438120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879192c600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8791445840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879192c600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f879144b9b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8791445250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f87914455a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8791442020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879192c600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f8791443150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f87914439c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8791443d10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f879144c7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f879144c020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f879144d720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f8791450db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f8791326190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8791324350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f8791326b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f87913268b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f87913298f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f87912fc800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f87912f8270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f87912fc070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f87912fa9a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f87912fa720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f87912fa020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f87912ff870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f87912fb810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f87912fb030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f87911a9810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f87911a50e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f87911a5920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f879117e420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879117fe10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879117e190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f8791179700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879117ad90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8791179110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8791179460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f879117a020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879192c600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879117c970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879117ccc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f879117f020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879192c600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f87911819d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8791181d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f879117db90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879117d250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879117d5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f879117d8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f879115fa40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f879115f0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f879115f460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879115f7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f879115b020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f879115e2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f879115e630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879115e970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f879115ece0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
              <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f87911618f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f8791161670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f8791081b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f879107e4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f879107caa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f87910b22b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f87910b3e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f879107b6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879107b470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f879107ab30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879107a8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f879107a020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f87910795f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8791079370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f879106e020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f879106f750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f8791067740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f87910674c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f879106acd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f87910427c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f879104e2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f879105a020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910cf020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f87910cf860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f879105dcf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910cf020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f87910cf860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f87910503b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f8791058530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910ca020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f87910ca860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f87910582b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910ca020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f87910ca860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f87910479e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f8791043020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f8791059a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910cdec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f87910cc680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f8791058d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910ca020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f87910ca860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f8791054b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f8791054910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f87910541f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f87910472b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f87910592a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910cdec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f87910cc680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8791059020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910cdec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f87910cc680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f8791055020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f8791046190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f8791055a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f8791055780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f8791051480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f8791051c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f8791049420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f879104b190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f879104f350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f8791049b60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f879104eab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f87910468b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f8791053390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f87910d5d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f87910d14d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f8791045070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f8791042020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f8791056700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f8791056480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f87910412a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8791041020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f879105a800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f87910cf020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f87910cf860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f8791050b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f879104c270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f879104aba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f879109eb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879109e730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879104a920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f879109eb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879109e730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f879104bca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f87910b22b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f87910b3e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879104ba20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f87910b22b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f87910b3e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f8791041ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f8791045860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f8791053ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f8791043780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f879104c9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f879104fb30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f8790fda020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f8790fb49d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f8790fc5020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f8790fba620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f8790fba3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f8790fce5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f8790fb7c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f8790fbf5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f8790fc7070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f8790fc4020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f8790fc8020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f8790fc9d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f8790fca4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f8790fc1020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f8790fb9550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f8790fb4270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f8790fbbc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f8790fae350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f8790fab9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f8790fcd420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f8790fc3740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f8790fc01f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f8790fc88e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f8790fcf350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f8790fbb460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f8790fbb1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f8790fd3c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f8790fb74d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f8790fb2190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f8790fadb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f8790fab270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f8790fb6b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f8790fb28c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f8790fbadb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f8790fb0390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f8790fcdb40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f8790fbe7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f8790fb17b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f8790fb5ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f8790fc0de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f8790fc0b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f8790fac2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f8790fbca60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f8790fb6420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f8790fcfe10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f879108a4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879108a080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f8790fcfb90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f879108a4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879108a080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f8790fc3020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f8790fcccb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f8790fcca30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f8790fc1980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8790fc1700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f8790fb0b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f8790fc9620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f8790fcc350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f8790fbc2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f8790fbc020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f8792823520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f8790fcece0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f8790fb1020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f8790fb5350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f8790fb9cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f8790fbe020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f8790fbfd30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f8790fc4740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f8790fc77b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f8790faca40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f8790fcae30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f8790fcabb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f8790faeb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f8790fc5750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f8790fad350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f8790f0a020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f8790f0a880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f8790ed1dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f8790ece020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f8790ed1530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f8790ed06d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f8790ece950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f8790ecdb20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f8790ec24c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8790ecb490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8790ec2240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8790ecb490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f8790ec4420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f8790ec3020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8790ecb490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8790ec4ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8790ecb490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f8790ec3930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f8790ecb490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8790cb85e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8790cb8360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8790ca5b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f8790ca51c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f8790ca5530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8790ca5860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8790ca3880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8790ca32c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8790ca35f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8790c8b530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8790c8b530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8790c8b770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c8b770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f8790c8a2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c8b770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8790c8a060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c8b770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f8790c27580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f8790c13af0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8790c13af0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8790c13d30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c13d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f8790c0ebc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c13d30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c0e940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f8790c0cd80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c0cb00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f8790c10920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c106a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8790c0d0c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c13d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c0ba80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f8790c0bde0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8790c13d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f8790bef9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f8790bef020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f8790bef750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f8790bf07f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f8790bf0020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f8790bf3d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f8792823920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f8790c045f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8792823160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c04370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f8790c055f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c05370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8790c015f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c01370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8790c035f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8790c03370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f87918dd350"/>
                <typename><typedef-ref name="message_t" ref="0x7f87918dc9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f87909dd5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f87909dd5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f87909d92a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f8792176020"/>
            <typename><typedef-ref name="error_t" ref="0x7f879216e1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f87909dd5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f87909d9020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f87909dd5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f87907f41f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879217c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
