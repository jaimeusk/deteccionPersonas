<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="19:MasterAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd30bdc1490"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd30c14be20"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd30c14be20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd30c146aa0"/></to>
    </wire>
    <wire loc="20:MasterAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30bdc1ad0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c091620"/></to>
    </wire>
    <wire loc="21:MasterAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7fd30bdb1e20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bced980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bced980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bce41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:MasterAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7fd30bdad340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30b9bd240"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30b9bd240"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bce41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:MasterAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd30bd4fc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd30ac05c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd30ac05c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd30a2bd8b0"/></to>
    </wire>
    <wire loc="24:MasterAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30bd3ebe0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30ac048b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30ac048b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30a2bb590"/></to>
    </wire>
    <wire loc="25:MasterAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fd30bd2b190"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd30b9b7680"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd30b9b7680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd30b987cc0"/></to>
    </wire>
    <wire loc="26:MasterAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd30bd3f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd30ac05020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd30ac05020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd30a2bebc0"/></to>
    </wire>
    <wire loc="27:MasterAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30bd2f840"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30abff910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30abff910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30b9b3b20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30ad69dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30adf2b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30ae11750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30ae2e080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30af82620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30b072c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30b808c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30a444020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30b543020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30b8b3510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30bcdfe50"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd30c0ab140"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd30c5f31e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd30c5f31e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd30c198140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd30c0abb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30c149280"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30c149280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30c1394e0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c0aa3a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fd30c13b3a0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fd30c139b50"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd30c137220"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fd30c13abe0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd30c13abe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30c107b60"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd30c137900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30c144a10"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fd30c136020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30c069dd0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30c107b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30c0ed820"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd30c0fd2c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd30c0ec020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd30c26ec80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd30c0eb320"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c197040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd30c192490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd30c3cb9a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30c069dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30c091020"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd30c089b50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd30c092590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd30c092590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30bdec9e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd30c08fe30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd30c06b830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd30c06b830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30bdd6020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd30c088020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd30c06ab50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd30c06ab50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30bdd0630"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30bddbc50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fd30bffc020"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fd30bffc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bea5540"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30bdd42f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fd30bffa8a0"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fd30bffa8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bea0b90"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30bdcf7a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fd30bff7020"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fd30bff7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be9a060"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fd30c04ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf54b90"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fd30c035e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf1d060"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fd30bfaa3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf0d060"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fd30bfaf3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be6fb90"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fd30bfd83f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf08540"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fd30c030e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf13b90"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fd30c015020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bedc060"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fd30bfe7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be79060"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fd30bfd33f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30befc060"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fd30bfbf3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be90b90"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fd30bfa03f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be69060"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fd30c046580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf44b90"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fd30bfd1bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bef7540"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fd30c041580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf39540"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fd30c027710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf03b90"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fd30c00e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30becb060"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fd30bff58a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be95540"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fd30bfe08a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be69060"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fd30c053d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf5f060"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fd30c03ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf286d0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fd30c020e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bef2b90"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fd30bfdbbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf0d060"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fd30bfb7bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be7fb90"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fd30bfa3bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be69060"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fd30bfc7bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beaa060"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fd30c01be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bee7740"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fd30c001020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beb1b90"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fd30bfec020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be85540"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fd30bfb43e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be79060"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fd30bfce3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bebb060"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fd30c04b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf4e060"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fd30c032710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf18540"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fd30bff1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be90b90"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fd30c02c710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf0d060"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fd30c0138a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bed6540"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fd30bfe58a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be74540"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fd30bfc93f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beb1b90"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fd30c056cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf6a540"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fd30c03fd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf34b90"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fd30c025e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30befc060"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fd30c00b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bec6540"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fd30bfc43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bef2b90"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fd30bfbdbb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be8a060"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fd30bfadbb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be69060"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fd30c006020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bebb060"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fd30bfc2bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beec060"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fd30c050580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf5a540"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fd30c037710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf23b90"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fd30c01d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beec060"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fd30bfccbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beb6540"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fd30bfb2bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be74540"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fd30c0188a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bee2b90"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fd30bfff8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beaa060"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fd30bfea8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be7fb90"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fd30c049d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf49540"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fd30bfef8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be8a060"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fd30c044d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf3e060"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fd30c02ae50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf08540"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fd30c010020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bed1b90"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fd30bfe2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be6fb90"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fd30c055580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf65b90"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fd30c03c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf2e060"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fd30c022710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bef7540"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fd30c0098a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bec1b90"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fd30bfba3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be85540"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fd30bfa8ba0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf03b90"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fd30bfd6bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf03b90"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fd30c0048a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30beb6540"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fd30bfa53e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be6fb90"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fd30bf9ebc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30be95540"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fd30bfdd060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd30bf13b90"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bce41d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bcdbc30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bcdbc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30b9e58e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30bcdfe50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30ba93020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30b9e58e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30a630db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd30bcd1500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd30b9d6020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30ba93020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30a826a10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd30b9de020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30ba672f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd30ba62850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30ba93870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd30ba93870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30a81f5f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd30b9cc300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30bb0c8c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd30bb0c8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30baefcf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30a826a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30a808360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd30a819d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30a8252a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd30a8252a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30a808bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd30a81c9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30bb0c8c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a804dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a80d020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a80d020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a802440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a80c760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a80c760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a801760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a80ba80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a80ba80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fd30bc85280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fd30bc85280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bbcf6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fd30bc84700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fd30bc84700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbcdac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fd30bc7fa50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fd30bc7fa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bbbf220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fd30bc7d020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fd30bc7d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbbd610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fd30bc7cd40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fd30bc7cd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bbb76d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fd30bc7a160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fd30bc7a160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbb6ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fd30bc78020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fd30bc78020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bbb0b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fd30bc77570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fd30bc77570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbae020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fd30bc755a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fd30bc755a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bba7220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fd30bc73a20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fd30bc73a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bba6610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fd30bc718c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fd30bc718c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bba06d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fd30bc70d40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fd30bc70d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bb9fac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fd30bc8a730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bbd6220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fd30bc8b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbdccb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fd30bc79020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbb57a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fd30bc91890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbdc020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fd30bc6fae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bb9d7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fd30bc950c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bc2a6d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fd30bc80a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbc5cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fd30bc81bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbc5020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fd30bc82730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bbc7b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fd30bc88a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbd42f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fd30bc76570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbaecb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fd30bc89bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbd5610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fd30bc9a830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc383e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fd30bc92410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd30bbdeb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fd30bc8c410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbe47a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fd30bc7dda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbbc2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fd30bc94570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd30bbe5ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fd30bc72890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bba52f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fd30bc83700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30bbcc7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd30bc362f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc37bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd30bc36940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd30bb963f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd30bc35020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd30bb96b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbe3610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc383e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbe2c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc37bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbdbb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc383e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbd92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc37bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbd3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc383e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbd27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc37bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd30bc2f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd30bc2f750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd30bb95430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd30bc2fda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd30bb95bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbcb610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbcac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbc4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbc22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbbb160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbba7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbb4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbb3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bbacb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bbaa2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bba4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bba37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30bb9c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd30bb9bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd30bad10f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd30bb0a8e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd30bb0a8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30bb03b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30baf5c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fd30ba5e9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd30a6293d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7fd30b9de020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7fd30a623a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7fd30b9d9450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fd30a6245d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fd30c13b3a0"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fd30a622100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd30b987cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd30b95fb70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd30b9b47f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd30b986d20"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd30b986d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd30ad2b020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd30b9b2880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd30b983c00"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd30b983c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd30ad2adf0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd30b9b1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd30b9818f0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd30b9818f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd30ad28a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30b9ad310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30aefe550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30aefe550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30aeefa80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b993130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b975cb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b975cb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b948080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30b9b3b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30b983020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30b983020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30ad2a210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b9ae080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b97f990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b97f990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b949020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9b1c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9822d0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9822d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30ad29470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd30b99e3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd30aefa660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd30aefa660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd30aeecaf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd30b95fb70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd30ad5db80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b96de30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30ad268b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd30b960d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd30ad27ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b9789b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b94a020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b94a020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b948080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30ad5d080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b949020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd30af006e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd30b96b020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd30b948b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd30b948b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd30ad48020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30b974c70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30b9499d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30b9499d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30aeffa70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fd30ad1d0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b95b210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd30ad25860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd30b954990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd30b954990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd30adc6c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd30ad23690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30b94d840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30b94d840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30adc5a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd30ad1f4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd30b12ab20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30ad23ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30aef4d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30ad22b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aef0640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd30ad21610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd30b8bcdc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd30b8bcdc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd30b8b2970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd30ad1e1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b941330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b941330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b93c7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30ad1dd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd30ad5db80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd30ad5ad90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30aeffa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30aeef020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd30ad48020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd30ad46410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd30adc6c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd30adbba20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30ad5d080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30ad562d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fd30b955500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30adc65e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30adc65e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fd30adbb370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd30af006e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd30aef1c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b95b210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30adc8be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30adc8be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30adbd7b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fd30b94b6f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30adc78e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd30adc78e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fd30adbc4d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd30b955bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd30adc4170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd30adc4170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd30adb9020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30adc5a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30adba840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd30ad5ad90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd30b944390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd30b944390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd30b940e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd30adc26b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30ae16220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd30ae16220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30ae14a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd30ae15020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30ad4b350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd30ad4b350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd30ad48d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd30ad48d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30ad61ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd30ad61ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd30ad5b860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd30ad5b860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30b944e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd30b944e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30b93d990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd30adc2020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30ad5e980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30ad5e980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd30ad5a690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd30ad5a690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30adf9aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30adf9aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30adf5e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd30adf6950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30b942b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30b942b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30af877c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd30af877c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd30af80020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b93b640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b8cc950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b8cc950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b8b3b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd30b933b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd30b8c7bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd30b8c7bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd30b8b0740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd30b92f760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd30b0816c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd30b92f760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd30af8a5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd30af8a5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd30af82ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd30b0816c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd30b071320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd30b9282a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd30b07e020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd30b07e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30b071bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd30b930060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b07ecb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b07ecb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b070970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b926330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30b91d920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd30b924420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd30ae37a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd30ae37a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd30ae2ca20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fd30b921110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30ae39aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd30ae39aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30b5481d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30b924bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fd30b913b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fd30b915ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fd30b916c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fd30b8b90c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fd30b8afb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fd30b8aba10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd30b805690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd30b805690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd30b7ff2e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd30b8a7c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd30b7be370"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd30b7be370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7b1da0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd30b8a6e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fd30b7bbce0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd30b7bbce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b79f020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd30b8a40f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fd30b7b8380"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd30b7b8380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b795b00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd30b89ec00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fd30b77b400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd30b77b400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd30b61a680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd30b88c1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b1b6e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b1b6e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b5c74d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd30b88b2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fd30b1b17b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd30b1b17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b88b9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b1afae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b1afae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b88da40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b1b2ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b1b2ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b88d120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b1ae160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b1ae160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b892be0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b1a6870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b1a6870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b894550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b1a3880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b1a3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b894e00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b1a20a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b1a20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b893710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b1aae50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b1aae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b890020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b1a9670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b1a9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd30b89d5e0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fd30b195500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd30b195500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b895c30"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b197ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b197ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b8908e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b1a7e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b1a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd30b88f1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fd30b1a9e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd30b1a9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b88fa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b1a8e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b1a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fd30b88ad90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b183a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b183a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b5c74d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fd30b88a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b1579e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b1579e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b5c74d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd30b89a390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd30b12ab20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd30b8ab020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd30b129d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd30b129d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd30b10e310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fd30b87e820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fd30b87f940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30b808c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30b800a20"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30b800a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30a5cedf0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd30b7ff2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30a5cd690"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30a5cedf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30a5c5020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd30a5cd690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30a5bfa90"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30a5c5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30a5aaa30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd30a5b8210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30a5c5870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd30a5c5870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd30a5a9340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd30a5bce10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30b7e9650"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd30b7e9650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30b7e32e0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a5a54c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a5af570"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a5af570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a5a4a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a5aec10"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a5aec10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a5a0da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a5ac020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a5ac020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd30b7e16d0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd30bb0a8e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd30b7bd6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7ab4a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd30b7bc9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7a5b00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd30b7bf0e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7b6710"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd30b7b9020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b79a630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7b5930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fd30c04ed50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7af020"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fd30c015020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7aa610"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fd30c050580"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7a4c60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd30c056cb0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b79e2f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fd30c00b020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7997a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fd30c0188a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b794c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fd30c00e8a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd30b777700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd30b774c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd30b77a060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd30b60bb70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30b75c760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fd30bc82730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fd30b75ba80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fd30bc80a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b75a930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fd30c0188a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fd30b6192f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fd30b7483f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fd30b7483f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fd30b7313f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fd30b60a7a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd30b74b620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fd30b74b620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd30b7387a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fd30b73b3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fd30b7253f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fd30b745d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fd30b72ed50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fd30b7423f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fd30b72b3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fd30b750bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fd30b734d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fd30b73fd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fd30b728d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fd30b747710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fd30b730710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fd30b73a710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fd30b724710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fd30b741710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fd30b72a710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fd30b749020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fd30b732020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fd30b73c100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fd30b726100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fd30b746a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fd30b72fa30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fd30b743020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fd30b72c020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fd30b7518a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fd30b735a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fd30b740a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fd30b729a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd30b1b1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b1a5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd30b19c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd30b1a30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd30b191500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd30b193500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b1af490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd30b199880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b194500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd30b19f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd30b1a00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b1b5a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5c6350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5c6350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5be660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b1aee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd30b1ad490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30b198c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd30b1adbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30b194ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd30b1990a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30b1a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30b19a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd30b19c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30b19a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b192ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd30b193ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd30b1a0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd30b19b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd30b195ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd30b1a2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd30b191ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd30b1b2480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd30b1aa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30b1a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd30b19e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd30b19e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b1a50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd30b1ac2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd30b1aa020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30b1ae7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30b197500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd30b192500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30b19f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd30b19b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd30b1b1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd30b1a10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd30b1ac940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd30b1a1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd30b1980a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b18f9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5bc890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5bbba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5b9a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b5c74d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b5bd510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5b88b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fd30b5abb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30b54d770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd30b54d770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30b5481d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd30b5b7060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b52bc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b52bc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30a4cb940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd30b5b4c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd30b52a8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd30b52a8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd30a4c8d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b5ab2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b1dc020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b1dc020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd30a4c6020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30b5b5a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fd30b5a8bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd30b5481d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30b543b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd30a4c6020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b4c0850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd30a4c8d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd30b4c3110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30a4cb940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b4c8d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30a4c85d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30a4bd020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30a4bd020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30b3452c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd30b4c3110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd30b448a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd30a4c7410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd30b4c3790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd30b4c3790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd30b447060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd30b4bea40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd30a4c67c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30a4b0760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b4c18e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd30b4bf690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30a4be340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30a4be340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b346020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd30b4bab40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd30a4b8c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd30a4b8c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd30b3484d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b4c18e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b448250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b4c0850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b447c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b4c8d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b449470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd30b4443e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd30b4bea40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd30b4455b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fd30b4bf690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd30b43f480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd30b4bab40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fd30b444a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd30b435020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd30b435020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd30b42c700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30b43fc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fd30b43d2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd30b42d2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd30b427c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd30b431d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd30b4272d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd30b3f8bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fd30bfdbbc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fd30b3f53e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fd30bfd83f0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd30b3f3bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fd30bfd6bc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fd30b3f03e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fd30bfd1bc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fd30b3eebb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fd30bfd33f0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fd30b3fed10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fd30b29bd40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd30a4b7440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd30b3473f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd30a4b7a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd30b2a2020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd30b2a2020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fd30b29bd40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd30a4bc020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd30b435020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30a4bd7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b345ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b345ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b2aee80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b3438a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30a4b0760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30b3452c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30b2afa60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30b2afa60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30a4416c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fd30b3484d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd30b341d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b346020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b2b0ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30b2b0ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30a442850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd30b3473f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd30b340710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b2aee80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30a440a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b2ad790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b3438a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b32fbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b2aee80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fd30b340d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd30b431d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd30b32f5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd30b42d2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd30b2ae270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd30a441e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30a43f9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b2ad790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fd30a43f2d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fd30b2ac020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd30a43e2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd30a444630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd30a43b480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fd30b292bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd30b42c700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd30b28d700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fd30bfdbbc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd30b28be40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fd30bfd6bc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b176c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd30b181da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b17ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b174670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd30b16de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd30b174e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd30b1602f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd30b1622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b17f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd30b168670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b1642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd30b179c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b178c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd30b16e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd30b170e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b173670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b182760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5c6350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b17daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd30b17c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30b167a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd30b17c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30b164ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b17fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd30b169e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30b178480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b179480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b181750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30b16be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd30b16c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30b169670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b161ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd30b162ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd30b16f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd30b16ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd30b165ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd30b172670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd30b160ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd30b181100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd30b17a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30b176480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd30b16ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b173e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd30b16d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b175670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd30b180450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b175e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd30b17b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd30b17bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd30b1652f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b166ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30b17d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30b1662f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd30b1612f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30b16fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd30b16b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd30b180aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b17f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd30b172e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd30b17b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd30b170670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd30b168e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b15f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b14ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd30b155da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b14db50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b147670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd30b140e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd30b147e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd30b1342f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd30b1362f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b152120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd30b13c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b1372f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd30b14cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b14bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd30b142670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd30b144e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b146670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b156760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5c6350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b151aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd30b150120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30b13ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd30b150870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30b137ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b152dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd30b13de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30b14b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b14c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b155750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30b13ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd30b13f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30b13d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b135ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd30b136ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd30b143670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd30b13fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd30b138ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd30b145670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd30b134ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd30b155100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd30b14d370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30b14a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd30b142e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b146e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd30b140670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b149670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd30b153450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b149e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd30b14f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd30b14fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd30b1382f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b139ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30b151450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30b1392f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd30b1352f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30b143e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd30b13e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd30b153aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b152770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd30b145e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd30b14f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd30b144670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd30b13ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b1327a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fd30b10b880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fd30b100020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fd30b100020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fd30b0fb140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fd30b0f6bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fd30b0ffc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fd30b0ffc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fd30b0e2150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fd30b0fa530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd30b08d1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fd30b0e6540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fd30b0e7590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fd30b0e7590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b0969e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fd30b0dd950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fd30b0e4ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fd30b0e4ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fd30b0baa90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fd30b0e29f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fd30b0e6540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd30b0aa020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd30b0a4530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd30b0a4530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30b0a0e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30b09d020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fd30bc9a830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b095c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fd30c03ad50"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd30b07a990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd30b06f900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fd30b07c150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fd30b06e0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fd30b06eae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd30b805690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd30b060500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd30b7bf0e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd30b059820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd30b7be370"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd30b058b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fd30b7b9020"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd30b061880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fd30b777700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd30b056020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30afbbc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30afbbc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b5c74d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b056d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30afba8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30afba8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5c6350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd30b0536d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd30afb92f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd30afb92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd30b053de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fd30afb7cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd30afb7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b052530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fd30afb6370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd30afb6370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b052c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30afb5d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30afb5d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b054e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd30afafc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd30afafc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b055780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fd30af967a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd30af967a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b054550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30af9b2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30af9b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b0513e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30afb0480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30afb0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b0505e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30afade50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30afade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b04f020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30afab670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30afab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd30b051e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fd30afb37b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd30afb37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b04d9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fd30af99ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd30af99ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd30b04f890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd30af9a2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd30af9a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd30b04d130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd30af9aad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd30af9aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd30b048d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd30af8adf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd30af8adf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd30af81550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b06ad00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30b069bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd30b068950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30aefe550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd30b05bbe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd30aef6480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd30aef6480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd30aee88b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30b04b6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30afaec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd30afb7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30afb1c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd30afa4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd30afabe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd30af982f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd30afa0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd30afb0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd30afa6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd30afa8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd30afaa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd30afb4370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30af9fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd30afb4ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30af9bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30afb5060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd30afa1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30afaf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd30afb9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30afa2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd30afa3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30afa1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd30afa7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd30afa3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd30af9cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd30afa9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd30af98ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd30afb1490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30afae480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd30afa6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd30afaae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd30afa4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd30afad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd30afb7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd30afb3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd30afb3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd30af9c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd30af9dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30afb56b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30af9d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd30af992f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30afa7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd30afa2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd30afb69c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd30afa9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd30afa8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd30afa0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fd30af86020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fd30af807c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd30af6b150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd30af7f020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd30b7be370"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd30af7e380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fd30b7bd6a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd30af7d6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fd30b7bc9d0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd30af7ca50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd30b77a060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd30af7b6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30ae85d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd30ae85d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd30b5c74d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd30af7a530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fd30ae62ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd30ae62ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30af79ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30ae7f6b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30ae7f6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd30af793a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fd30ae7e370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd30ae7e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af78330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30af761e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd30af74d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30aefe550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd30af76b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd30b8bcdc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30af6f3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30ae77e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30ae77e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30af6fcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30ae76670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30ae76670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd30af71b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fd30ae7d160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd30ae7d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd30af6d6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fd30ae622f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd30ae622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd30af6e590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd30ae642f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd30ae642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd30af6ee00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd30ae64ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd30ae64ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30af6c020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30ae65ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30ae65ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd30af6c8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd30ae83300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd30ae83300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fd30af5f9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd30ae92300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd30b7e9650"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd30aee53b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd30ae93020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd30aee46e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd30bcd1500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd30ae8d450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bce41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30ae78c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd30ae82020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30ae7cc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd30ae6fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd30ae76e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd30ae80370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd30ae6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30ae652f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd30ae7ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd30ae79c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd30ae70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd30ae72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd30ae75670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30ae84970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5c6350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30ae7fd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30ae69a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd30ae7eac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30ae7f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd30ae6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30ae79480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30ae7a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd30ae83950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30ae6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd30ae6e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30ae6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd30ae63ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd30ae71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd30ae6ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd30ae67ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd30ae73670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd30ae7c490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30ae78480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd30ae70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd30ae75e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd30ae6f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd30ae77670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd30ae82670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd30ae7de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd30ae672f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd30ae68ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30ae682f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd30ae632f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30ae71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd30ae6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd30ae82cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd30ae809c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd30ae73e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd30ae7d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd30ae72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd30ae6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd30ae617a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fd30ae35920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fd30ae2e940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd30ae3b990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd30ae2e080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd30ae11e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd30ae15020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd30ae10ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30ae12690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd30ae12690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30b5481d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd30ae0f8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd30ae37a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30ae0e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd30adf6200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd30adf2570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd30adf13f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd30adf6950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30adf1a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd30adb9d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd30adc26b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd30adb8b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd30adc2020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30adb72f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30adb6170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd30adb6b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd30ad68410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fd30ad89db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fd30ad5c800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30ad58580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd30ad58580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd30b5481d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30ad431c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b949020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd30a2bebc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd30a2b0640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd30a2bd8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd30b9b1020"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30a2bb590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9b1c90"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd30ac02020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd30a2bac10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd30a2bac10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b9ae080"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd30a2af2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30ac6c930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30a2ae020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9b1c90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd30ac6c930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd30ac1cdf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd30ac1a400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd30b9b47f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30ac19060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9b1c90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd30ac17720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd30b9b1020"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fd30ac16480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fd30ac16c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd30abf8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd30b9b1020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd30abf8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9b1c90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="MasterC" loc="7:MasterC.nc">
      <module/>
    </component>
    <component qname="MasterAppC.Timer0" loc="44(MasterAppC.Timer0):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30ba58530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MasterAppC.Timer1" loc="44(MasterAppC.Timer1):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MasterAppC.AMSenderC" loc="47(MasterAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MasterAppC.AMSenderC.SenderC" loc="47(MasterAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(MasterAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MasterAppC.AMReceiverC" loc="43(MasterAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fd30bf98810" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fd30bf98bc0" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fd30bf97020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fd30bf973d0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fd30bf97740" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fd30bc6a930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fd30bc6acd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fd30bc690d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fd30bc69450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fd30bc697d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fd30bc69b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fd30bc68020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fd30bc683b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fd30bc68780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fd30bc2cc80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fd30bc290d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd30bb44cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd30bb44cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd30bb04a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd30bb04a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd30baee570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd30baee570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd30baeed40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd30baeed40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd30baed160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd30baed160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd30baed940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd30baed940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd30baedd10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fd30baec540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fd30baec540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd30bacd6d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd30bacd6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd30baca020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd30baca020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd30baca410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd30baca410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd30bacabf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd30bacabf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd30bac9020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30ba8ecc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30ba8ecc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30ba58530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30ba58530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd30ba58880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30ba4b980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30ba4b980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd30ba4bcd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30b9d5550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30b9d5550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd30b3295e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fd30b31d9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fd30b302cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30b0b8020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30b0b8020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd30b0b87b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b0b87b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd30ac936a0" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd30ac8a3a0" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd30ac820d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fd30ac68c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd30abfe330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fd30c147320" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c147320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c1476a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd30c14be20" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd30c14be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd30c14a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30c149280" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30c149280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c149600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fd30c13b3a0" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fd30c13b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fd30c1454d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fd30c145660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fd30c13ba40"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fd30c13bbd0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fd30c13bd60"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fd30c145020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fd30c1451b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fd30c145340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fd30c13b720"/>
        <function-ref name="node_id" scoped="" ref="0x7fd30c13b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd30c137900" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fd30c137900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c137c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30c1394e0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30c1394e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c139860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fd30c137220" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd30c137220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c1375a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fd30c136020" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fd30c136020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c1363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fd30c139b50" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fd30c139b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fd30c138ca0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fd30c138e30"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fd30c138340"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fd30c1384d0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fd30c138660"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fd30c1387f0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fd30c138980"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fd30c138b10"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fd30c138020"/>
        <function-ref name="node_id" scoped="" ref="0x7fd30c1381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30c144a10" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30c144a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c144d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fd30c13abe0" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd30c13abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c107020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd30c0fd2c0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd30c0fd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd30c1031b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd30c0fd7d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd30c0fd960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd30c0fdaf0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd30c0fd640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd30c0fdc80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd30c0fde10"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd30c103020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30c107b60" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30c107b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c104020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd30c0ec020" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd30c0ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd30c0eb020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd30c0ec530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd30c0ec6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd30c0ec850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd30c0ec3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd30c0ec9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd30c0ecb70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd30c0ecd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd30c0eb320" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd30c0eb320"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd30c0eb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30c0ed820" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30c0ed820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c0edba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd30c26ec80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd30c26ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd30c4490a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd30c3cb9a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd30c3cb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd30c3cbd20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd30c4e6020"/>
        <function-ref name="sleep" scoped="" ref="0x7fd30c4e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd30c30c3d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fd30c30c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd30c30c750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fd30c0b8240" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd30c0b8240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd30c0b71b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd30c0b8750"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd30c0b88e0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd30c0b8a70"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd30c0b85c0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd30c0b8c00"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd30c0b8d90"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd30c0b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd30c0aa3a0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd30c0aa3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c0aa720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd30c146aa0" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd30c146aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd30c146e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd30c0abb60" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fd30c0abb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c0aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd30c0ab140" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd30c0ab140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c0ab4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd30c0ab650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd30c0ab7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd30c5e6940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c5e6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30c5e6cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30c5e6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd30c5f31e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd30c5f31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c5f3560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd30c5f36f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd30c5f3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd30c197040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd30c197040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30c1973c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30c197550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd30c192490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd30c192490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd30c192810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd30c1929a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd30c192b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd30c198140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd30c198140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c1984c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd30c198650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd30c1987e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd30c0949a0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30c0949a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30c094d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30c09f020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30c09f1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30c09f340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30c09f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c09f660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30c09f7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30c09fe30"/>
        <function-ref name="set" scoped="" ref="0x7fd30c09f980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30c09fb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30c09fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd30c089b50" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd30c089b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c08f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c08f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c08f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c08f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c08f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c08f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c08f980"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c08fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30c091020" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30c091020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c0913a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd30c08fe30" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd30c08fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c08e1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c08e370"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c08e500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c08e690"/>
        <function-ref name="get" scoped="" ref="0x7fd30c08e820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c08e9b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c08eb40"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c08ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd30c091620" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30c091620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30c0919a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30c091b30"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30c091cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30c091e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30c090020"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0901b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30c090340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30c090980"/>
        <function-ref name="set" scoped="" ref="0x7fd30c0904d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30c090660"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30c0907f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd30c088020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd30c088020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c0883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c088530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0886c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c088850"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0889e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c088b70"/>
        <function-ref name="set" scoped="" ref="0x7fd30c088d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c087020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd30c092590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd30c092590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c092910"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c092aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c092c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c092dc0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c06b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c06b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c06b340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c06b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd30c06b830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd30c06b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c06bbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c06bd40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c06a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c06a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c06a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c06a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c06a660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c06a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd30c069dd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30c069dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30c068180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd30c06ab50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd30c06ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c069020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c0691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c069340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0694d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c069660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0697f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c069980"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c069b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd30c04ed50" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd30c04ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c04d100"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c04d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c04d420"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c04b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c04d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c04d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c04da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c04dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c04dd80"/>
        <function-ref name="get" scoped="" ref="0x7fd30c04c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c04c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c04c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c04c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c04c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c04c8f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c04ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c04cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c04d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c04cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c04b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd30c035e50" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd30c035e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c034210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c0343a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c034530"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c032340"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c034850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0349e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c034b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c034d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c033020"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0331b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c033340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c0334d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c033660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0338f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c033a80"/>
        <function-ref name="set" scoped="" ref="0x7fd30c033c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c033da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0346c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c032020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fd30bfaa3d0" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fd30bfaa3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfaa750"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfaa8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfaaa70"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfa87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfaad90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfa9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfa91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfa9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfa94d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfa9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfa97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfa9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfa9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfa9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfa8020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfa81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfa8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfaac00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfa84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfa8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fd30bfaf3e0" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fd30bfaf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfaf760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfaf8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfafa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfad7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfafda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfae020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfae1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfae340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfae4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfae660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfae980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfaeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfaeda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfad020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfad340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfafc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fd30bfd83f0" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fd30bfd83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfd8770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfd8900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfd8a90"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfd67f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfd8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfd7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfd71b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfd7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfd74d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfd7660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfd77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfd7980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfd7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfd7da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfd6020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfd61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfd6340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfd8c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfd64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfd6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fd30c030e50" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fd30c030e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c02e210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c02e3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c02e530"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c02c340"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c02e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c02e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c02eb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c02ed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c02d020"/>
        <function-ref name="get" scoped="" ref="0x7fd30c02d1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c02d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c02d4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c02d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c02d8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c02da80"/>
        <function-ref name="set" scoped="" ref="0x7fd30c02dc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c02dda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c02e6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c02c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c02c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fd30c015020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fd30c015020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c0153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c015530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c0156c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0134d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0159e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c015b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c015d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c014020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0141b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c014340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c014660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c014a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c014c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30c014da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c013020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c015850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0131b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c013340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fd30bffc020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fd30bffc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bffc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bffc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bffc6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bffa4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bffc9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bffcb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bffcd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bffb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bffb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bffb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bffb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bffb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bffb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bffba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bffbc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bffbda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bffa020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bffc850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bffa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bffa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fd30bfe7020" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fd30bfe7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfe73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfe7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfe76c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfe54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfe79e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfe7b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfe7d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfe6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfe61b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfe6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfe64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfe6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfe67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfe6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfe6c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfe6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfe5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfe7850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfe51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfe5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fd30bfd33f0" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fd30bfd33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfd3770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfd3900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfd3a90"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfd17f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfd3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfd21b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfd2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfd24d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfd2660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfd27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfd2980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfd2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfd2da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfd1020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfd11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfd1340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfd3c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfd14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fd30bfbf3e0" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fd30bfbf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfbf760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfbf8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfbfa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfbd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfbfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfbe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfbe1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfbe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfbe4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfbe660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfbe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfbe980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfbeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfbeda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfbd020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfbd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfbd340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfbfc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfbd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fd30bfa03f0" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fd30bfa03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfa0770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfa0900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfa0a90"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf9e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfa0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf9f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf9f1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf9f660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf9f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf9f980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf9fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf9fda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf9e020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf9e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf9e340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfa0c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf9e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd30c046580" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd30c046580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c046900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c046a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c046c20"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c044980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c045020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c045340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c0454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c045660"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0457f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c045980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c045b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c045ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c044020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0441b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c044340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c0444d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c046db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c044660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fd30bfd1bc0" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fd30bfd1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfd0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfd01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfd0340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfce020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfd0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfd07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfd0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfd0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfd0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfd0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfcf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfcf1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfcf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfcf5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfcf760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfcf8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfcfa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfd04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfcfc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfcfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd30c041580" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd30c041580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c041900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c041a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c041c20"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c03f980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c040020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c040340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c0404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c040660"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0407f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c040980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c040b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c040ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c03f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c03f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c03f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c03f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c041db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c03f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c03f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fd30c027710" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fd30c027710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c027a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c027c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c027db0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c025a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c026340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c0264d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c026660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0267f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c026980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c026b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c026ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c026e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c025120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0252b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c025440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c0255d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c026020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c025760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fd30c00e8a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fd30c00e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c00ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c00edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c00d020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c00cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c00d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c00d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c00d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c00d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c00d980"/>
        <function-ref name="get" scoped="" ref="0x7fd30c00db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c00dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c00de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c00c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c00c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c00c440"/>
        <function-ref name="set" scoped="" ref="0x7fd30c00c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c00c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c00d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c00c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c00ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fd30bff58a0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fd30bff58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bff5c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bff5db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bff3020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bff2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bff3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bff34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bff3660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bff37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bff3980"/>
        <function-ref name="get" scoped="" ref="0x7fd30bff3b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bff3ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bff3e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bff2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bff22b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bff2440"/>
        <function-ref name="set" scoped="" ref="0x7fd30bff25d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bff2760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bff31b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bff28f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bff2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fd30bfe08a0" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fd30bfe08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfe0c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfe0db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfdf020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfdec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfdf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfdf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfdf660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfdf7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfdf980"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfdfb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfdfca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfdfe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfde020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfde2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfde440"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfde5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfde760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfdf1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfde8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfdea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd30c053d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd30c053d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c052100"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c052290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c052420"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c052740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0528d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c052a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c052bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c052d80"/>
        <function-ref name="get" scoped="" ref="0x7fd30c051020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c051340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0514d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c051760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0518f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c051a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c051c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0525b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c051da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c050020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd30c03ad50" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd30c03ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c039210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c0393a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c039530"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c037340"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c039850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c039b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c039d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c038020"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0381b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c038340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c0384d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c038660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0388f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c038a80"/>
        <function-ref name="set" scoped="" ref="0x7fd30c038c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c038da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0396c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c037020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fd30c020e50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fd30c020e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c01f210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c01f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c01f530"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c01d340"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c01f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c01f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c01fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c01fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c01e020"/>
        <function-ref name="get" scoped="" ref="0x7fd30c01e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c01e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c01e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c01e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c01e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c01ea80"/>
        <function-ref name="set" scoped="" ref="0x7fd30c01ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c01eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c01f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c01d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c01d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fd30bfdbbc0" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fd30bfdbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfda020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfda1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfda340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfd8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfda660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfda7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfda980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfdab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfdaca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfdae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfd9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfd91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfd9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfd95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfd9760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfd98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfd9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfda4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfd9c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfd9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fd30bfb7bb0" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fd30bfb7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfb6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfb61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfb6340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfb4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfb6660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfb67f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfb6980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfb6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfb6ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfb6e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfb5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfb51b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfb5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfb55d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfb5760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfb58f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfb5a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfb64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfb5c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfb5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fd30bfa3bb0" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fd30bfa3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfa2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfa21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfa2340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfa0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfa2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfa27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfa2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfa2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfa2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfa2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfa1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfa11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfa1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfa15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfa1760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfa18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfa1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfa24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfa1c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfa1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fd30bfc7bc0" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fd30bfc7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfc6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfc61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfc6340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfc4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfc6660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfc67f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfc6980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfc6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfc6ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfc6e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfc51b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfc5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfc55d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfc5760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfc58f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfc5a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfc64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfc5c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfc5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fd30c01be50" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fd30c01be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c01a410"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c01a5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c01a730"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0184d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c01aa50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c01abe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c01ad70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c019020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0191b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c019340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0194d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c019660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c019a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c019c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30c019da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c018020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c01a8c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0181b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c018340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fd30c001020" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fd30c001020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c0013a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c001530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c0016c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfff4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0019e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c001b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c001d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c000020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0001b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c000340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0004d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c000660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0007f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c000a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c000c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30c000da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfff020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c001850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfff1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fd30bfec020" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fd30bfec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfec3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfec530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfec6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfea4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfec9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfecb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfecd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfeb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfeb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfeb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfeb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfeb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfeb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfeba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfebc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfebda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfea020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfec850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfea1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fd30bfb43e0" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fd30bfb43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfb4760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfb48f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfb4a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfb27f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfb4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfb3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfb31b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfb3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfb34d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfb3660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfb37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfb3980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfb3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfb3da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfb2020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfb21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfb2340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfb4c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfb24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfb2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fd30bfce3e0" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fd30bfce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfce760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfce8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfcea80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfcc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfceda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfcd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfcd1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfcd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfcd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfcd660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfcd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfcd980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfcdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfcdda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfcc020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfcc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfcc340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfcec10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfcc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfcc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd30c04b580" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd30c04b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c04b900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c04ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c04bc20"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c049980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c04a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c04a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c04a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c04a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c04a660"/>
        <function-ref name="get" scoped="" ref="0x7fd30c04a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c04a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c04ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c04aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c049020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0491b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c049340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c0494d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c04bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c049660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd30c032710" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd30c032710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c032a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c032c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c032db0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c030a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c031340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c0314d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c031660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0317f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c031980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c031b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c031ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c031e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c030120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0302b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c030440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c0305d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c031020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c030760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fd30bff1020" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fd30bff1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bff13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bff1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bff16c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfef4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bff19e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bff1b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bff1d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bff0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bff01b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bff0340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bff04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bff0660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bff07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bff0a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bff0c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bff0da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfef020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bff1850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfef1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fd30c02c710" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fd30c02c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c02ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c02cc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c02cdb0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c02aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c02b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c02b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c02b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c02b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c02b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c02b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c02bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c02bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c02be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c02a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c02a2b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c02a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c02a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c02b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c02a760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c02a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fd30c0138a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fd30c0138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c013c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c013db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c012020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c011c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c012340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0124d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c012660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c0127f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c012980"/>
        <function-ref name="get" scoped="" ref="0x7fd30c012b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c012ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c012e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c011020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0112b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c011440"/>
        <function-ref name="set" scoped="" ref="0x7fd30c0115d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c011760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0121b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0118f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c011a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fd30bffa8a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fd30bffa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bffac20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bffadb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bff9020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bff8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bff9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bff94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bff9660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bff97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bff9980"/>
        <function-ref name="get" scoped="" ref="0x7fd30bff9b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bff9ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bff9e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bff8020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bff82b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bff8440"/>
        <function-ref name="set" scoped="" ref="0x7fd30bff85d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bff8760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bff91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bff88f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bff8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fd30bfe58a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fd30bfe58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfe5c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfe5db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfe4020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfe3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfe4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfe44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfe4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfe47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfe4980"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfe4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfe4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfe4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfe3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfe32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfe3440"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfe35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfe3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfe41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfe38f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfe3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fd30bfc93f0" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fd30bfc93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfc9770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfc9900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfc9a90"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfc77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfc9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfc8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfc81b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfc8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfc84d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfc8660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfc87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfc8980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfc8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfc8da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfc7020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfc71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfc7340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfc9c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfc74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfc7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd30c056cb0" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd30c056cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c0640a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c064230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c0643c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0646e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c064870"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c064a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c064b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c064d20"/>
        <function-ref name="get" scoped="" ref="0x7fd30c063020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0631b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c063340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0634d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c063760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0638f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c063a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c063c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c064550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c063da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c055020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd30c03fd50" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd30c03fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c03e100"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c03e290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c03e420"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c03c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c03e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c03e8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c03ea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c03ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c03ed80"/>
        <function-ref name="get" scoped="" ref="0x7fd30c03d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c03d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c03d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c03d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c03d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c03d8f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c03da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c03dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c03e5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c03dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c03c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fd30c025e50" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fd30c025e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c024210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c0243a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c024530"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c022340"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c024850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0249e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c024b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c024d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c023020"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0231b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c023340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c0234d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c023660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0238f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c023a80"/>
        <function-ref name="set" scoped="" ref="0x7fd30c023c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c023da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0246c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c022020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fd30c00b020" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fd30c00b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c00b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c00b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c00b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0094d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c00b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c00bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c00bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c00a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c00a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c00a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c00a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c00a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c00a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c00aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c00ac10"/>
        <function-ref name="set" scoped="" ref="0x7fd30c00ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c009020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c00b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c009340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fd30bfc43f0" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fd30bfc43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfc4770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfc4900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfc4a90"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfc27f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfc4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfc3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfc31b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfc3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfc34d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfc3660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfc37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfc3980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfc3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfc3da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfc2020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfc21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfc2340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfc4c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfc24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fd30bfbdbb0" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fd30bfbdbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfbc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfbc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfbc340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfba020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfbc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfbc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfbc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfbcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfbcca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfbce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfbb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfbb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfbb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfbb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfbb760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfbb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfbba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfbc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfbbc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfbbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fd30bfadbb0" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fd30bfadbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfac020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfac1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfac340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfaa020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfac660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfac7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfac980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfacb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfacca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bface30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfab1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfab340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfab5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfab760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfab8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfaba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfac4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfabc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfabda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fd30c006020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fd30c006020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c0063a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c006530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c0066c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0044d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0069e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c006b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c006d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c005020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0051b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c005340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0054d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c005660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0057f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c005a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c005c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30c005da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c004020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c006850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c004340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fd30bfc2bc0" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fd30bfc2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfc1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfc11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfc1340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfbf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfc1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfc17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfc1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfc1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfc1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfc1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfc0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfc01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfc0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfc05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfc0760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfc08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfc0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfc14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfc0c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfc0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd30c050580" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd30c050580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c050900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c050a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c050c20"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c04e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c04f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c04f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c04f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c04f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c04f660"/>
        <function-ref name="get" scoped="" ref="0x7fd30c04f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c04f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c04fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c04fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c04e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c04e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c04e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c04e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c050db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c04e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c04e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd30c037710" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd30c037710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c037a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c037c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c037db0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c035a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c036340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c0364d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c036660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0367f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c036980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c036b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c036ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c036e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c035120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0352b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c035440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c0355d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c036020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c035760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0358f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fd30c01d710" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fd30c01d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c01da90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c01dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c01ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c01ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c01c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c01c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c01c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c01c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c01c7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c01c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c01cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c01cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c01ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c01b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c01b2b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c01b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c01b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c01c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c01b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c01b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fd30bfccbc0" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fd30bfccbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfcb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfcb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfcb340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfc9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfcb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfcb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfcb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfcbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfcbca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfcbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfca1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfca340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfca5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfca760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfca8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfcaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfcb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfcac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfcada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fd30bfb2bb0" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fd30bfb2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfb1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfb11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfb1340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfaf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfb1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfb17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfb1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfb1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfb1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfb1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfb0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfb01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfb0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfb05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfb0760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfb08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfb0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfb14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfb0c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfb0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fd30c0188a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fd30c0188a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c018c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c018db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c017020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c016c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c017340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0174d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c017660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c0177f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c017980"/>
        <function-ref name="get" scoped="" ref="0x7fd30c017b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c017ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c017e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c016020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0162b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c016440"/>
        <function-ref name="set" scoped="" ref="0x7fd30c0165d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c016760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0171b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0168f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c016a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fd30bfff8a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fd30bfff8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfffc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfffdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bffe020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bffdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bffe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bffe4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bffe660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bffe7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bffe980"/>
        <function-ref name="get" scoped="" ref="0x7fd30bffeb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bffeca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bffee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bffd020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bffd2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bffd440"/>
        <function-ref name="set" scoped="" ref="0x7fd30bffd5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bffd760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bffe1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bffd8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bffda80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fd30bfea8a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fd30bfea8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfeac20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfeadb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfe9020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfe8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfe9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfe94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfe9660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfe97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfe9980"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfe9b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfe9ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfe9e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfe8020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfe82b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfe8440"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfe85d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfe8760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfe91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfe88f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfe8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd30c049d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd30c049d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c048100"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c048290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c048420"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c048740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0488d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c048a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c048bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c048d80"/>
        <function-ref name="get" scoped="" ref="0x7fd30c047020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c047340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0474d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c047760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0478f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c047a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c047c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0485b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c047da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c046020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fd30bfef8a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fd30bfef8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfefc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfefdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfee020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfedc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfee4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfee660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfee7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfee980"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfeeb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfeeca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfeee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfed020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfed2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfed440"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfed5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfed760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfee1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfed8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfeda80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd30c044d50" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd30c044d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c043100"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c043290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c043420"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c0411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c043740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0438d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c043a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c043bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c043d80"/>
        <function-ref name="get" scoped="" ref="0x7fd30c042020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c0421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c042340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c0424d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c042760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0428f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c042a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c042c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0435b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c042da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c041020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fd30c02ae50" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fd30c02ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c029210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c0293a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c029530"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c027340"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c029850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c029b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c029d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c028020"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0281b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c028340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c0284d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c028660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0288f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c028a80"/>
        <function-ref name="set" scoped="" ref="0x7fd30c028c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c028da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0296c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c027020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fd30c010020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fd30c010020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c0103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c010530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c0106c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c00e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0109e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c010b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c010d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c00f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c00f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c00f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c00f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c00f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c00f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c00fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c00fc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30c00fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c00e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c010850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c00e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c00e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fd30bff7020" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fd30bff7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bff73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bff7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bff76c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bff54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bff79e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bff7b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bff7d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bff6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bff61b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bff6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bff64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bff6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bff67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bff6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bff6c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bff6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bff5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bff7850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bff51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bff5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fd30bfe2020" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fd30bfe2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfe23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfe2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfe26c0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfe04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfe29e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfe2b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfe2d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfe1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfe11b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfe1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfe14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfe1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfe17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfe1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfe1c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfe1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfe0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfe2850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfe01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfe0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd30c055580" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd30c055580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c055900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c055a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c055c20"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c053980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c054020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c054340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c0544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c054660"/>
        <function-ref name="get" scoped="" ref="0x7fd30c0547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c054980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c054b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c054ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c053020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0531b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c053340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c0534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c055db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c053660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd30c03c580" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd30c03c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c03c900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c03ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c03cc20"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c03a980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c03b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c03b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c03b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c03b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c03b660"/>
        <function-ref name="get" scoped="" ref="0x7fd30c03b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c03b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c03bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c03bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c03a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c03a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c03a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c03a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c03cdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c03a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c03a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fd30c022710" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fd30c022710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c022a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c022c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c022db0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c020a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c0211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c021340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c0214d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c021660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c0217f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30c021980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c021b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c021ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c021e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c020120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c0202b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30c020440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c0205d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c021020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c020760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c0208f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fd30c0098a0" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fd30c0098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c009c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c009db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c008020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c007c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c008340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0084d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c008660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c0087f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c008980"/>
        <function-ref name="get" scoped="" ref="0x7fd30c008b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c008ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c008e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c007020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0072b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c007440"/>
        <function-ref name="set" scoped="" ref="0x7fd30c0075d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c007760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0081b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0078f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c007a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fd30bfba3e0" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fd30bfba3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfba760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfba8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfbaa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfb77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfbada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfb8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfb81b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfb8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfb84d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfb8660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfb87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfb8980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfb8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfb8da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfb7020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfb71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfb7340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfbac10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfb74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fd30bfa8ba0" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fd30bfa8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfa7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfa71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfa7340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfa5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfa7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfa77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfa7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfa7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfa7ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfa7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfa6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfa61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfa6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfa65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfa6760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfa68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfa6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfa74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfa6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfa6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fd30bfd6bc0" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fd30bfd6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfd5020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfd51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfd5340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfd3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfd5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfd57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfd5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfd5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfd5ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfd5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfd4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfd41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfd4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfd45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfd4760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfd48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfd4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfd54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfd4c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfd4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fd30c0048a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fd30c0048a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30c004c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30c004db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30c003020"/>
        <function-ref name="clr" scoped="" ref="0x7fd30c002c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30c003340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30c0034d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30c003660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30c0037f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30c003980"/>
        <function-ref name="get" scoped="" ref="0x7fd30c003b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30c003ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30c003e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30c002020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30c0022b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30c002440"/>
        <function-ref name="set" scoped="" ref="0x7fd30c0025d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30c002760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30c0031b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30c0028f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30c002a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fd30bfa53e0" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fd30bfa53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfa5760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfa58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfa5a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfa37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfa5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfa4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfa41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfa4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfa44d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfa4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfa47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfa4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfa4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfa4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfa3020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfa31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfa3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfa5c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfa34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfa3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fd30bf9ebc0" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fd30bf9ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf9d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf9d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf9d340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf9b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf9d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf9d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf9d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf9db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf9dca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf9de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf9c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf9c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf9c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf9c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf9c760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf9c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf9ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf9d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf9cc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf9cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fd30bfdd060" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fd30bfdd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bfdd7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bfdd970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bfddb00"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bfdb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bfdde20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bfdc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bfdc1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bfdc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bfdc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bfdc660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bfdc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bfdc980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bfdcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bfdcda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bfdb020"/>
        <function-ref name="set" scoped="" ref="0x7fd30bfdb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bfdb340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bfddc90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bfdb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bfdb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf6a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf6a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf6a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf6aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf6abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf68980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf69020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf69340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf69660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf697f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf69980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf69b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf69ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf68020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf681b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf68340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf684d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf68660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf6ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf65b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf65b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf64020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf641b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf64340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf62020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf64660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf647f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf64980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf64b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf64ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf64e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf63020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf631b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf63340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf635d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf63760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf638f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf63a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf63c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf644d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf63da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf5f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf5f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf5f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf5f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf5f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf5d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf5fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf5fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf5fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf5e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf5e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf5e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf5e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf5e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf5e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf5ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf5ec10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf5eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf5d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf5d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf5f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf5d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf5a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf5a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf5a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf5aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf5abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf58980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf59020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf59340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf59660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf597f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf59980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf59b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf59ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf58020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf581b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf58340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf584d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf58660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf5ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf54b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf54b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf53020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf531b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf53340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf51020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf53660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf537f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf53980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf53b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf53ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf53e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf52020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf521b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf52340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf525d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf52760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf528f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf52a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf52c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf534d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf52da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf4e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf4e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf4e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf4e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf4e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf4c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf4ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf4ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf4ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf4d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf4d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf4d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf4d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf4d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf4d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf4da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf4dc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf4dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf4c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf4c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf4e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf4c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf49540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf49540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf498c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf49a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf49be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf47980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf48020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf481b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf48340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf48660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf487f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf48980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf48b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf48ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf47020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf471b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf47340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf474d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf47660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf49d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf44b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf44b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf43020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf431b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf43340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf41020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf43660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf437f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf43980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf43b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf43ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf43e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf42020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf421b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf42340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf425d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf42760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf428f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf42a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf42c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf434d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf42da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf3e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf3e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf3e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf3e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf3c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf3ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf3ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf3ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf3d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf3d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf3d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf3d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf3d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf3d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf3da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf3dc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf3dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf3c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf3c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf3e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf3c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf39540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf39540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf398c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf39a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf39be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf37980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf38020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf381b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf38340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf38660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf387f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf38980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf38b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf38ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf37020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf371b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf37340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf374d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf37660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf39d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf34b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf34b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf33020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf331b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf33340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf31020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf33660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf337f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf33980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf33b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf33ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf33e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf32020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf321b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf32340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf325d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf32760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf328f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf32a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf32c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf334d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf32da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf2e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf2e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf2e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf2e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf2e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf2b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf2ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf2ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf2ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf2c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf2c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf2c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf2c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf2c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf2c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf2ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf2cc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf2cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf2b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf2b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf2e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf286d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf286d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf28a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf28be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf28d70"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf26a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf27340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf274d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf27660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf277f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf27980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf27b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf27ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf27e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf26120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf262b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf26440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf265d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf26760"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf27020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf23b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf23b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf22020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf221b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf22340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf20020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf22660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf227f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf22980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf22b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf22ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf22e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf21020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf211b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf21340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf215d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf21760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf218f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf21a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf21c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf224d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf21da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf1d060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf1d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf1d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf1d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf1d700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf1b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf1da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf1dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf1dd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf1c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf1c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf1c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf1c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf1c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf1c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf1ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf1cc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf1cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf1b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf1b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf1d890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf18540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf18540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf188c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf18a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf18be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf16980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf17020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf171b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf17340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf17660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf177f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf17980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf17b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf17ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf16020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf161b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf16340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf164d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf16660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf18d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf13b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf13b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf12020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf121b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf12340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf10020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf12660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf127f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf12980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf12b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf12ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf12e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf11020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf111b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf11340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf115d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf11760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf118f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf11a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf11c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf124d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf11da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf0d060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf0d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf0d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf0d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf0d700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf0b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf0da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf0dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf0dd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf0c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf0c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf0c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf0c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf0c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf0ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf0cc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf0cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf0b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf0b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf0d890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf0b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf08540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf08540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf088c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf08a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf08be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bf06980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf07020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf07340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf07660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf077f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf07980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf07b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf07ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf06020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf061b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf06340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf064d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf06660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf08d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bf03b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bf03b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bf01020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bf011b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bf01340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30beff020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bf01660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bf017f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bf01980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bf01b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bf01ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bf01e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bf00020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bf001b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bf00340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bf005d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bf00760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bf008f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bf00a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bf00c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bf014d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bf00da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30befc060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30befc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30befc3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30befc570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30befc700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30befa4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30befca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30befcbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30befcd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30befb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30befb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30befb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30befb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30befb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30befb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30befba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30befbc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30befbda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30befa020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30befa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30befc890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30befa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bef7540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bef7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bef78c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bef7a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bef7be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bef5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bef6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bef61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bef6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bef64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bef6660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bef67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bef6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bef6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bef6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bef5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bef51b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bef5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bef54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bef5660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bef7d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bef57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bef2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bef2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bef1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bef11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bef1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30beef020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bef1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bef17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bef1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bef1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bef1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bef1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bef0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bef01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bef0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bef05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bef0760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bef08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bef0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bef0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bef14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bef0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30beec060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30beec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30beec3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30beec570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30beec700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30beea4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30beeca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30beecbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30beecd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30beeb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30beeb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30beeb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30beeb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30beeb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30beeb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30beeba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30beebc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30beebda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30beea020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30beea1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30beec890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30beea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bee7740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bee7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bee7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bee7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bee7de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bee5a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bee61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bee6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bee64d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bee6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bee67f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bee6980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bee6b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bee6ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bee6e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bee5120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bee52b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bee5440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bee55d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bee5760"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bee6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bee58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bee2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bee2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bee1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bee11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bee1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bedf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bee1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bee17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bee1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bee1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bee1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bee1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bee0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bee01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bee0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bee05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bee0760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bee08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bee0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bee0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bee14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bee0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bedc060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bedc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bedc3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bedc570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bedc700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30beda4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bedca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bedcbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bedcd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bedb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bedb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bedb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bedb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bedb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bedb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bedba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bedbc10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bedbda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30beda020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30beda1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bedc890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30beda340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bed6540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bed6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bed68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bed6a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bed6be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bed4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bed5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bed51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bed5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bed54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bed5660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bed57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bed5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bed5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bed5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bed4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bed41b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bed4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bed44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bed4660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bed6d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bed47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bed1b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bed1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bed0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bed01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bed0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bece020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bed0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bed07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bed0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bed0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bed0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bed0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30becf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30becf1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30becf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30becf5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30becf760"/>
        <function-ref name="set" scoped="" ref="0x7fd30becf8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30becfa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30becfc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bed04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30becfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30becb060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30becb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30becb3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30becb570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30becb700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bec94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30becba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30becbbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30becbd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30beca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30beca1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30beca340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30beca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30beca660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30beca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30becaa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30becac10"/>
        <function-ref name="set" scoped="" ref="0x7fd30becada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bec9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bec91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30becb890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bec9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bec6540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bec6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bec68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bec6a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bec6be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bec4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bec5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bec51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bec5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bec54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bec5660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bec57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bec5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bec5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bec5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bec4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bec41b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bec4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bec44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bec4660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bec6d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bec47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bec1b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bec1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bec0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bec01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bec0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bebe020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bec0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bec07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bec0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bec0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bec0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bec0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bebf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bebf1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bebf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bebf5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bebf760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bebf8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bebfa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bebfc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bec04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bebfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bebb060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bebb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bebb3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bebb570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bebb700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30beb94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bebba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bebbbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bebbd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30beba020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30beba1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30beba340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30beba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30beba660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30beba7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bebaa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bebac10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bebada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30beb9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30beb91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bebb890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30beb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30beb6540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30beb6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30beb68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30beb6a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30beb6be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30beb4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30beb5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30beb51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30beb5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30beb54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30beb5660"/>
        <function-ref name="get" scoped="" ref="0x7fd30beb57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30beb5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30beb5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30beb5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30beb4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30beb41b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30beb4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30beb44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30beb4660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30beb6d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30beb47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30beb1b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30beb1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30beaf020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30beaf1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30beaf340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bead020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30beaf660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30beaf7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30beaf980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30beafb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30beafca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30beafe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30beae020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30beae1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30beae340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30beae5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30beae760"/>
        <function-ref name="set" scoped="" ref="0x7fd30beae8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30beaea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30beaec10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30beaf4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30beaeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30beaa060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30beaa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30beaa3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30beaa570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30beaa700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bea84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30beaaa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30beaabb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30beaad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bea9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bea91b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bea9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bea94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bea9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bea97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bea9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bea9c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30bea9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bea8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bea81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30beaa890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bea8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bea5540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bea5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bea58c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bea5a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bea5be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bea3980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bea4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bea41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bea4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bea44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bea4660"/>
        <function-ref name="get" scoped="" ref="0x7fd30bea47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bea4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bea4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bea4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bea3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bea31b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bea3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bea34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bea3660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bea5d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bea37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30bea0b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30bea0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be9f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be9f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be9f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be9d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be9f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be9f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be9f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be9fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be9fca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be9fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be9e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be9e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be9e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be9e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be9e760"/>
        <function-ref name="set" scoped="" ref="0x7fd30be9e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be9ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be9ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be9f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be9eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be9a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be9a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be9a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be9a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be9a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be984d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be9aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be9abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be9ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be99020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be991b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be99340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be994d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be99660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be99a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be99c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30be99da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be98020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be981b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be9a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be95540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be95540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be958c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be95a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be95be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be93980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be94020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be94340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be94660"/>
        <function-ref name="get" scoped="" ref="0x7fd30be947f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be94980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be94b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be94ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be93020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be931b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30be93340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be934d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be93660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be95d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be90b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be90b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be8f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be8f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be8f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be8f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be8f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be8f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be8fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be8fca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be8fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be8e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be8e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be8e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be8e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be8e760"/>
        <function-ref name="set" scoped="" ref="0x7fd30be8e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be8ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be8ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be8f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be8eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be8a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be8a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be8a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be8a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be8a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be884d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be8aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be8abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be8ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be891b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be89340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be894d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be89660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be89a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be89c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30be89da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be88020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be881b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be8a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be85540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be85540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be858c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be85a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be85be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be82980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be83020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be831b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be83340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be83660"/>
        <function-ref name="get" scoped="" ref="0x7fd30be837f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be83980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be83b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be83ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be82020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be821b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30be82340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be824d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be82660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be85d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be7fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be7fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be7e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be7e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be7e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be7c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be7e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be7e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be7e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be7eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be7eca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be7ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be7d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be7d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be7d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be7d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be7d760"/>
        <function-ref name="set" scoped="" ref="0x7fd30be7d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be7da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be7dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be7e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be7dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be79060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be79060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be793e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be79570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be79700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be774d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be79a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be79bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be79d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be78020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be781b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be78340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be78660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be78a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be78c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30be78da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be77020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be771b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be79890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be74540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be74540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be748c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be74a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be74be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be72980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be73020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be73340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be73660"/>
        <function-ref name="get" scoped="" ref="0x7fd30be737f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be73980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be73b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be73ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be72020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be721b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30be72340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be724d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be72660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be74d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be6fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be6fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be6e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be6e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be6e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be6c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be6e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be6e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be6e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be6eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be6eca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be6ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be6d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be6d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be6d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be6d760"/>
        <function-ref name="set" scoped="" ref="0x7fd30be6d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be6da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be6dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be6e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be6dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd30be69060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd30be69060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30be693e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30be69570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30be69700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30be674d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30be69a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30be69bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30be69d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30be68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30be681b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30be68340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30be684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30be68660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30be687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30be68a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30be68c10"/>
        <function-ref name="set" scoped="" ref="0x7fd30be68da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30be67020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30be671b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30be69890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30be67340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30bddbc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30bddbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bdda020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bdda1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bdda340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bdd8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bdda660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bdda7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bdda980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bddab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bddaca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bddae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bdd9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bdd91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bdd9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bdd95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bdd9760"/>
        <function-ref name="set" scoped="" ref="0x7fd30bdd98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bdd9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bdd9c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bdda4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bdd9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30bdec9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30bdec9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bdecd60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bddb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bddb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bddb340"/>
        <function-ref name="get" scoped="" ref="0x7fd30bddb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bddb660"/>
        <function-ref name="set" scoped="" ref="0x7fd30bddb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bddb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30bdd42f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30bdd42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bdd4670"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bdd4800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bdd4990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bdd2660"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bdd4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bdd4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bdd3020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bdd31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bdd3340"/>
        <function-ref name="get" scoped="" ref="0x7fd30bdd34d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bdd3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bdd37f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bdd3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bdd3c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bdd3da0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bdd2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bdd21b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bdd2340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bdd4b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bdd24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30bdd6020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30bdd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bdd63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bdd6530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bdd66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bdd6850"/>
        <function-ref name="get" scoped="" ref="0x7fd30bdd69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bdd6b70"/>
        <function-ref name="set" scoped="" ref="0x7fd30bdd6d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bdd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30bdcf7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30bdcf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bdcfb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bdcfcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30bdcfe40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30bdcda80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bdce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bdce340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30bdce4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30bdce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bdce7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bdce980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30bdceb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30bdceca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30bdcee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30bdcd120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30bdcd2b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bdcd440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30bdcd5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30bdcd760"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bdce020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30bdcd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30bdd0630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30bdd0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30bdd09b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30bdd0b40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30bdd0cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30bdd0e60"/>
        <function-ref name="get" scoped="" ref="0x7fd30bdcf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30bdcf1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30bdcf340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30bdcf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7fd30bdb1e20" loc="10:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7fd30bdb1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30bdae390"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bdba970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30bdb0720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30bdb02a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30bdaec90"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30bdae810"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30bdbadf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30bdbba80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30bdb0d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30bdba020"/>
        <function-ref name="stop" scoped="" ref="0x7fd30bdba4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fd30bd2b190" loc="16:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fd30bd2b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30bd2b510"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30bd2b6a0"/>
        <function-ref name="start" scoped="" ref="0x7fd30bd2b830"/>
        <function-ref name="stop" scoped="" ref="0x7fd30bd2b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd30bdc1490" loc="8:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd30bdc1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd30bdc1810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd30bd4fc30" loc="12:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30bd4fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bda7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30bda71b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30bda7340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30bda74d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30bda7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd30bd3f020" loc="14:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30bd3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30bd3f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30bd3f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30bd3f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30bd3f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30bd3f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7fd30bdad340" loc="11:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7fd30bdad340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30bda9870"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bdace40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30bdabc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30bdab780"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30bda81e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30bda9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30bdab300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30bdac020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30bda9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30bdac4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30bdac9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fd30bd2f840" loc="15:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30bd2f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30bd2fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30bdc1ad0" loc="9:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30bdc1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30bdc1e50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30bdbd020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30bdbd1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30bdbd340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30bdbd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bdbd660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30bdbd7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30bdbde30"/>
        <function-ref name="set" scoped="" ref="0x7fd30bdbd980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30bdbdb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30bdbdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd30bd3ebe0" loc="13:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30bd3ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30bda6020"/>
        <function-ref name="source" scoped="" ref="0x7fd30bda61b0"/>
        <function-ref name="address" scoped="" ref="0x7fd30bda6340"/>
        <function-ref name="destination" scoped="" ref="0x7fd30bda64d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30bda6660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30bda67f0"/>
        <function-ref name="type" scoped="" ref="0x7fd30bda6980"/>
        <function-ref name="setType" scoped="" ref="0x7fd30bda6b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30bda6ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30bda6e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30bd50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30bced980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="MasterAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bced980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b9c1e80"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b9c24a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30b9c1260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30b9c2da0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30b9c07a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30b9c0320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b9c2920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30b9c35a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30b9c1870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30b9c3a70"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b9c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd30bce41d0" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bce41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30bce0630"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bce2c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30bce19d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30bce1550"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30bcdf020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30bce0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30bce10d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30bce4dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30bce0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30bce22e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30bce27b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd30bcdbc30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fd30bcdbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30bcd6110"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bcd96a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30bcd74a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30bcd7020"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30bcd6a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30bcd6590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30bcd9b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30bcda860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30bcd7ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30bcdad30"/>
        <function-ref name="stop" scoped="" ref="0x7fd30bcd9220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd30bcd1500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd30bcd1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30bcd3170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30bcdfe50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30bcdfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30bcdb210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30ba93870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30ba93870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30ba8f090"/>
        <function-ref name="fired" scoped="" ref="0x7fd30ba91090"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30ba91a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30ba91550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30ba8f550"/>
        <function-ref name="start" scoped="" ref="0x7fd30ba926a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30ba92bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30ba93020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30ba93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30ba933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30a8252a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30a8252a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a823b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a824aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a8234e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a823020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a821020"/>
        <function-ref name="start" scoped="" ref="0x7fd30a8240d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a8245e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30a826a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30a826a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30a826d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd30a80ba80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a80ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30a80be00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30a80a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30a80a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30a80a340"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a80a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd30a80d020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a80d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30a80d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30a80d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a80d6c0"/>
        <function-ref name="get" scoped="" ref="0x7fd30a80d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a80d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30a80db70"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30a80dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30a80c020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30a80c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30a80c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30a80c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd30a80c760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a80c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30a80cae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30a80cc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a80ce00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30a80b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30a80b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a80b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30a80b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30a80b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30a80b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd30bc9b1d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30bc9b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc9b550"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc9b6e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc9b870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc9ba00"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc9bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd30bca0b00" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30bca0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bca0e80"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bc9f030"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc9f1c0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bc9f350"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc9f4e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc9f670"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bc9f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc9f990"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bc9fb20"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bc9fcb0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bc9fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd30bc9d720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30bc9d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc9daa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc9dc30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc9ddc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc9c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc9c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc9c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc9c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc9c660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc9c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fd30bc8a730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fd30bc8a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc8aab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc8ac40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc8add0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc89020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc891b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc89340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc894d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc89660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fd30bc85280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fd30bc85280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc85600"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc85790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc85920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc85ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc85c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc85dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc84020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc841b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc84340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fd30bc8b700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fd30bc8b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc8ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc8bc10"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc8bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc8a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc8a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fd30bc79020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fd30bc79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc793a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc79530"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc796c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc79850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc799e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc79b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fd30bc91890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fd30bc91890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc91c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc91da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc8b020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc8b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fd30bc7a160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fd30bc7a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc7a4e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc7a670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc7a800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc7a990"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc7ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fd30bc6fae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fd30bc6fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc6fe60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc6e020"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc6e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc6e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc6e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc6e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fd30bc78020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fd30bc78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc783a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc78530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc786c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc78850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc789e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc78b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc78d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc77020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fd30bc950c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fd30bc950c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc95440"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc955d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc95760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc958f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc95a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc95c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc95da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc94020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fd30bc80a20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fd30bc80a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc80da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc7f020"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc7f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc7f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc7f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc7f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fd30bc81bb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fd30bc81bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc80020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc801b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc80340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc804d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc80660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fd30bc82730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fd30bc82730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc82ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc82c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc82dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc81020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc811b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc81340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc814d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc81660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fd30bc88a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fd30bc88a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc88da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc87020"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc871b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc87340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc874d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fd30bc76570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fd30bc76570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc768f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc76a80"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc76c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc76da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc75020"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fd30bc7fa50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fd30bc7fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc7fdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc7e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc7e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc7e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc7e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc7e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc7e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc7e980"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc7eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fd30bc89bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fd30bc89bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc88020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc881b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc88340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc884d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fd30bc9a830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fd30bc9a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bc9abb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bc9ad40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc97020"/>
        <function-ref name="get" scoped="" ref="0x7fd30bc971b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc97340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc974d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bc97660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc977f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bc97980"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bc97b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bc97ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fd30bc77570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fd30bc77570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc77af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc77c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc77e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc76020"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fd30bc92410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fd30bc92410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc92790"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc92920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc92ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc92c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc92dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc91020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc911b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc91340"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fd30bc755a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fd30bc755a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc75920"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc75ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc75c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc75dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc73020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc731b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc73340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc734d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc73660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fd30bc8c410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fd30bc8c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc8c790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc8c920"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc8cab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc8cc40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc8cdd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fd30bc7dda0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fd30bc7dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc7c180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc7c310"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc7c4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc7c630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc7c7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc7c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fd30bc94570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fd30bc94570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc948f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc94a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc94c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc94da0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fd30bc7d020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fd30bc7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc7d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc7d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc7d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc7d850"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc7d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fd30bc72890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fd30bc72890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc72c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc72da0"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc71020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc711b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc71340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fd30bc7cd40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fd30bc7cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc7b0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc7b270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc7b400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc7b590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc7b720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc7b8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc7ba40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc7bbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc7bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fd30bc879e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fd30bc879e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bc87d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bc86020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc861b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bc86340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc864d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc86660"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bc867f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc86980"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bc86b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bc86ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bc86e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fd30bc83700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fd30bc83700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc83a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bc83c10"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bc83da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc82020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc821b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bc82340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fd30bc73a20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fd30bc73a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc73da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc72020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc721b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc72340"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fd30bc70d40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fd30bc70d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc6f0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc6f270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc6f400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc6f590"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc6f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fd30bc84700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fd30bc84700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bc84b80"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bc84d10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bc83020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bc831b0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bc83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fd30bc718c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fd30bc718c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc71c40"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc71dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc70020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bc701b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bc70340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc704d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bc70660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bc707f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bc70980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd30bc36940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd30bc36940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc36cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd30bc362f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd30bc362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc36670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd30bc35020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd30bc35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd30bc37bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bc37bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30bc383e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bc383e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bc38760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bc388f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc38a80"/>
        <function-ref name="get" scoped="" ref="0x7fd30bc38c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc38da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc37020"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bc371b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc37340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bc374d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bc37660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bc377f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd30bc2f750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd30bc2f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc2fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd30bc2f100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd30bc2f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc2f480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd30bc2fda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd30bc2fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc2d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd30bc30a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bc30a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bc30e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30bc31260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bc31260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bc315e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bc31770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc31900"/>
        <function-ref name="get" scoped="" ref="0x7fd30bc31a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bc31c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bc31db0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bc30020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bc301b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bc30340"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bc304d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bc30660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbe47a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbe47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbe4b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbe4cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbe4e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbe3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbe31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbe3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bc2a6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bc2a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bc2aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bc2abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bc2ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbe5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbe51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbe5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbe54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbe5660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbe57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbe2c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbe2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbe1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbe5ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbe5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbe5e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbe4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbe41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbe4340"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbe44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbe3610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbe3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbe3990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbe3b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbe3cb0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbe3e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbe2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbe21b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbe2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbe24d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbe2660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbe27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbe2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbdccb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbdccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbdb0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbdb230"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbdb3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbdb550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbdb6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbdb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bbdeb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bbdeb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bbdd020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bbdd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbdd340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbdd4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbdd660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbdd7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbdd980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbddb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbddca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbd92f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbd92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbd9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbdc020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbdc3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbdc530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbdc6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbdc850"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbdc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbdbb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbdbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbda020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbda1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbda340"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbda4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbda660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbda7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbda980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbdab10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbdaca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbdae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbd42f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbd42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbd4670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbd4800"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbd4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbd4b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbd4cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbd4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bbd6220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bbd6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bbd65a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bbd6730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbd68c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbd6a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbd6be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbd6d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbd5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbd51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbd5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbd27a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbd27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbd2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbd5610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbd5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbd5990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbd5b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbd5cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbd5e40"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbd3160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbd3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbd34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbd3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbd3800"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbd3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbd3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbd3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbd3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbd2020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbd21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbd2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbd24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbcc7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbcc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbccb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbcccb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbcce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbcb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbcb1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbcb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bbcf6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bbcf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bbcfa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bbcfbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbcfd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbcd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbcd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbcd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbcd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbcd660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbcd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbcac50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbcac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbcdac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbcdac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbcde40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbcc020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbcc1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbcc340"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbcc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbcb610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbcb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbcb990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbcbb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbcbcb0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbcbe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbca020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbca1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbca4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbca660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbca7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbc5cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbc5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbc40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbc4230"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbc43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbc4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbc46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbc4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bbc7b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bbc7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bbc6020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bbc61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbc6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbc64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbc6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbc67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbc6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbc6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbc6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbc22f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbc2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbc5020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbc53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbc5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbc56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbc5850"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbc59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbc4b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbc4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbc3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbc31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbc3340"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbc34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbc3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbc37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbc3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbc3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbc3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbc3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbbc2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbbc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbbc670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbbc800"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbbc990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbbcb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbbccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbbce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bbbf220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bbbf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bbbf5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bbbf730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbbf8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbbfa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbbfbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbbfd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbbd020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbbd1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbbd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbba7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbbab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbbd610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbbd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbbd990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbbdb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbbdcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbbde40"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbbc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbbb160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbbb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbbb4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbbb670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbbb800"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbbb990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbbbb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbbbcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbbbe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbba020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbba1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbba340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbb57a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbb57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbb5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbb5cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbb5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbb4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbb41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bbb76d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bbb76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bbb7a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bbb7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbb7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbb6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbb61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbb6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbb64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbb6660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbb67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbb3c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbb3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbb6ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbb6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbb6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbb5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbb51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbb5340"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbb4610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbb4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbb4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbb4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbb4cb0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbb4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbb3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbb31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbb3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbb34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbb3660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbb37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbb3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bbaecb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bbaecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbac0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bbac230"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bbac3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbac550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbac6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bbac870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bbb0b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bbb0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bbaf020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bbaf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbaf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bbaf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bbaf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbaf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bbaf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bbafb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bbafca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bbaa2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bbaa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bbaa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bbae020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bbae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bbae3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bbae530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bbae6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bbae850"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bbae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bbacb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bbacb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bbab020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bbab1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bbab340"/>
        <function-ref name="get" scoped="" ref="0x7fd30bbab4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bbab660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bbab7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bbab980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bbabb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bbabca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bbabe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bbaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bba52f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bba52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bba5670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bba5800"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bba5990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bba5b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bba5cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bba5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bba7220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bba7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bba75a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bba7730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bba78c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bba7a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bba7be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bba7d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bba6020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bba61b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bba6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bba37a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bba37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bba3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bba6610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bba6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bba6990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bba6b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bba6cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bba6e40"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bba5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bba4160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bba4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bba44e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bba4670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bba4800"/>
        <function-ref name="get" scoped="" ref="0x7fd30bba4990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bba4b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bba4cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bba4e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bba3020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bba31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bba3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bba34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30bb9d7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30bb9d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bb9db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30bb9dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd30bb9de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bb9c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bb9c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30bb9c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd30bba06d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd30bba06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30bba0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30bba0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bba0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30bb9f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30bb9f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bb9f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30bb9f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30bb9f660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30bb9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd30bb9bc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd30bb9bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bb9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd30bb9fac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd30bb9fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30bb9fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30bb9d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30bb9d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30bb9d340"/>
        <function-ref name="fired" scoped="" ref="0x7fd30bb9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd30bb9c610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30bb9c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30bb9c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30bb9cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30bb9ccb0"/>
        <function-ref name="get" scoped="" ref="0x7fd30bb9ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30bb9b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bb9b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30bb9b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bb9b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bb9b660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30bb9b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30bb9b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fd30bb95bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd30bb95bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bb94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fd30bb963f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd30bb963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bb96770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fd30bb96b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd30bb96b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bb95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fd30bb95430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd30bb95430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30bb957b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fd30a801760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a801760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30a801ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30a801c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30a801e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30a800020"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a8001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd30a804dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a804dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30a803180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30a803310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a8034a0"/>
        <function-ref name="get" scoped="" ref="0x7fd30a803630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a8037c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30a803950"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30a803ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30a803c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30a803e00"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30a802020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30a8021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30a808bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30a808bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a8044e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a8054e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a805e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a8059a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a8049a0"/>
        <function-ref name="start" scoped="" ref="0x7fd30a806a80"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30a808360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30a808360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30a8086e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd30a802440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a802440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30a8027c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30a802950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a802ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30a802c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30a802e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a801020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30a8011b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30a801340"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30a8014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd30bb0c8c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30bb0c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30bb0f700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bb0b0d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bb0fbc0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bb0b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fd30bb0a8e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd30bb0a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30bb07780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bb06150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bb07c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bb06610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd30baf5c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30baf5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30baf3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30baf31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30baf3340"/>
        <function-ref name="get" scoped="" ref="0x7fd30baf34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30baf3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30baf37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30baf3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30baf3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30baf3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30baf3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30baf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd30bb03b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30bb03b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30bb029b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30baf5360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bb02e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30baf5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd30bad10f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fd30bad10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30bad0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bad09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bad04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bad0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd30baefcf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30baefcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30bad4b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30bad3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30bad3090"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30bad3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30a81f5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30a81f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a81de50"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a81ee00"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a81d800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a81d340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a81c340"/>
        <function-ref name="start" scoped="" ref="0x7fd30a81e430"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a81e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd30a819d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd30a819d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a814670"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a815550"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a814020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a815a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a814b30"/>
        <function-ref name="start" scoped="" ref="0x7fd30a816b60"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a815090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd30a81c9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30a81c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30a81b7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30a8191b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30a81bca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30a819670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fd30ba5e9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fd30ba5e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30ba5ed40"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30ba5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd30ba62850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30ba62850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30ba5e090"/>
        <function-ref name="fired" scoped="" ref="0x7fd30ba5f090"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30ba5fa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30ba5f550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30ba5e550"/>
        <function-ref name="start" scoped="" ref="0x7fd30ba606a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30ba60bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30ba672f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30ba672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30ba63870"/>
        <function-ref name="fired" scoped="" ref="0x7fd30ba66e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30ba64c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30ba64780"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30ba621e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30ba63cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30ba64300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30ba66020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30ba63260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30ba664f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30ba669c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd30b9de020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fd30b9de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b9da630"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b9dda60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30b9db920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30b9db4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30b9d9020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30b9daab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b9db020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30b9dec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30b9da020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30b9dd110"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b9dd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fd30b9d9450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fd30b9d9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fd30b9d97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30b9e58e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30b9e58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b9e0020"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b9e34c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30b9e1300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30b9e3e00"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30b9e0960"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30b9e04c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b9e3960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30b9e4560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30b9e1930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30b9e4a50"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b9e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fd30a622100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fd30a622100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30a622480"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30a622610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd30a6293d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fd30a6293d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a625870"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a628e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30a627c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30a627780"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30a6241e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30a625cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a627300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30a628020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30a625260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30a6284f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a6289c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fd30a623a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fd30a623a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fd30a623dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7fd30a6245d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fd30a6245d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fd30a623660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fd30a6237f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fd30a624c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fd30a624e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fd30a623020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fd30a6231b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fd30a623340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fd30a6234d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fd30a624950"/>
        <function-ref name="node_id" scoped="" ref="0x7fd30a624ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30a630db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30a630db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a62b470"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a62e9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30a62c7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30a62c320"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30a62bdb0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30a62b910"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a62ee50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30a62fa80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30a62cdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30a62e020"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a62e510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd30b9d6020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd30b9d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b9d6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd30b9cc300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30b9cc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b9ca150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b9caad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b9ca610"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b9c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30b9bd240" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="MasterAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30b9bd240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b9ba6e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b9bcc90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30b9bba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30b9bb5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30b9b8020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30b9bab60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b9bb170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30b9bde30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30b9ba0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30b9bc340"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b9bc810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd30b9b7680" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd30b9b7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30b9b7a00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30b9b7b90"/>
        <function-ref name="start" scoped="" ref="0x7fd30b9b7d20"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b9b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd30b9b47f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30b9b47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b9b4b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b9b4d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b9b3020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b9b31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b9b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd30b9b2880" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd30b9b2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b9b2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd30b9b1020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30b9b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b9b13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30b9b1530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b9b16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b9b1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30b9b19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd30b9ad310" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30b9ad310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30b9a0880"/>
        <function-ref name="clear" scoped="" ref="0x7fd30b99f020"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30b9a0150"/>
        <function-ref name="set" scoped="" ref="0x7fd30b99f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd30b993130" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b993130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd30b9934b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd30b993640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd30b9937d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd30b993960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30b9b3b20" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30b9b3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b9b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd30b9ae080" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b9ae080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30b9ae400"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30b9ae590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30b9ae720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd30b9b1c90" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9b1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30b9b00a0"/>
        <function-ref name="source" scoped="" ref="0x7fd30b9b0230"/>
        <function-ref name="address" scoped="" ref="0x7fd30b9b03c0"/>
        <function-ref name="destination" scoped="" ref="0x7fd30b9b0550"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30b9b06e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30b9b0870"/>
        <function-ref name="type" scoped="" ref="0x7fd30b9b0a00"/>
        <function-ref name="setType" scoped="" ref="0x7fd30b9b0b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30b9b0d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30b9af020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30b9af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd30b99e3f0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd30b99e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30b99c970"/>
        <function-ref name="clear" scoped="" ref="0x7fd30b99b0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30b99c240"/>
        <function-ref name="set" scoped="" ref="0x7fd30b99b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd30b987cc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd30b987cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30b9860a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30b986230"/>
        <function-ref name="start" scoped="" ref="0x7fd30b9863c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b986550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd30b96de30" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b96de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30b9751e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30b975370"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30b975500"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30b975690"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30b975820"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30b9759b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd30b960d20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fd30b960d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd30b96a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd30b9818f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30b9818f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b981c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30b981e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b980020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b9801b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30b980340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd30b986d20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30b986d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b9840e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b984270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b984400"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b984590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b984720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd30b983c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd30b983c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b982020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd30b9789b0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b9789b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30b978d30"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30b97f020"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30b97f1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30b97f340"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30b97f4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30b97f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd30b975cb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b975cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd30b9730a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd30b973230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd30b9733c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd30b973550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30b983020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30b983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b9833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd30b97f990" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b97f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30b97fd10"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30b97e020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30b97e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd30b96b020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd30b96b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd30b96b3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd30b96b530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd30b96b6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd30b96b850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd30b96b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd30b9822d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30b9822d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30b982650"/>
        <function-ref name="source" scoped="" ref="0x7fd30b9827e0"/>
        <function-ref name="address" scoped="" ref="0x7fd30b982970"/>
        <function-ref name="destination" scoped="" ref="0x7fd30b982b00"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30b982c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30b982e20"/>
        <function-ref name="type" scoped="" ref="0x7fd30b981020"/>
        <function-ref name="setType" scoped="" ref="0x7fd30b9811b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30b981340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30b9814d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30b981660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd30b974c70" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30b974c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd30b976020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd30b95fb70" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd30b95fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30b95c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30b95c1b0"/>
        <function-ref name="start" scoped="" ref="0x7fd30b95c340"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b95c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd30b9499d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30b9499d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd30b949d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd30b948b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd30b948b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd30b947020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd30b9471b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd30b947340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd30b9474d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd30b947660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd30b94a020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b94a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30b94a3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30b94a530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30b94a6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30b94a850"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30b94a9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30b94ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd30b954990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd30b954990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b954d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b94d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b94d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b94d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b94d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd30b948080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30b948080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd30b948400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd30b948590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd30b948720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd30b9488b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd30b955500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fd30b955500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b955880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd30b949020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30b949020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30b9493a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30b949530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30b9496c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b95b210" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b95b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b95b590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b95b720"/>
        <function-ref name="request" scoped="" ref="0x7fd30b95b8b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b95ba40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b95bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd30b94b6f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fd30b94b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b94ba70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b94bc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b94bd90"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b955020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b9551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd30b955bc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd30b955bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b954020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30b9541b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b954340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b9544d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30b954660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd30b94d840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30b94d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b94dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd30b944390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd30b944390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30b944710"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30b9448a0"/>
        <function-ref name="start" scoped="" ref="0x7fd30b944a30"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b944bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd30b941330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b941330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30b9416b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30b941840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30b9419d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30b941b60"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30b941cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30b941e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30b944e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30b944e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b942220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b9423b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b942540"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b9426d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b942860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30b942b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30b942b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b941020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd30b940e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd30b940e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30b93d220"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30b93d3b0"/>
        <function-ref name="start" scoped="" ref="0x7fd30b93d540"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b93d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd30b93c7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b93c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30b93cb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30b93ccf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30b93ce80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30b93b030"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30b93b1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30b93b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd30b930060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fd30b930060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30b9303e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30b930570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30b930700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30b930890"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30b930a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30b930bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd30b926330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b926330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30b9266b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30b926840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30b9269d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30b926b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30b926cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30b926e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fd30b9282a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd30b9282a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b928620"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b9287b0"/>
        <function-ref name="modify" scoped="" ref="0x7fd30b928940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b928ad0"/>
        <function-ref name="resend" scoped="" ref="0x7fd30b928c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30b93d990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30b93d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b93dd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b93c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30b93c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b93c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b93c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd30b924420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd30b924420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd30b9247a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd30b924930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd30b92f760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fd30b92f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd30b92fae0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b92fc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd30b91d920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30b91d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b91dca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30b91de30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30b922020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fd30b933b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd30b933b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd30b938020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd30b9381b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd30b938340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd30b9384d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd30b938660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd30b9387f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd30b938980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd30b938b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30b924bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30b924bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30b927020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30b9271b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30b927340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30b9274d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30b927660"/>
        <function-ref name="get" scoped="" ref="0x7fd30b9277f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30b927980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30b926020"/>
        <function-ref name="set" scoped="" ref="0x7fd30b927b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30b927ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30b927e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd30b93b640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b93b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b93b9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b93bb50"/>
        <function-ref name="request" scoped="" ref="0x7fd30b93bce0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b93be70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b939030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fd30b921110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fd30b921110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30b921590"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30b921720"/>
        <function-ref name="isState" scoped="" ref="0x7fd30b9218b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30b921a40"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30b921bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30b921d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fd30b913b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fd30b913b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30b912020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30b9121b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fd30b915ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fd30b915ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30b913020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30b9131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fd30b916c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fd30b916c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30b915020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30b9151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd30b8bcdc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd30b8bcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd30b8c8180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd30b8c8310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd30b8c84a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd30b8c8630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd30b8c87c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd30b8c8950"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd30b8c8ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd30b8c8c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd30b8c8e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd30b8c7020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd30b8c71b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd30b8c7340"/>
        <function-ref name="sync" scoped="" ref="0x7fd30b8c74d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd30b8c7760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd30b8c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd30b8b90c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fd30b8b90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b8b9cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b8b8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd30b8c7bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd30b8c7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd30b8bb020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd30b8bb1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd30b8bb340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd30b8bb4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd30b8bb660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd30b8bb7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd30b8bb980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd30b8bbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b8cc950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b8cc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b8cccd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b8cce60"/>
        <function-ref name="request" scoped="" ref="0x7fd30b8c9020"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b8c91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b8c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd30b8b2970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd30b8b2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd30b8b2cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd30b8b2e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd30b8b1030"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd30b8b11c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd30b8b1350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd30b8b14e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd30b8b1670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd30b8b1800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd30b8b1990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd30b8b1b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd30b8b1cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd30b8b1e40"/>
        <function-ref name="sync" scoped="" ref="0x7fd30b8b0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd30b8b02b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd30b8b0440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fd30b8908e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b8908e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b890c60"/>
        <function-ref name="write" scoped="" ref="0x7fd30b890df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fd30b8ab020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd30b8ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd30b8ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fd30b8aba10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fd30b8aba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b8a72a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b8a92a0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30b8a9c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b8a9760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30b8a7760"/>
        <function-ref name="start" scoped="" ref="0x7fd30b8aa890"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b8aada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fd30b893710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b893710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b893a90"/>
        <function-ref name="write" scoped="" ref="0x7fd30b893c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fd30b8a6e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fd30b8a6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b8a5220"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b8a53b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b8a5540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b8a56d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b8a5860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b8a59f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b8a5b80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b8a5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd30b8afb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fd30b8afb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b8ae750"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b8aebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fd30b87e820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fd30b87e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30b87eba0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30b87ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fd30b88f1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd30b88f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b88f540"/>
        <function-ref name="write" scoped="" ref="0x7fd30b88f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd30b88fa70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b88fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b88fdf0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b88e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fd30b894550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b894550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b8948d0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b894a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd30b89a390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd30b89a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd30b89a710"/>
        <function-ref name="changed" scoped="" ref="0x7fd30b89a8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd30b89aa30"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd30b89abc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd30b8a7c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd30b8a7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b8a6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b8a61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b8a6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b8a64d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b8a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b8a67f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b8a6980"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b8a6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fd30b88d120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b88d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b88d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fd30b8a40f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fd30b8a40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b8a4470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b8a4600"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b8a4790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b8a4920"/>
        <function-ref name="get" scoped="" ref="0x7fd30b8a4ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b8a4c40"/>
        <function-ref name="set" scoped="" ref="0x7fd30b8a4dd0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b8a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30b8b3510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30b8b3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30b8b3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd30b890020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b890020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b8903a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b890530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fd30b88da40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b88da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b88ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd30b88c1d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd30b88c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b88c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b88c6e0"/>
        <function-ref name="request" scoped="" ref="0x7fd30b88c870"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b88ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b88cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fd30b88ad90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fd30b88ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b889180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b889310"/>
        <function-ref name="request" scoped="" ref="0x7fd30b8894a0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b889630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b8897c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd30b8b0740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd30b8b0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd30b8b0ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd30b8b0c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd30b8b0de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd30b8af020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd30b8af1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd30b8af340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd30b8af4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd30b8af660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fd30b894e00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b894e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b8931c0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b893350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fd30b892be0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b892be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b894020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b8941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fd30b88b2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd30b88b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b88b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30b889a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30b889a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30b889e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30b888020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30b8881b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30b888340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30b8884d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b888660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30b8887f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30b888e30"/>
        <function-ref name="set" scoped="" ref="0x7fd30b888980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30b888b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30b888ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fd30b87f940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fd30b87f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30b87fcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30b87fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b8b3b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b8b3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b8b2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b8b21b0"/>
        <function-ref name="request" scoped="" ref="0x7fd30b8b2340"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b8b24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b8b2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fd30b89d5e0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd30b89d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b89d960"/>
        <function-ref name="write" scoped="" ref="0x7fd30b89daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fd30b895c30" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b895c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b89d0e0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b89d270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fd30b89ec00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd30b89ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b8a2020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b8a21b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd30b8a2340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd30b8a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fd30b88a020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fd30b88a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b88a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b88a530"/>
        <function-ref name="request" scoped="" ref="0x7fd30b88a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b88a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b88a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fd30b88b9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b88b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b88bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30b808c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30b808c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30b805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd30b805690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd30b805690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b802020"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b803020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30b8039a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b8034e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30b8024e0"/>
        <function-ref name="start" scoped="" ref="0x7fd30b8045b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b804ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30b800a20" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30b800a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30b800da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd30b7ff2e0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd30b7ff2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b7c5b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b7c6ae0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30b7c54e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b7c5020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30b7c4020"/>
        <function-ref name="start" scoped="" ref="0x7fd30b7c6110"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b7c6620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30a5cd690" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30a5cd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a5c9020"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a5ca020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a5ca9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a5ca4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a5c94e0"/>
        <function-ref name="start" scoped="" ref="0x7fd30a5cc5b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a5ccac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30a5cedf0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30a5cedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30a5cd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30a5c5870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30a5c5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a5c2090"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a5c3090"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a5c3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a5c3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a5c2550"/>
        <function-ref name="start" scoped="" ref="0x7fd30a5c46a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a5c4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30a5c5020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30a5c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30a5c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd30a5ac020" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a5ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30a5ac3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30a5ac530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30a5ac6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30a5ac850"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a5ac9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd30a5af570" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a5af570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30a5af8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30a5afa80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a5afc10"/>
        <function-ref name="get" scoped="" ref="0x7fd30a5afda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a5ae020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30a5ae1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30a5ae340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30a5ae4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30a5ae660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30a5ae7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30a5ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd30a5aec10" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a5aec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30a5ad020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30a5ad1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a5ad340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30a5ad4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30a5ad660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a5ad7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30a5ad980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30a5adb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30a5adca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fd30a5a0da0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd30a5a0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30a59f180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd30a59f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd30a59f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd30a59f630"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a59f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd30a5a54c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30a5a54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30a5a5840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30a5a59d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a5a5b60"/>
        <function-ref name="get" scoped="" ref="0x7fd30a5a5cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a5a5e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30a5a4030"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30a5a41c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30a5a4350"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30a5a44e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30a5a4670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30a5a4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30a5a9340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30a5a9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a5a6ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a5a7b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a5a6550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a5a6090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a5a5090"/>
        <function-ref name="start" scoped="" ref="0x7fd30a5a71b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a5a76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30a5aaa30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30a5aaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30a5aadb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd30a5a4a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30a5a4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30a5a4e10"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30a5a0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30a5a01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30a5a0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30a5a04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30a5a0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30a5a07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30a5a0980"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30a5a0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd30b7e9650" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30b7e9650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b7e85b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b7e7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b7e8a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b7e74e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd30b7e16d0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fd30b7e16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b7df5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b7de020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b7dfa70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b7de4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd30b7e32e0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30b7e32e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b7e2110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b7e2a90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b7e25d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b7e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd30a5bfa90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd30a5bfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a5bc2e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a5bd2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a5bdc60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a5bd7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a5bc7a0"/>
        <function-ref name="start" scoped="" ref="0x7fd30a5be8d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a5bede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd30a5b8210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd30a5b8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30a5b6b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd30a5b7a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30a5b64e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30a5b6020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30a5b5020"/>
        <function-ref name="start" scoped="" ref="0x7fd30a5b7090"/>
        <function-ref name="stop" scoped="" ref="0x7fd30a5b75a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd30a5bce10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30a5bce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30a5bbca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30a5ba670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30a5ba1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30a5bab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fd30b7bd6a0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fd30b7bd6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7bda20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7bdbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7bdd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7bc020"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7bc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7bc340"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7bc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fd30b7bc9d0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fd30b7bc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7bcd50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7bb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7bb340"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7bb660"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7bb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7bb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fd30b7bbce0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fd30b7bbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7ba230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7ba3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7ba550"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7ba6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7ba870"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7baa00"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7bab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fd30b7be370" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd30b7be370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7be6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7be880"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7bea10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7beba0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7bed30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7bd020"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7bd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fd30b7b8380" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fd30b7b8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7b8700"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7b8890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7b8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7b8bb0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7b8d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7b7020"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fd30b7bf0e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fd30b7bf0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7bf460"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7bf5f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7bf780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7bf910"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7bfaa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7bfc30"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7bfdc0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fd30b7b9020" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fd30b7b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7b93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7b9530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7b96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7b9850"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7b99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7b9b70"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7b9d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b7b5930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7b5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7b5cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7b5e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b7b4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b7b3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7b4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7b44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b7b4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b7b47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7b4980"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7b4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b7b4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b7b4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b7b3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b7b32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b7b3440"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7b35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b7b3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b7b38f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7b41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b7b3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b7b6710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7b6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7b6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7b6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7b6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7b5020"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7b51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7b5340"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7b54d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7b5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b7af020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7af3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7af530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b7af6c0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b7ad4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7af9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7afb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b7afd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b7ae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7ae1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7ae340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b7ae4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b7ae660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b7ae7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b7aea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b7aec10"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7aeda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b7ad020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b7ad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7af850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b7ad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b7b1da0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7b1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7b0180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7b0310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7b04a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7b0630"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7b07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7b0950"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7b0ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7b0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b7aa610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7aa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7aa990"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7aab20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b7aacb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b7a7980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b7a8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b7a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7a8660"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7a87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b7a8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b7a8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b7a8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b7a7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b7a71b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7a7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b7a74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b7a7660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7aae40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b7a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b7ab4a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7ab4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7ab820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7ab9b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7abb40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7abcd0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7abe60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7aa020"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7aa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b7a4c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7a4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7a3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7a31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b7a3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b7a1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7a3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7a37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b7a3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b7a3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7a3ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7a3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b7a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b7a21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b7a2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b7a25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b7a2760"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7a28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b7a2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b7a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7a34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b7a2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b7a5b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b7a5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b7a5e80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7a4030"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7a41c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7a4350"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7a44e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7a4670"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7a4800"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7a4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b79e2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b79e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b79e670"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b79e800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b79e990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b79c660"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b79ecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b79ee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b79d020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b79d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b79d340"/>
        <function-ref name="get" scoped="" ref="0x7fd30b79d4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b79d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b79d7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b79d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b79dc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b79dda0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b79c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b79c1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b79c340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b79eb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b79c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b79f020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b79f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b79f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b79f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b79f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b79f850"/>
        <function-ref name="get" scoped="" ref="0x7fd30b79f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b79fb70"/>
        <function-ref name="set" scoped="" ref="0x7fd30b79fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b79e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b7997a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b7997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b799b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b799cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b799e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b797a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b798340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b7984d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b798660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7987f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b798980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b798b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b798ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b798e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b797120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b7972b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b797440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b7975d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b797760"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b798020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b7978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b79a630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b79a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b79a9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b79ab40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b79acd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b79ae60"/>
        <function-ref name="get" scoped="" ref="0x7fd30b799020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b7991b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b799340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b794c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b794c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b793020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b7931b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b793340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b791020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b793660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7937f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b793980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b793b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b793ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b793e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b792020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b7921b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b792340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b7925d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b792760"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7928f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b792a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b792c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7934d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b792da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b795b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b795b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b795e80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b794030"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b7941c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b794350"/>
        <function-ref name="get" scoped="" ref="0x7fd30b7944e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b794670"/>
        <function-ref name="set" scoped="" ref="0x7fd30b794800"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b794990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fd30b777700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd30b777700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd30b777a80"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b777c10"/>
        <function-ref name="captured" scoped="" ref="0x7fd30b777da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd30b77b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fd30b77b400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd30b77b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b77b780"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b77b910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd30b77baa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd30b77bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fd30b77a060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd30b77a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b77a3e0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b77a570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd30b77a700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd30b77a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fd30b75ba80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fd30b75ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd30b75be00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd30b75a020"/>
        <function-ref name="captured" scoped="" ref="0x7fd30b75a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b75a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b75a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd30b75a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd30b774c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd30b774c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd30b75c020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b75c1b0"/>
        <function-ref name="captured" scoped="" ref="0x7fd30b75c340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd30b75c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd30b75c760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd30b75c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd30b75cae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd30b75cc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30b75ce00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd30b75b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd30b75b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30b75b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd30b75b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd30b75b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd30b75b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fd30b75a930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b75a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b75acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b75ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b759020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b758c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b759340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b7594d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b759660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b7597f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b759980"/>
        <function-ref name="get" scoped="" ref="0x7fd30b759b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b759ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b759e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b758020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b7582b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b758440"/>
        <function-ref name="set" scoped="" ref="0x7fd30b7585d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b758760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b7588f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b7591b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b758a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd30b7483f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd30b7483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b748770"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b748900"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b748a90"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b748c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b748db0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b747020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7471b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b747340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd30b73b3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd30b73b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b73b770"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b73b900"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b73ba90"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b73bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b73bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b73a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b73a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b73a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd30b745d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd30b745d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b744100"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b744290"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b744420"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b7445b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b744740"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b7448d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b744a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b744bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd30b7423f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd30b7423f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b742770"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b742900"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b742a90"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b742c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b742db0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b741020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7411b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b741340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd30b750bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd30b750bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b74a020"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b74a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b74a340"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b74a4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b74a660"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b74a7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b74a980"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b74ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd30b73fd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd30b73fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b73e210"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b73e3a0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b73e530"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b73e6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b73e850"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b73e9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b73eb70"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b73ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd30b747710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd30b747710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b747a90"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b747c20"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b747db0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b746020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7461b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b746340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7464d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b746660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd30b73a710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd30b73a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b73aa90"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b73ac20"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b73adb0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b739020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7391b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b739340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7394d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b739660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd30b74b620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd30b74b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b74b9a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b74bb30"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b74bcc0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b74be50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b751020"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b7511b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b751340"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b7514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd30b741710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd30b741710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b741a90"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b741c20"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b741db0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b740020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7401b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b740340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7404d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b740660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd30b749020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd30b749020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b7493a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b749530"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b7496c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b749850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7499e0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b749b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b749d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b748020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd30b73c100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd30b73c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b73c480"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b73c610"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b73c7a0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b73c930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b73cac0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b73cc50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b73cde0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b73b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd30b746a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd30b746a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b746db0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b745020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b7451b0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b745340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7454d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b745660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7457f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b745980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd30b743020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd30b743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b7433a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b743530"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b7436c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b743850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7439e0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b743b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b743d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b742020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd30b7518a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd30b7518a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b751c20"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b751db0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b750020"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b7501b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b750340"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b7504d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b750660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b7507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd30b740a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd30b740a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b740db0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b73f020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b73f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b73f340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b73f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b73f660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b73f7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b73f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd30b7313f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd30b7313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b731770"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b731900"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b731a90"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b731c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b731db0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b730020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7301b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b730340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd30b7253f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd30b7253f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b725770"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b725900"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b725a90"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b725c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b725db0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b724020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7241b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b724340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd30b72ed50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd30b72ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b72d100"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b72d290"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b72d420"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b72d5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b72d740"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b72d8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b72da60"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b72dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd30b72b3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd30b72b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b72b770"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b72b900"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b72ba90"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b72bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b72bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b72a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b72a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b72a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd30b734d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd30b734d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b733100"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b733290"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b733420"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b7335b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b733740"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b7338d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b733a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b733bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd30b728d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd30b728d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b727210"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b7273a0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b727530"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b7276c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b727850"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b7279e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b727b70"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b727d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd30b730710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd30b730710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b730a90"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b730c20"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b730db0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b72f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b72f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b72f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b72f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b72f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd30b724710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd30b724710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b724a90"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b724c20"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b724db0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b723020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7231b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b723340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7234d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b723660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd30b7387a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd30b7387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b738b20"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b738cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b738e40"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b735020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7351b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b735340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7354d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b735660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd30b72a710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd30b72a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b72aa90"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b72ac20"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b72adb0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b729020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7291b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b729340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7294d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b729660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd30b732020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd30b732020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b7323a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b732530"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b7326c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b732850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7329e0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b732b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b732d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b731020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd30b726100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd30b726100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b726480"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b726610"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b7267a0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b726930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b726ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b726c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b726de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b725020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd30b72fa30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd30b72fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b72fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b72e020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b72e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b72e340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b72e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b72e660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b72e7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b72e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd30b72c020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd30b72c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b72c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b72c530"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b72c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b72c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b72c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b72cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b72cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b72b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd30b735a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd30b735a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b735db0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b734020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b7341b0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b734340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7344d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b734660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7347f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b734980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd30b729a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd30b729a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b729db0"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b728020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b7281b0"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b728340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b7284d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b728660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b7287f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b728980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fd30b6192f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fd30b6192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b619670"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b619800"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b619990"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b619b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b619cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b619e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b60c020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b60c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd30b61a680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fd30b61a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b61aa00"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b61ab90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd30b61ad20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd30b619020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fd30b60a7a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fd30b60a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b60ab20"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b60acb0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b60ae40"/>
        <function-ref name="edge" scoped="" ref="0x7fd30b609020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fd30b6091b0"/>
        <function-ref name="enable" scoped="" ref="0x7fd30b609340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fd30b6094d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd30b609660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd30b60bb70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fd30b60bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b60a020"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b60a1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd30b60a340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd30b60a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd30b1a7e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b1a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a6410"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a65a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd30b1b1160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd30b1b1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1b14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd30b1aae50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b1aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a9210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd30b1a5880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b1a5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a5c00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd30b19c0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd30b19c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19c420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd30b1a30a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd30b1a30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a3420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd30b191500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd30b191500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b191880"/>
        <function-ref name="write" scoped="" ref="0x7fd30b191a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd30b193500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd30b193500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b193880"/>
        <function-ref name="write" scoped="" ref="0x7fd30b193a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd30b1af490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b1af490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1af810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd30b199880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd30b199880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b199c00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b199d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd30b194500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b194500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b194880"/>
        <function-ref name="write" scoped="" ref="0x7fd30b194a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd30b1a9e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd30b1a9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a8210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd30b1a8e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b1a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a7210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd30b19f880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd30b19f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19fc00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd30b1a00a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd30b1a00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a0420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd30b1a3880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b1a3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a3c00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd30b1b5a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b1b5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30b1b5e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30b1b2020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30b1b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd30b1aee00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b1aee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1ad1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd30b1ad490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd30b1ad490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1ad910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd30b198c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30b198c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1970a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b197230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd30b1adbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd30b1adbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd30b194ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30b194ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1930a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b193230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd30b1ae160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b1ae160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1ae4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd30b1990a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd30b1990a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b199420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1995b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd30b1a8670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30b1a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a89f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd30b1a9670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b1a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a99f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd30b1b2ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b1b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1b2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd30b19a0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30b19a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19a420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd30b19c880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd30b19c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19cc00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd30b19a880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30b19a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19ac00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd30b192ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b192ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1910a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b191230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd30b193ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd30b193ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1920a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b192230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd30b1a0880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd30b1a0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a0c00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd30b19b0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd30b19b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19b420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd30b195ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd30b195ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1940a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b194230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd30b1a2880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd30b1a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a2c00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd30b191ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd30b191ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b18f0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b18f230"/>
        <function-ref name="write" scoped="" ref="0x7fd30b18f3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b18f550"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b18f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd30b1b2480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd30b1b2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd30b1aa670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd30b1aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1aa9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd30b1a7670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30b1a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a79f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd30b19e0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd30b19e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19e420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd30b1a20a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b1a20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a2420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd30b19e880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd30b19e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19ec00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd30b1a6870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b1a6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a6bf0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd30b1b17b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd30b1b17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1b1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd30b1a50a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b1a50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a5420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b1b6e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b1b6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b1b51c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b1b5350"/>
        <function-ref name="request" scoped="" ref="0x7fd30b1b54e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b1b5670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b1b5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd30b1ac2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd30b1ac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1ac670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd30b1aa020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd30b1aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd30b195500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd30b195500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b195880"/>
        <function-ref name="write" scoped="" ref="0x7fd30b195a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd30b197ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b197ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1950a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b195230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd30b1ae7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30b1ae7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1aeb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd30b197500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30b197500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b197880"/>
        <function-ref name="write" scoped="" ref="0x7fd30b197a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd30b192500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd30b192500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b192880"/>
        <function-ref name="write" scoped="" ref="0x7fd30b192a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd30b19f0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30b19f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19f420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd30b19b880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd30b19b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b19bc00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b19bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd30b1b1e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd30b1b1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1af1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd30b1afae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b1afae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1afe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd30b1a10a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd30b1a10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a1420"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd30b1ac940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd30b1ac940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1accc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd30b1a1880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd30b1a1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1a1c00"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1a1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd30b1980a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd30b1980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b198820"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1989b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd30b18f9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b18f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b18fd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b18e020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b18e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b18e340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b18e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd30b5c52c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fd30b5c52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b5c5640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b5c57d0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b5c5960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b5c5af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b5c5c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd30b5c6350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5c6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30b5c66d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30b5c6860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30b5c69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd30b5c4540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fd30b5c4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b5c48c0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b5c4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd30b5c3370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fd30b5c3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b5c36f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b5c3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b5c74d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b5c74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b5c7850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b5c79e0"/>
        <function-ref name="request" scoped="" ref="0x7fd30b5c7b70"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b5c7d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b5c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd30b5c11d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fd30b5c11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b5c1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fd30b5ab2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b5ab2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b5ab660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b5ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd30b5bc890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fd30b5bc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b5bcc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b5bcda0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b5bb020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b5bb1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b5bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd30b5be660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b5be660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30b5be9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30b5beb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30b5bed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fd30b5b4c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd30b5b4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd30b5b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fd30b5abb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fd30b5abb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30b5b5020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30b5b51b0"/>
        <function-ref name="isState" scoped="" ref="0x7fd30b5b5340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30b5b54d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30b5b5660"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30b5b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd30b5b7060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd30b5b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b5b73e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b5b7570"/>
        <function-ref name="request" scoped="" ref="0x7fd30b5b7700"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b5b7890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b5b7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd30b5bbba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fd30b5bbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b5b9020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b5b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd30b5b9a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fd30b5b9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b5b9db0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b5b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30b5b5a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30b5b5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30b5b5df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30b5b3020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30b5b31b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30b5b3340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30b5b34d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b5b3660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30b5b37f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30b5b3e30"/>
        <function-ref name="set" scoped="" ref="0x7fd30b5b3980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30b5b3b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30b5b3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b5bd510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b5bd510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b5bd890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b5bda20"/>
        <function-ref name="request" scoped="" ref="0x7fd30b5bdbb0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b5bdd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b5bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fd30b5a8bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fd30b5a8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30b5a7020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30b5a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd30b5b88b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fd30b5b88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b5b8c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd30b54d770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd30b54d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30b54daf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30b54dc80"/>
        <function-ref name="isState" scoped="" ref="0x7fd30b54de10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30b549020"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30b5491b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30b549340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd30b5481d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd30b5481d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30b548550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30b5486e0"/>
        <function-ref name="isState" scoped="" ref="0x7fd30b548870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30b548a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30b548b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30b548d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30b543020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30b543020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30b5433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd30b543b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd30b543b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30b542020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30b5421b0"/>
        <function-ref name="isState" scoped="" ref="0x7fd30b542340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30b5424d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30b542660"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30b5427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd30b1dc020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b1dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b1dc3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b1dc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd30b52a8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd30b52a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd30b52ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b52bc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b52bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b52a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b52a1b0"/>
        <function-ref name="request" scoped="" ref="0x7fd30b52a340"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b52a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b52a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd30a4c85d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30a4c85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd30a4c8950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd30a4c8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd30a4c6020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd30a4c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30a4c63a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30a4c6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd30a4c67c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd30a4c67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd30a4c6b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd30a4c8d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd30a4c8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd30a4c7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30a4cb940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30a4cb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30a4cbcc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30a4cbe50"/>
        <function-ref name="request" scoped="" ref="0x7fd30a4c8020"/>
        <function-ref name="granted" scoped="" ref="0x7fd30a4c81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30a4c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd30a4c7410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd30a4c7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd30a4c7790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd30a4c7920"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd30a4c7ab0"/>
        <function-ref name="write" scoped="" ref="0x7fd30a4c7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd30b4c18e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b4c18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd30b4c1c60"/>
        <function-ref name="configure" scoped="" ref="0x7fd30b4c1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd30b4c0850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b4c0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b4c0bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b4c0d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd30b4bea40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd30b4bea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd30b4bedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd30b4c3110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd30b4c3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd30b4c3490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd30b4bf690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd30b4bf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b4bfa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b4bfba0"/>
        <function-ref name="request" scoped="" ref="0x7fd30b4bfd30"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b4be020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b4be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b4c8d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b4c8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b4c5180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b4c5310"/>
        <function-ref name="request" scoped="" ref="0x7fd30b4c54a0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b4c5630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b4c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd30b4c3790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd30b4c3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd30b4c3b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd30b4c3ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd30b4c3e30"/>
        <function-ref name="write" scoped="" ref="0x7fd30b4c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd30b4bab40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd30b4bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30b4bc020"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30b4bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd30b448250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b448250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd30b4485f0"/>
        <function-ref name="configure" scoped="" ref="0x7fd30b448780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd30b447c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd30b447c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b445020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b4451b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd30b4443e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd30b4443e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd30b444780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd30b448a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd30b448a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd30b448d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fd30b444a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd30b444a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd30b444dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd30b443020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd30b4431b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd30b443340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd30b4434d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd30b443660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd30b4437f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd30b443980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd30b443b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd30b443ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd30b443e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd30b442020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd30b4421b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd30b442440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd30b4425d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd30b442760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd30b4428f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fd30b442a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd30b442c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd30b442da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd30b441020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd30b4411b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd30b441340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd30b4414d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30b441660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd30b4419f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd30b441b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd30b441d10"/>
        <function-ref name="tx" scoped="" ref="0x7fd30b440020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd30b4401b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd30b440340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd30b4404d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd30b440660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd30b4407f0"/>
        <function-ref name="rx" scoped="" ref="0x7fd30b440980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd30b440b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd30b440ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd30b440e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd30b43f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd30b43f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30b43fc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30b43fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30b43e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30b43e1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30b43e340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30b43e4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30b43e660"/>
        <function-ref name="get" scoped="" ref="0x7fd30b43e7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30b43e980"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30b43d020"/>
        <function-ref name="set" scoped="" ref="0x7fd30b43eca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30b43eb10"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30b43ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd30b4455b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd30b4455b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b445950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b445ae0"/>
        <function-ref name="request" scoped="" ref="0x7fd30b445c70"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b445e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b444020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b449470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b449470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b449810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b4499a0"/>
        <function-ref name="request" scoped="" ref="0x7fd30b449b30"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b449cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b449e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd30b447060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd30b447060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd30b4473e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd30b447570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd30b447700"/>
        <function-ref name="write" scoped="" ref="0x7fd30b447890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd30b43f480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd30b43f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30b43f800"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30b43f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fd30b43d2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fd30b43d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30b43d670"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30b43d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fd30b42d2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd30b42d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b42d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd30b431d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd30b431d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30b4300e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30b430270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd30b435020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd30b435020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd30b4353a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd30b435530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd30b4356c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd30b435850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd30b4359e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd30b435b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd30b435d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd30b434020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd30b4341b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd30b434340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd30b4344d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd30b434660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd30b4347f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd30b434a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd30b434c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd30b434da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd30b433020"/>
        <function-ref name="isUart" scoped="" ref="0x7fd30b4331b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd30b433340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd30b4334d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd30b433660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd30b4337f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd30b433980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd30b433b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30b433ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd30b432220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd30b4323b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd30b432540"/>
        <function-ref name="tx" scoped="" ref="0x7fd30b4326d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd30b432860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd30b4329f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd30b432b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd30b432d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd30b431020"/>
        <function-ref name="rx" scoped="" ref="0x7fd30b4311b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd30b431340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd30b4314d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd30b431660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd30b4317f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd30b431980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd30b3f3bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd30b3f3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b3f2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b3f21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b3f2340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b3f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b3f2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b3f27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b3f2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b3f2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b3f2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b3f2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b3f1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b3f11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b3f1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b3f15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b3f1760"/>
        <function-ref name="set" scoped="" ref="0x7fd30b3f18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b3f1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b3f24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b3f1c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b3f1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd30b4272d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd30b4272d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30b427650"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30b4277e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fd30b3f03e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fd30b3f03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b3f0760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b3f08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b3f0a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b3ee7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b3f0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b3ef020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b3ef1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b3ef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b3ef4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b3ef660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b3ef7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b3ef980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b3efb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b3efda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b3ee020"/>
        <function-ref name="set" scoped="" ref="0x7fd30b3ee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b3ee340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b3f0c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b3ee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b3ee660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fd30b3eebb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fd30b3eebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b3ed020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b3ed1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b3ed340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b3eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b3ed660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b3ed7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b3ed980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b3edb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b3edca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b3ede30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b3ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b3ec1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b3ec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b3ec5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b3ec760"/>
        <function-ref name="set" scoped="" ref="0x7fd30b3ec8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b3eca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b3ed4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b3ecc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b3ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fd30b42c700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd30b42c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd30b42ca80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd30b42cc10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd30b42cda0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd30b42b020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd30b42b1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd30b42b340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd30b42b4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd30b42b660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd30b42b7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd30b42b980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd30b42bb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd30b42bca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd30b42be30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd30b42a120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd30b42a2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd30b42a440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd30b42a5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fd30b42a760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd30b42a8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd30b42aa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd30b42ac10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd30b42ada0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd30b429020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd30b4291b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30b429340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd30b4296d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd30b429860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd30b4299f0"/>
        <function-ref name="tx" scoped="" ref="0x7fd30b429b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd30b429d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd30b428020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd30b4281b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd30b428340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd30b4284d0"/>
        <function-ref name="rx" scoped="" ref="0x7fd30b428660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd30b4287f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd30b428980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd30b428b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd30b428ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd30b428e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fd30b3fed10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fd30b3fed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd30b4240e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd30b424270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd30b424400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd30b424590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd30b424720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd30b4248b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd30b424a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd30b424bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30b424d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd30b423020"/>
        <function-ref name="getData" scoped="" ref="0x7fd30b4231b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd30b423340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd30b4234d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd30b423760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd30b4238f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fd30b423a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd30b423c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd30b423da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd30b3fc020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd30b3fc1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd30b3fc340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd30b3fc4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd30b3fc660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd30b3fc7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd30b3fc980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd30b3fcd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd30b3fb020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd30b3fb1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd30b3fb340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd30b3fb4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd30b3fb660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd30b3fb7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd30b3fb980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd30b3fbb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd30b3fbca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd30b3fbe30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd30b3fa020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd30b3fa1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd30b3fa340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd30b3fa4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd30b3fa660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd30b3fa7f0"/>
        <function-ref name="setData" scoped="" ref="0x7fd30b3fa980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd30b3fab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd30b3faca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd30b3fae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd30b3f9020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd30b3f91b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd30b3f9340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd30b3f98d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd30b3f9a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd30b3f9bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd30b3f9d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd30b3f8020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd30b3f81b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd30b3f8340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd30b3f84d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd30b3f8660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd30b3f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fd30b3f53e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fd30b3f53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b3f5760"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b3f58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b3f5a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b3f37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b3f5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b3f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b3f41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b3f4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b3f44d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b3f4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b3f47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b3f4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b3f4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b3f4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b3f3020"/>
        <function-ref name="set" scoped="" ref="0x7fd30b3f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b3f3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b3f5c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b3f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b3f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd30b427c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd30b427c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b425020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd30b3f8bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd30b3f8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b3f7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b3f71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b3f7340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b3f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b3f7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b3f77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b3f7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b3f7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b3f7ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b3f7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b3f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b3f61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b3f6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b3f65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b3f6760"/>
        <function-ref name="set" scoped="" ref="0x7fd30b3f68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b3f6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b3f74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b3f6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b3f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd30a4bd020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30a4bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd30a4bd3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd30a4bd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fd30a4b7440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd30a4b7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30a4b77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd30a4b0760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30a4b0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd30a4b0ae0"/>
        <function-ref name="configure" scoped="" ref="0x7fd30a4b0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fd30a4b7a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd30a4b7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd30a4b7dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd30a4b6020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd30a4b61b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd30a4b6340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd30a4b64d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd30a4b6660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd30a4b67f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd30a4b6980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30a4b6b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd30a4b6ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fd30a4b6e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd30a4b5020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd30a4b51b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd30a4b5440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd30a4b55d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fd30a4b5760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd30a4b58f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd30a4b5a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd30a4b5c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd30a4b5da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd30a4b4020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd30a4b41b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd30a4b4340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd30a4b44d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd30a4b4660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd30a4b49f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd30a4b4b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd30a4b4d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd30a4b3020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd30a4b31b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd30a4b3340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd30a4b34d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd30a4b3660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd30a4b37f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd30a4b3980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd30a4b3b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd30a4b3ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd30a4b3e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd30a4b2020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd30a4b21b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd30a4b2340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd30a4b24d0"/>
        <function-ref name="setData" scoped="" ref="0x7fd30a4b2660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd30a4b27f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd30a4b2980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd30a4b2b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd30a4b2ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd30a4b2e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd30a4b1020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd30a4b15b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd30a4b1740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd30a4b18d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd30a4b1a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd30a4b1bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd30a4b1d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd30a4b0020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd30a4b01b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd30a4b0340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd30a4b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd30a4b8c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd30a4b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30a4b7020"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30a4b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30a4be340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30a4be340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30a4be6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30a4be850"/>
        <function-ref name="request" scoped="" ref="0x7fd30a4be9e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30a4beb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30a4bed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd30a4bc020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd30a4bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd30a4bc3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd30a4bc530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd30a4bc6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd30a4bc850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd30a4bc9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd30a4bcb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd30a4bcd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd30a4bb020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd30a4bb1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd30a4bb340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd30a4bb4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd30a4bb660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd30a4bb7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd30a4bba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd30a4bbc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd30a4bbda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd30a4ba020"/>
        <function-ref name="isUart" scoped="" ref="0x7fd30a4ba1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd30a4ba340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd30a4ba4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd30a4ba660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd30a4ba7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd30a4ba980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd30a4bab10"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30a4baca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd30a4b9220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd30a4b93b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd30a4b9540"/>
        <function-ref name="tx" scoped="" ref="0x7fd30a4b96d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd30a4b9860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd30a4b99f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd30a4b9b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd30a4b9d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd30a4b8020"/>
        <function-ref name="rx" scoped="" ref="0x7fd30a4b81b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd30a4b8340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd30a4b84d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd30a4b8660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd30a4b87f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd30a4b8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd30a4bd7c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30a4bd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd30a4bdb40"/>
        <function-ref name="userId" scoped="" ref="0x7fd30a4bdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd30b3452c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30b3452c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd30b345640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd30b3457d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd30b3438a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b3438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd30b343c20"/>
        <function-ref name="configure" scoped="" ref="0x7fd30b343db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd30b3484d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd30b3484d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30b348850"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30b3489e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b346020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b3463a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b346530"/>
        <function-ref name="request" scoped="" ref="0x7fd30b3466c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b346850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b3469e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd30b3473f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd30b3473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b347770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd30b345ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b345ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd30b345e50"/>
        <function-ref name="userId" scoped="" ref="0x7fd30b343020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd30b32fbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b32fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd30b32d020"/>
        <function-ref name="userId" scoped="" ref="0x7fd30b32d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd30b341d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd30b341d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30b340180"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30b340310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fd30b32f5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd30b32f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b32f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd30b340710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd30b340710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30b340ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fd30b340d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fd30b340d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd30b32f180"/>
        <function-ref name="txDone" scoped="" ref="0x7fd30b32f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd30b2afa60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30b2afa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd30b2afe00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd30b2ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd30b2ad790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30b2ad790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd30b2adb30"/>
        <function-ref name="configure" scoped="" ref="0x7fd30b2adcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd30b2ae270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd30b2ae270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b2ae5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fd30b2ae780"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b2ae910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b2aeaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd30b2aec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b2b0ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b2b0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b2af0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b2af230"/>
        <function-ref name="request" scoped="" ref="0x7fd30b2af3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b2af550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b2af6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fd30b2ac020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fd30b2ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd30b2ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd30b2aee80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30b2aee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd30b2ad220"/>
        <function-ref name="userId" scoped="" ref="0x7fd30b2ad3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30a444020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30a444020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30a4443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd30a444630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd30a444630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd30a4449b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd30a444b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd30a444cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd30a444e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd30a4416c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd30a4416c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd30a441a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd30a441bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd30a43f9d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd30a43f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd30a43fd70"/>
        <function-ref name="configure" scoped="" ref="0x7fd30a43e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd30a43e2b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd30a43e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd30a43e630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd30a43e7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd30a43e950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd30a43eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd30a441e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd30a441e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30a4401e0"/>
        <function-ref name="requested" scoped="" ref="0x7fd30a440370"/>
        <function-ref name="granted" scoped="" ref="0x7fd30a440500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30a440690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd30a440820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30a43ed30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30a43ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30a43c0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30a43c270"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30a43c400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30a43c590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30a43c720"/>
        <function-ref name="get" scoped="" ref="0x7fd30a43c8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30a43ca40"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30a43b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30a43cd60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30a43cbd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30a43b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30a442850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30a442850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30a442bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30a442d80"/>
        <function-ref name="request" scoped="" ref="0x7fd30a441020"/>
        <function-ref name="granted" scoped="" ref="0x7fd30a4411b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30a441340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fd30a43f2d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fd30a43f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd30a43f650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd30a440a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd30a440a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd30a440df0"/>
        <function-ref name="userId" scoped="" ref="0x7fd30a43f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd30a43b480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fd30a43b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30a43b800"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30a43b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fd30b2a2020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd30b2a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd30b2a23a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd30b2a2530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd30b2a26c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd30b2a2850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd30b2a29e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd30b2a2b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd30b2a2d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd30b2a1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30b2a11b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd30b2a1340"/>
        <function-ref name="getData" scoped="" ref="0x7fd30b2a14d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd30b2a1660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd30b2a17f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd30b2a1a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd30b2a1c10"/>
        <function-ref name="getIV" scoped="" ref="0x7fd30b2a1da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd30b2a0020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd30b2a01b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd30b2a0340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd30b2a04d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd30b2a0660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd30b2a07f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd30b2a0980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd30b2a0b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd30b2a0ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd30b29f220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd30b29f3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd30b29f540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd30b29f6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd30b29f860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd30b29f9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd30b29fb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd30b29fd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd30b29e020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd30b29e1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd30b29e340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd30b29e4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd30b29e660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd30b29e7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd30b29e980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd30b29eb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd30b29eca0"/>
        <function-ref name="setData" scoped="" ref="0x7fd30b29ee30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd30b29d020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd30b29d1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd30b29d340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd30b29d4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd30b29d660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd30b29d7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd30b29dd80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd30b29c020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd30b29c1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd30b29c340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd30b29c4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd30b29c660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd30b29c7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd30b29c980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd30b29cb10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd30b29cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fd30b292bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fd30b292bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd30b291020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd30b2911b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd30b291340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd30b2914d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd30b291660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd30b2917f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd30b291980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd30b291b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd30b291ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd30b291e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd30b290020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd30b2901b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd30b290340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd30b2905d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd30b290760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd30b2908f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd30b290a80"/>
        <function-ref name="isUart" scoped="" ref="0x7fd30b290c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd30b290da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd30b28f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd30b28f1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd30b28f340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd30b28f4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd30b28f660"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30b28f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd30b28fb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd30b28fd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd30b28e020"/>
        <function-ref name="tx" scoped="" ref="0x7fd30b28e1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd30b28e340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd30b28e4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd30b28e660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd30b28e7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd30b28e980"/>
        <function-ref name="rx" scoped="" ref="0x7fd30b28eb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd30b28eca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd30b28ee30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd30b28d020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd30b28d1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd30b28d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd30b28be40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd30b28be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b28a1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b28a370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b28a500"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b2881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b28a820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b28a9b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b28ab40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b28acd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b28ae60"/>
        <function-ref name="get" scoped="" ref="0x7fd30b289020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b2891b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b289340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b2894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b289760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b2898f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b289a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b289c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b28a690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b289da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b288020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fd30b29bd40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fd30b29bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd30b2980e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd30b298270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd30b298400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd30b298590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd30b298720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd30b2988b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd30b298a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd30b298bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30b298d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd30b297020"/>
        <function-ref name="getData" scoped="" ref="0x7fd30b2971b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd30b297340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd30b2974d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd30b297760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd30b2978f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fd30b297a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd30b297c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd30b297da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd30b296020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd30b2961b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd30b296340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd30b2964d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd30b296660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd30b2967f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd30b296980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd30b296d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd30b295020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd30b2951b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd30b295340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd30b2954d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd30b295660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd30b2957f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd30b295980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd30b295b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd30b295ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd30b295e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd30b294020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd30b2941b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd30b294340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd30b2944d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd30b294660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd30b2947f0"/>
        <function-ref name="setData" scoped="" ref="0x7fd30b294980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd30b294b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd30b294ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd30b294e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd30b293020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd30b2931b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd30b293340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd30b2938d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd30b293a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd30b293bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd30b293d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd30b292020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd30b2921b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd30b292340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd30b2924d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd30b292660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd30b2927f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd30b28d700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd30b28d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b28da80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b28dc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b28dda0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b28ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b28c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b28c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b28c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b28c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b28c7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b28c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b28cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b28cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b28ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b28b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b28b2b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b28b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b28b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b28c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b28b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b28b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd30b176c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b176c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b175210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd30b181da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd30b181da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b180180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd30b17ab50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b17ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b179020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd30b174670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b174670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1749f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b174b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd30b16de50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd30b16de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16c210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd30b174e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd30b174e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b173210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd30b1602f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd30b1602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b160670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b160800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd30b1622f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd30b1622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b162670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b162800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd30b17f120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b17f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd30b168670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd30b168670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1689f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b168b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd30b1642f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b1642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b164670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b164800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd30b179c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd30b179c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b178020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd30b178c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b178c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b176020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd30b16e670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd30b16e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd30b170e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd30b170e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16f210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd30b173670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b173670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1739f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b173b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd30b182760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b182760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30b182ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30b182c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30b182e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd30b17daa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b17daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd30b17c120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd30b17c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd30b167a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30b167a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b167df0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b166020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd30b17c870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd30b17c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd30b164ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30b164ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b164e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b162020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd30b17fdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b17fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd30b169e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd30b169e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b168210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd30b178480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30b178480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b178800"/>
        <function-ref name="write" scoped="" ref="0x7fd30b178990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd30b179480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b179480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b179800"/>
        <function-ref name="write" scoped="" ref="0x7fd30b179990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd30b181750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b181750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b181ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd30b16be50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30b16be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b169210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd30b16c670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd30b16c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd30b169670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30b169670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1699f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b169b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd30b161ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b161ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b161e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b160020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd30b162ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd30b162ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b162e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd30b16f670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd30b16f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd30b16ce50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd30b16ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16b210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd30b165ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd30b165ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b165e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b164020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd30b172670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd30b172670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1729f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b172b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd30b160ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd30b160ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b160e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b15f020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b15f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b15f340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b15f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd30b181100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd30b181100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b181480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd30b17a370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd30b17a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b17a6f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b17a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd30b176480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30b176480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b176800"/>
        <function-ref name="write" scoped="" ref="0x7fd30b176990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd30b16ee50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd30b16ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16d210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd30b173e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b173e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b172210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd30b16d670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd30b16d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd30b175670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b175670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1759f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b175b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd30b180450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd30b180450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1807d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd30b175e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b175e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b174210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b183a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b183a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b183e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b182020"/>
        <function-ref name="request" scoped="" ref="0x7fd30b1821b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b182340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b1824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd30b17b020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd30b17b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd30b17bcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd30b17bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd30b1652f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd30b1652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b165670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b165800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd30b166ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b166ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b166e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b165020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd30b17d450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30b17d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd30b1662f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30b1662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b166670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b166800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd30b1612f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd30b1612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b161670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b161800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd30b16fe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30b16fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16e210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd30b16b670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd30b16b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b16b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b16bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd30b180aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd30b180aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b180e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd30b17f770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b17f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd30b172e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd30b172e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b170210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd30b17b670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd30b17b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b17b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd30b170670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd30b170670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1709f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b170b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd30b168e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd30b168e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b167610"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1677a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd30b15f7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b15f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b15fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b15fcb0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b15fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b15e020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b15e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd30b14ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30b14ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b149210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd30b155da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd30b155da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b153180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd30b14db50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30b14db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b14c020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b14c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd30b147670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b147670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1479f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b147b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd30b140e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd30b140e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13f210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd30b147e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd30b147e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b146210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd30b1342f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd30b1342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b134670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b134800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd30b1362f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd30b1362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b136670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b136800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd30b152120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b152120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1524a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd30b13c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd30b13c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd30b1372f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b1372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b137670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b137800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd30b14cc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd30b14cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b14b020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b14b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd30b14bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b14bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b14a020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b14a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd30b142670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd30b142670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1429f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b142b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd30b144e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd30b144e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b143210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd30b146670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd30b146670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1469f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b146b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd30b156760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b156760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30b156ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30b156c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30b156e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd30b151aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b151aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b151e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd30b150120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd30b150120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1505a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd30b13ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30b13ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13bdf0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b139020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd30b150870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd30b150870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b150bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd30b137ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30b137ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b137e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b136020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd30b152dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30b152dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b151180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd30b13de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd30b13de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13c210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd30b14b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30b14b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b14b800"/>
        <function-ref name="write" scoped="" ref="0x7fd30b14b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd30b14c480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b14c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b14c800"/>
        <function-ref name="write" scoped="" ref="0x7fd30b14c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd30b155750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd30b155750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b155ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd30b13ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30b13ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13d210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd30b13f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd30b13f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd30b13d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30b13d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd30b135ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b135ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b135e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b134020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd30b136ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd30b136ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b136e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b135020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd30b143670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd30b143670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1439f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b143b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd30b13fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd30b13fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13e210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd30b138ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd30b138ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b138e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b137020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd30b145670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd30b145670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1459f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b145b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd30b134ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd30b134ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b134e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b132020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1321b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b132340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b1324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd30b155100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd30b155100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b155480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd30b14d370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd30b14d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b14d6f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b14d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd30b14a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30b14a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b14a800"/>
        <function-ref name="write" scoped="" ref="0x7fd30b14a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd30b142e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd30b142e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b140210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd30b146e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd30b146e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b145210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd30b140670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd30b140670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1409f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b140b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd30b149670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd30b149670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1499f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b149b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd30b153450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd30b153450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1537d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd30b149e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b149e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b147210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30b1579e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30b1579e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b157d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b156020"/>
        <function-ref name="request" scoped="" ref="0x7fd30b1561b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b156340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b1564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd30b14f020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd30b14f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b14f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd30b14fcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd30b14fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b14d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd30b1382f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd30b1382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b138670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b138800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd30b139ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd30b139ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b139e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30b138020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd30b151450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30b151450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b1517d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd30b1392f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30b1392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b139670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b139800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd30b1352f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd30b1352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b135670"/>
        <function-ref name="write" scoped="" ref="0x7fd30b135800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd30b143e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30b143e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b142210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd30b13e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd30b13e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd30b153aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd30b153aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b153e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd30b152770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd30b152770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b152af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd30b145e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd30b145e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b144210"/>
        <function-ref name="write" scoped="" ref="0x7fd30b1443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd30b14f670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd30b14f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b14f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd30b144670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd30b144670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1449f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b144b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd30b13ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd30b13ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b13b610"/>
        <function-ref name="write" scoped="" ref="0x7fd30b13b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd30b1327a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b1327a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b132b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b132cb0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b132e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b131020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b1311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fd30b12ab20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd30b12ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd30b127020"/>
        <function-ref name="changed" scoped="" ref="0x7fd30b1271b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd30b127340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd30b1274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fd30b129d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd30b129d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd30b1130e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fd30b10e310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd30b10e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd30b10e690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fd30b10b880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fd30b10b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b10bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fd30b100020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fd30b100020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b1003a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fd30b0f6bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fd30b0f6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b0fa020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b0fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fd30b0fa530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fd30b0fa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd30b0fa8b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b0faa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fd30b0fb140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fd30b0fb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b0fb4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fd30b0ffc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fd30b0ffc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b0e6020"/>
        <function-ref name="write" scoped="" ref="0x7fd30b0e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fd30b0e6540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fd30b0e6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b0e68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b0e6a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b0e6be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b0e6d70"/>
        <function-ref name="get" scoped="" ref="0x7fd30b0e5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b0e51b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b0e5340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b0e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fd30b0dd950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fd30b0dd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd30b0e0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fd30b0e2150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fd30b0e2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b0e24d0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b0e2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fd30b0e29f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fd30b0e29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b0e2d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b0e1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b0e11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b0e1340"/>
        <function-ref name="get" scoped="" ref="0x7fd30b0e14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b0e1660"/>
        <function-ref name="set" scoped="" ref="0x7fd30b0e17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b0e1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fd30b0e4ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fd30b0e4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd30b0bcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fd30b0baa90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fd30b0baa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd30b0b98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd30b0aa020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30b0aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b0aae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b0a8800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b0a8340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b0a8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fd30b0a4530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd30b0a4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b0a33d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b0a3d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b0a3890"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b0a1260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd30b09d020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd30b09d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30b09d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd30b09d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd30b09d6c0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b09d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd30b09d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b09db70"/>
        <function-ref name="getMode" scoped="" ref="0x7fd30b09dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b09c020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b09c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd30b09c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd30b09c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd30b0a0e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30b0a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c154640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd30c1549b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b09fca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30b09e670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30b09e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30b09eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fd30b0e7590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fd30b0e7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b0e7910"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b0e7aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b0e7c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b0e7dc0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b097020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b0971b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b097340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b0974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd30b095c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd30b095c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b094020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b0941b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd30b094340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd30b092020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b094660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b0947f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd30b094980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fd30b094b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b094ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b094e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fd30b093020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd30b0931b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fd30b093340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd30b0935d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fd30b093760"/>
        <function-ref name="set" scoped="" ref="0x7fd30b0938f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd30b093a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fd30b093c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b0944d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd30b093da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd30b0969e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd30b0969e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b096d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b095020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b0951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b095340"/>
        <function-ref name="get" scoped="" ref="0x7fd30b0954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b095660"/>
        <function-ref name="set" scoped="" ref="0x7fd30b0957f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b095980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd30b08d1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd30b08d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd30b08d530"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b08d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd30b07ecb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b07ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30b07d0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30b07d230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30b07d3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30b07d550"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30b07d6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30b07d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd30b07a990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd30b07a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd30b07ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fd30b07e020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd30b07e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b07e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b07e530"/>
        <function-ref name="modify" scoped="" ref="0x7fd30b07e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b07e850"/>
        <function-ref name="resend" scoped="" ref="0x7fd30b07e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd30b0816c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd30b0816c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd30b081a40"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b081bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd30b07c150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd30b07c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd30b07c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd30b070970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30b070970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30b070cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30b070e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30b06f030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30b06f1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30b06f350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30b06f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd30b068950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd30b068950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30b066020"/>
        <function-ref name="clear" scoped="" ref="0x7fd30b066750"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30b067780"/>
        <function-ref name="set" scoped="" ref="0x7fd30b066e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd30b04f020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30b04f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b04f3a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b04f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd30b04f890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd30b04f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b04fc10"/>
        <function-ref name="write" scoped="" ref="0x7fd30b04fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd30b06f900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd30b06f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd30b06fc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fd30b052530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd30b052530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b0528b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fd30b061880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd30b061880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd30b061c00"/>
        <function-ref name="disable" scoped="" ref="0x7fd30b061d90"/>
        <function-ref name="captured" scoped="" ref="0x7fd30b060020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd30b0601b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fd30b06eae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fd30b06eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30b06a390"/>
        <function-ref name="fired" scoped="" ref="0x7fd30b06c360"/>
        <function-ref name="startAt" scoped="" ref="0x7fd30b06cce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30b06c820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd30b06a850"/>
        <function-ref name="start" scoped="" ref="0x7fd30b06d970"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b06de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd30b06ad00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30b06ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30b0690a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30b069230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30b0693c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30b069550"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30b0696e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30b069870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fd30b054550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30b054550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b0548d0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b054a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd30b054e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd30b054e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b0531c0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b053350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fd30b048d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd30b048d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30b04b0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd30b04b270"/>
        <function-ref name="sfd" scoped="" ref="0x7fd30b04b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30b071bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30b071bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30b070020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b0701b0"/>
        <function-ref name="modify" scoped="" ref="0x7fd30b070340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30b0704d0"/>
        <function-ref name="resend" scoped="" ref="0x7fd30b070660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fd30b056d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30b056d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30b0550e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30b055270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30b055400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fd30b052c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30b052c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b051020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd30b059820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd30b059820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b059ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b059d30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b058020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b0581b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b058340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b0584d0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b058660"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b0587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30b072c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30b072c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30b071020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd30b069bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30b069bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30b068020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30b0681b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30b068340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fd30b05bbe0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd30b05bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30b061020"/>
        <function-ref name="isSet" scoped="" ref="0x7fd30b0611b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30b061340"/>
        <function-ref name="set" scoped="" ref="0x7fd30b0614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd30b0513e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30b0513e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b051960"/>
        <function-ref name="write" scoped="" ref="0x7fd30b051af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd30b056020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd30b056020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30b0563a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30b056530"/>
        <function-ref name="request" scoped="" ref="0x7fd30b0566c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30b056850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30b0569e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fd30b060500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fd30b060500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b060980"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b060b10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b060ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b060e30"/>
        <function-ref name="get" scoped="" ref="0x7fd30b059020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b0591b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b059340"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b0594d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd30b04d130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd30b04d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b04d4b0"/>
        <function-ref name="write" scoped="" ref="0x7fd30b04d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fd30b04d9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd30b04d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b04dd40"/>
        <function-ref name="write" scoped="" ref="0x7fd30b04c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd30b0536d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd30b0536d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b053a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fd30b058b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fd30b058b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30b057020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30b0571b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30b057340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30b0574d0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b057660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30b0577f0"/>
        <function-ref name="set" scoped="" ref="0x7fd30b057980"/>
        <function-ref name="clr" scoped="" ref="0x7fd30b057b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30b04b6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30b04b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30b04ba40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30b04bbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30b04bd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30b04a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30b04a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd30b04a340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30b04a4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30b04ab10"/>
        <function-ref name="set" scoped="" ref="0x7fd30b04a660"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30b04a7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30b04a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd30b0505e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30b0505e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30b050960"/>
        <function-ref name="write" scoped="" ref="0x7fd30b050af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd30b071320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd30b071320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd30b0716a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30b071830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fd30b055780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd30b055780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30b055b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30b055c90"/>
        <function-ref name="write" scoped="" ref="0x7fd30b055e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30b054020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30b0541b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fd30b053de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd30b053de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b052180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fd30b051e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd30b051e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30b050220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd30b06e0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd30b06e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd30b06e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd30afaec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30afaec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afad210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd30afb7020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd30afb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd30afb1c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30afb1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afb0020"/>
        <function-ref name="write" scoped="" ref="0x7fd30afb01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd30afab670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30afab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afab9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afabb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd30afa4e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd30afa4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa3210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd30afabe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd30afabe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afaa210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afaa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd30af982f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd30af982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af98670"/>
        <function-ref name="write" scoped="" ref="0x7fd30af98800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd30af9a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd30af9a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9a670"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd30afb6370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd30afb6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb66f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd30afa0670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd30afa0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa09f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd30af9b2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30af9b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9b670"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd30afb0c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd30afb0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afaf020"/>
        <function-ref name="write" scoped="" ref="0x7fd30afaf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd30afafc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd30afafc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afae020"/>
        <function-ref name="write" scoped="" ref="0x7fd30afae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd30afa6670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd30afa6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa69f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd30afa8e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd30afa8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa7210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd30afaa670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd30afaa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afaa9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afaab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd30afba8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30afba8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30afbac70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30afbae00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30afb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd30afb5d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30afb5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd30afb4370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd30afb4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd30af9fa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30af9fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9fdf0"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd30afb4ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd30afb4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd30af9bad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30af9bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9be50"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd30afb5060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30afb5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb53e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd30afa1e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd30afa1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa0210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd30afaf480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30afaf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afaf800"/>
        <function-ref name="write" scoped="" ref="0x7fd30afaf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd30afb0480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30afb0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afb0800"/>
        <function-ref name="write" scoped="" ref="0x7fd30afb0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd30afb9940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd30afb9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd30afa2e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30afa2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa1210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd30afa3670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd30afa3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa39f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd30afa1670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30afa1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa19f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd30af99ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd30af99ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af99e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30af98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd30af9aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd30af9aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9ae50"/>
        <function-ref name="write" scoped="" ref="0x7fd30af99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd30afa7670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd30afa7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa79f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd30afa3e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd30afa3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa2210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd30af9cad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd30af9cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9ce50"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd30afa9670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd30afa9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa99f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd30af98ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd30af98ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30af98e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30af96020"/>
        <function-ref name="write" scoped="" ref="0x7fd30af961b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30af96340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30af964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd30afb92f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd30afb92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd30afb1490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd30afb1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afb1810"/>
        <function-ref name="write" scoped="" ref="0x7fd30afb19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd30afae480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30afae480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afae800"/>
        <function-ref name="write" scoped="" ref="0x7fd30afae990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd30afa6e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd30afa6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa4210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd30afaae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd30afaae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa9210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd30afa4670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd30afa4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa49f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd30afad670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd30afad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afad9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afadb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd30afb7670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd30afb7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd30afade50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30afade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afab210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30afbbc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30afbbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30afba020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30afba1b0"/>
        <function-ref name="request" scoped="" ref="0x7fd30afba340"/>
        <function-ref name="granted" scoped="" ref="0x7fd30afba4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30afba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd30afb3160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd30afb3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd30afb3e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd30afb3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd30af9c2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd30af9c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9c670"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd30af9dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd30af9dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9de50"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd30afb56b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30afb56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb5a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd30af9d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30af9d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9d670"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd30af992f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd30af992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af99670"/>
        <function-ref name="write" scoped="" ref="0x7fd30af99800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd30afa7e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30afa7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa6210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd30afa2670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd30afa2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa29f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd30afb7cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd30afb7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd30afb69c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd30afb69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb6d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd30afa9e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd30afa9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa8210"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd30afb37b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd30afb37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30afb3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd30afa8670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd30afa8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30afa89f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30afa8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd30afa0e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd30afa0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af9f610"/>
        <function-ref name="write" scoped="" ref="0x7fd30af9f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd30af967a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd30af967a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30af96b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30af96cb0"/>
        <function-ref name="write" scoped="" ref="0x7fd30af96e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30af95020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30af951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd30af8adf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd30af8adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30af871c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd30af87350"/>
        <function-ref name="sfd" scoped="" ref="0x7fd30af874e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30af877c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30af877c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30af87b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd30af86020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd30af86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd30af863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd30af8a5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd30af8a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd30af8a940"/>
        <function-ref name="stop" scoped="" ref="0x7fd30af8aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fd30af7e380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fd30af7e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30af7e700"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30af7e890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30af7ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30af7ebb0"/>
        <function-ref name="get" scoped="" ref="0x7fd30af7ed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30af7d020"/>
        <function-ref name="set" scoped="" ref="0x7fd30af7d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30af7d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd30af76b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd30af76b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd30af75020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd30af751b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd30af75340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd30af754d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd30af75660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd30af757f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd30af75980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd30af75b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd30af75ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd30af75e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd30af74020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd30af741b0"/>
        <function-ref name="sync" scoped="" ref="0x7fd30af74340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd30af745d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd30af74760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fd30af5f9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fd30af5f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30af5fd50"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30af5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd30af74d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd30af74d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30af72330"/>
        <function-ref name="clear" scoped="" ref="0x7fd30af72a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30af73ba0"/>
        <function-ref name="set" scoped="" ref="0x7fd30af71210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fd30af7d6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fd30af7d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30af7da30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30af7dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30af7dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30af7c020"/>
        <function-ref name="get" scoped="" ref="0x7fd30af7c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30af7c340"/>
        <function-ref name="set" scoped="" ref="0x7fd30af7c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd30af7c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd30af6fcb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30af6fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af6e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30af6e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd30af6e590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd30af6e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af6e910"/>
        <function-ref name="write" scoped="" ref="0x7fd30af6eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fd30af6d6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd30af6d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af6da50"/>
        <function-ref name="write" scoped="" ref="0x7fd30af6dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd30af78330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af78330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30af786b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30af78840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30af789d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30af78b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30af78cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30af78e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd30af81550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd30af81550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30af818d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd30af81a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fd30af81bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fd30af793a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd30af793a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30af79720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd30af7f020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd30af7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd30af7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd30af7f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd30af7f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd30af7f850"/>
        <function-ref name="get" scoped="" ref="0x7fd30af7f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd30af7fb70"/>
        <function-ref name="set" scoped="" ref="0x7fd30af7fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd30af7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fd30af6c020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30af6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af6c3a0"/>
        <function-ref name="write" scoped="" ref="0x7fd30af6c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30af82620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30af82620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30af829a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd30af761e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30af761e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30af76560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30af766f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30af76880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30af80020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30af80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30af803a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd30af7b6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd30af7b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30af7ba60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30af7bbf0"/>
        <function-ref name="request" scoped="" ref="0x7fd30af7bd80"/>
        <function-ref name="granted" scoped="" ref="0x7fd30af7a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30af7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd30af6ee00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd30af6ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af6d1c0"/>
        <function-ref name="write" scoped="" ref="0x7fd30af6d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fd30af7a530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd30af7a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30af7a8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30af7aa40"/>
        <function-ref name="write" scoped="" ref="0x7fd30af7abd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30af7ad60"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30af79020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd30af6c8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd30af6c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30af6ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd30af807c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd30af807c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd30af80b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30af6b150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30af6b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30af6b4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30af6b660"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30af6b7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30af6b980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30af6bb10"/>
        <function-ref name="get" scoped="" ref="0x7fd30af6bca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30af6be30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30af6a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd30af6a020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30af6a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30af6a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd30af6f3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30af6f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30af6f760"/>
        <function-ref name="write" scoped="" ref="0x7fd30af6f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fd30af71b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd30af71b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30af6f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fd30af7ca50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd30af7ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd30af7cdd0"/>
        <function-ref name="disable" scoped="" ref="0x7fd30af7b020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd30af7b1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd30af7b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fd30af79ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30af79ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30af78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd30af82ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd30af82ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd30af810a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30af81230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd30aeffa70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30aeffa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd30aeffdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd30af03670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30af03670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30af039f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30af03b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30af03d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30af00020"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30af001b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30af00340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd30aefe550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30aefe550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30aefcb00"/>
        <function-ref name="clear" scoped="" ref="0x7fd30aefb2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30aefc3d0"/>
        <function-ref name="set" scoped="" ref="0x7fd30aefb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd30aeff0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aeff0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30aeff440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30aeff5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30aeff760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd30aef6480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd30aef6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30aef6800"/>
        <function-ref name="isSet" scoped="" ref="0x7fd30aef6990"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30aef6b20"/>
        <function-ref name="set" scoped="" ref="0x7fd30aef6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd30aefa660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd30aefa660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30aef8ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fd30aef7460"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30aef85b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30aef7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd30af006e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd30af006e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30af00a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30af00bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30af00d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd30aeef020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd30aeef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd30aeef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd30aef4d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30aef4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30aef10e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30aef1270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30aef1400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30aef1590"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30aef1720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30aef18b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd30aee64a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30aee64a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30aee6820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30aee69b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30aee6b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30aee6cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30aee6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd30aeefa80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd30aeefa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30aeed020"/>
        <function-ref name="clear" scoped="" ref="0x7fd30aeed750"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30aeee8d0"/>
        <function-ref name="set" scoped="" ref="0x7fd30aeede80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd30aef0640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30aef0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30aef09c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30aef0b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30aef0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd30aee88b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd30aee88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30aee8c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fd30aee8dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30aee6020"/>
        <function-ref name="set" scoped="" ref="0x7fd30aee61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fd30aee53b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd30aee53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30aee4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fd30aee46e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd30aee46e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30aee33d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd30aeecaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd30aeecaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd30aee90d0"/>
        <function-ref name="clear" scoped="" ref="0x7fd30aee9800"/>
        <function-ref name="isValid" scoped="" ref="0x7fd30aeea970"/>
        <function-ref name="set" scoped="" ref="0x7fd30aee8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd30aef1c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd30aef1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30aef0020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30aef01b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30aef0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd30ae93020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd30ae93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30ae93c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd30ae92300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd30ae92300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd30c154200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd30ae91150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd30ae91ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd30ae91610"/>
        <function-ref name="overflow" scoped="" ref="0x7fd30ae8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd30ae8d450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd30ae8d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd30c155680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd30c1559f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd30ae8aa20"/>
        <function-ref name="fired" scoped="" ref="0x7fd30ae8b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd30ae8bda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd30ae8b920"/>
        <function-ref name="getdt" scoped="" ref="0x7fd30ae884a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd30ae88020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd30ae8b4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd30ae8c090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd30ae8a410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd30ae8c560"/>
        <function-ref name="stop" scoped="" ref="0x7fd30ae8ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd30ae78c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd30ae78c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae77210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd30ae82020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd30ae82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd30ae7cc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd30ae7cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae7a020"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd30ae76670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd30ae76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae769f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae76b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd30ae6fe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd30ae6fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6e210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd30ae76e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd30ae76e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae75210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd30ae622f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd30ae622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae62670"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae62800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd30ae642f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd30ae642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae64670"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae64800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd30ae80370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd30ae80370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae806f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd30ae6a670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd30ae6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd30ae652f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd30ae652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae65670"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae65800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd30ae7ac60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd30ae7ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae79020"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd30ae79c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd30ae79c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae78020"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd30ae70670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd30ae70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae709f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd30ae72e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd30ae72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae71210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd30ae75670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd30ae75670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae759f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae75b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd30ae84970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd30ae84970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd30ae84cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd30ae84e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd30ae83030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd30ae7fd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd30ae7fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd30ae7e370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd30ae7e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd30ae69a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd30ae69a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae69df0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd30ae7eac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd30ae7eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd30ae65ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd30ae65ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae65e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd30ae7f060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd30ae7f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd30ae6be50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd30ae6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6a210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd30ae79480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd30ae79480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae79800"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae79990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd30ae7a480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd30ae7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae7a800"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae7a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd30ae83950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd30ae83950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae83cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd30ae6ce50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd30ae6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6b210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd30ae6e670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd30ae6e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd30ae6b670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd30ae6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd30ae63ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd30ae63ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae63e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd30ae64ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd30ae64ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae64e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd30ae71670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd30ae71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae719f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd30ae6ee50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd30ae6ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6c210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd30ae67ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd30ae67ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae67e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd30ae73670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd30ae73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae739f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae73b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd30ae62ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd30ae62ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30ae62e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30ae61020"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae611b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30ae61340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30ae614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd30ae83300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd30ae83300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae83680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd30ae7c490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd30ae7c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae7c810"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae7c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd30ae78480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd30ae78480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae78800"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae78990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd30ae70e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd30ae70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6f210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd30ae75e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd30ae75e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae73210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd30ae6f670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd30ae6f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd30ae77670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd30ae77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae779f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd30ae82670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd30ae82670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae829f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd30ae77e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd30ae77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae76210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30ae85d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30ae85d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30ae840a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30ae84230"/>
        <function-ref name="request" scoped="" ref="0x7fd30ae843c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd30ae84550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30ae846e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd30ae7d160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd30ae7d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd30ae7de00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd30ae7de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd30ae672f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd30ae672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae67670"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae67800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd30ae68ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd30ae68ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae68e50"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd30ae7f6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd30ae7f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd30ae682f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd30ae682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae68670"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae68800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd30ae632f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd30ae632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae63670"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae63800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd30ae71e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd30ae71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae70210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd30ae6c670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd30ae6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae6c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd30ae82cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd30ae82cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae800a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd30ae809c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd30ae809c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae80d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd30ae73e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd30ae73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae72210"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd30ae7d7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd30ae7d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd30ae7db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd30ae72670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd30ae72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae729f0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd30ae6ae50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd30ae6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd30ae69610"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae697a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd30ae617a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd30ae617a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd30ae61b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd30ae61cb0"/>
        <function-ref name="write" scoped="" ref="0x7fd30ae61e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd30ae60020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd30ae601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd30ae37a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd30ae37a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd30ae37da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd30ae36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd30ae35920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fd30ae35920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30ae37560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30ae3b990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30ae3b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30ae3bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd30ae2ca20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd30ae2ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd30ae2cda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd30ae2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd30ae2e940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fd30ae2e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30ae2c560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30ae2e080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30ae2e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30ae2e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd30ae39aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd30ae39aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30ae39e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30ae33020"/>
        <function-ref name="isState" scoped="" ref="0x7fd30ae331b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30ae33340"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30ae334d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30ae33660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd30ae15020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd30ae15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ae153a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ae15530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ae156c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ae15850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ae159e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30ae16220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30ae16220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ae165a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ae16730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ae168c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ae16a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ae16be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd30ae11e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd30ae11e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ae10210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ae103a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ae10530"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ae106c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ae10850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30ae14a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30ae14a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ae14d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ae11020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ae111b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ae11340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ae114d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd30ae0f8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd30ae0f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd30ae0fc70"/>
        <function-ref name="rand32" scoped="" ref="0x7fd30ae0fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30ae11750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30ae11750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30ae11ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd30ae0e170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30ae0e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ae0e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30ae0e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30ae0e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fd30ae10ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd30ae10ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30ae10e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30ae0f020"/>
        <function-ref name="isState" scoped="" ref="0x7fd30ae0f1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30ae0f340"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30ae0f4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30ae0f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd30ae12690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd30ae12690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30ae12a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30ae12ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fd30ae12d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30adfc020"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30adfc1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30adfc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd30adf6950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd30adf6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adf6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30adf9aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30adf9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adf9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd30adf6200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd30adf6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adf6580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd30adf13f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd30adf13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adf1770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30adf2b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30adf2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30adf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30adf5e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30adf5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adf21e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd30adf1a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30adf1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adf1df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30adf0020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30adf01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd30adf2570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd30adf2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adf28f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd30adc2020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd30adc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd30adc26b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd30adc26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30adc2a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adc2bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adc2d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30adc1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30adc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30adc78e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30adc78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30adc7c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adc7df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adc6020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30adc61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30adc6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd30adc6c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd30adc6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30adc50a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adc5230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adc53c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30adc5550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30adc56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30adc65e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30adc65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adc6960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30adc8be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30adc8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30adc7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30adc71b0"/>
        <function-ref name="request" scoped="" ref="0x7fd30adc7340"/>
        <function-ref name="granted" scoped="" ref="0x7fd30adc74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30adc7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd30adc5a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30adc5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adc5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd30adc4170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd30adc4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30adc44f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30adc4680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adc4810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adc49a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30adc4b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd30adb9d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd30adb9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30adb8180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adb8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adb84a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30adb8630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30adb87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd30adb8b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd30adb8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fd30ad89db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fd30ad89db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30ad88180"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30ad88310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd30adb72f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30adb72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30adb7670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30adb7800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30adb7990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30adb7b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30adb7cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30adb7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd30adbba20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd30adbba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30adbbda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adba020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adba1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30adba340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30adba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd30adb6b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd30adb6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd30adb4020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd30adb41b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd30adb4340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd30adb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd30adb6170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30adb6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adb64f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30adb6680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30adb6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd30adbb370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fd30adbb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adbb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd30adbd7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd30adbd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30adbdb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30adbdcc0"/>
        <function-ref name="request" scoped="" ref="0x7fd30adbde50"/>
        <function-ref name="granted" scoped="" ref="0x7fd30adbc020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30adbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd30adbc4d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fd30adbc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30adbc850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adbc9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adbcb70"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30adbcd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30adbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd30adba840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd30adba840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30adbabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd30adb9020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd30adb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30adb93a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30adb9530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30adb96c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30adb9850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30adb99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd30ad69dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd30ad69dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd30ad68180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd30ad68410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd30ad68410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd30ad68790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd30ad68920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd30ad68ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd30ad68c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd30ad5db80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd30ad5db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30ad5c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30ad5c1b0"/>
        <function-ref name="start" scoped="" ref="0x7fd30ad5c340"/>
        <function-ref name="stop" scoped="" ref="0x7fd30ad5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd30ad5b860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd30ad5b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ad5bbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad5bd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ad5a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ad5a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ad5a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd30ad5a690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd30ad5a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30ad5aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30ad61ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30ad61ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ad5e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad5e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ad5e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ad5e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ad5e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd30ad5d080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30ad5d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd30ad5d400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd30ad5d590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd30ad5d720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd30ad5d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fd30ad5c800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fd30ad5c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30ad5cb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30ad5cd10"/>
        <function-ref name="isState" scoped="" ref="0x7fd30ad5b020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30ad5b1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30ad5b340"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30ad5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd30ad5ad90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fd30ad5ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd30ad59180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd30ad59310"/>
        <function-ref name="start" scoped="" ref="0x7fd30ad594a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd30ad59630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30ad5e980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30ad5e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30ad5ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd30ad562d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd30ad562d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd30ad56650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd30ad567e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd30ad56970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd30ad56b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd30ad58580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd30ad58580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd30ad58900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd30ad58a90"/>
        <function-ref name="isState" scoped="" ref="0x7fd30ad58c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd30ad58db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd30ad57020"/>
        <function-ref name="forceState" scoped="" ref="0x7fd30ad571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd30ad48d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd30ad48d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ad47180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad47310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ad474a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ad47630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ad477c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30ad4b350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30ad4b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ad4b6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad4b860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ad4b9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ad4bb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ad4bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd30ad48020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd30ad48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd30ad483a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd30ad48530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd30ad486c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd30ad48850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd30ad489e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fd30ad431c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd30ad431c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30ad43540"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30ad436d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30ad43860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd30ad46410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd30ad46410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd30ad46790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd30ad46920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd30ad46ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd30ad46c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd30ad46dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd30ad23690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd30ad23690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30ad23a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd30ad25860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd30ad25860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ad25be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad25d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ad23020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ad231b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ad23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd30ad21610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd30ad21610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd30ad21990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd30ad21b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd30ad21cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd30ad21e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd30ad20020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd30ad201b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd30ad20340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd30ad204d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd30ad20660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd30ad207f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd30ad20980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd30ad20b10"/>
        <function-ref name="sync" scoped="" ref="0x7fd30ad20ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd30ad1f020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd30ad1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd30ad268b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd30ad268b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30ad26c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30ad26dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30ad25020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30ad251b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30ad25340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30ad254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd30ad27ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fd30ad27ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd30ad260a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd30ad1e1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fd30ad1e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd30ad1e570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd30ad1e700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd30ad1e890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd30ad1ea20"/>
        <function-ref name="setCca" scoped="" ref="0x7fd30ad1ebb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd30ad1ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd30ad28a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30ad28a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30ad28e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30ad27020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad271b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ad27340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30ad274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd30ad2b020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30ad2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ad2b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad2b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ad2b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ad2b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ad2b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd30ad2adf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd30ad2adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30ad291c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd30ad23ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd30ad23ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd30ad220a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd30ad22230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd30ad223c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd30ad22550"/>
        <function-ref name="getPower" scoped="" ref="0x7fd30ad226e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd30ad22870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd30ad1f4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd30ad1f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd30ad1f950"/>
        <function-ref name="changed" scoped="" ref="0x7fd30ad1fae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd30ad1fc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd30ad1fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd30ad22b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd30ad22b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ad21020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd30ad211b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd30ad21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30ad2a210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30ad2a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30ad2a590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd30ad1dd30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd30ad1dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd30ad1c0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd30ad1c270"/>
        <function-ref name="led1On" scoped="" ref="0x7fd30ad1c400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd30ad1c590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd30ad1c720"/>
        <function-ref name="get" scoped="" ref="0x7fd30ad1c8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd30ad1ca40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd30ad1b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd30ad1cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd30ad1cd60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd30ad1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd30ad29470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30ad29470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30ad297f0"/>
        <function-ref name="source" scoped="" ref="0x7fd30ad29980"/>
        <function-ref name="address" scoped="" ref="0x7fd30ad29b10"/>
        <function-ref name="destination" scoped="" ref="0x7fd30ad29ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30ad29e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30ad28020"/>
        <function-ref name="type" scoped="" ref="0x7fd30ad281b0"/>
        <function-ref name="setType" scoped="" ref="0x7fd30ad28340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30ad284d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30ad28660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30ad287f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fd30ad1d0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fd30ad1d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd30ad1d470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd30ad1d600"/>
        <function-ref name="request" scoped="" ref="0x7fd30ad1d790"/>
        <function-ref name="granted" scoped="" ref="0x7fd30ad1d920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd30ad1dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd30ac05020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30ac05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ac053a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ac05530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ac056c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ac05850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ac059e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd30ac05c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30ac05c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30ac04020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30ac041b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ac04340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ac044d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30ac04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd30ac048b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30ac048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30ac04c30"/>
        <function-ref name="source" scoped="" ref="0x7fd30ac04dc0"/>
        <function-ref name="address" scoped="" ref="0x7fd30ac03020"/>
        <function-ref name="destination" scoped="" ref="0x7fd30ac031b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30ac03340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30ac034d0"/>
        <function-ref name="type" scoped="" ref="0x7fd30ac03660"/>
        <function-ref name="setType" scoped="" ref="0x7fd30ac037f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30ac03980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30ac03b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30ac03ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd30ac02020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd30ac02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30ac023a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30ac02530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30ac026c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd30a2bebc0" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30a2bebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30a2bd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30a2bd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30a2bd340"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30a2bd4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30a2bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd30a2bd8b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30a2bd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30a2bdc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30a2bddc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30a2bb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30a2bb1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30a2bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd30a2bb590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30a2bb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30a2bb910"/>
        <function-ref name="source" scoped="" ref="0x7fd30a2bbaa0"/>
        <function-ref name="address" scoped="" ref="0x7fd30a2bbc30"/>
        <function-ref name="destination" scoped="" ref="0x7fd30a2bbdc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30a2ba020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30a2ba1b0"/>
        <function-ref name="type" scoped="" ref="0x7fd30a2ba340"/>
        <function-ref name="setType" scoped="" ref="0x7fd30a2ba4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30a2ba660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30a2ba7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30a2ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd30a2bac10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd30a2bac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd30a2b9020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd30a2b91b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd30a2b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd30a2b0640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30a2b0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30a2b09c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30a2b0b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30a2b0ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30a2b0e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30a2af030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fd30a2af2e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30a2af2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30a2af660"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30a2af7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30a2af980"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30a2afb10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30a2afca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd30a2ae020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30a2ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30a2ae3a0"/>
        <function-ref name="source" scoped="" ref="0x7fd30a2ae530"/>
        <function-ref name="address" scoped="" ref="0x7fd30a2ae6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fd30a2ae850"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30a2ae9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30a2aeb70"/>
        <function-ref name="type" scoped="" ref="0x7fd30a2aed00"/>
        <function-ref name="setType" scoped="" ref="0x7fd30a2ad020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30a2ad1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30a2ad340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30a2ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30ac6c930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30ac6c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ac6ccb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ac6ce40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ac69020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ac691b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ac69340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd30ac1a400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd30ac1a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ac1a7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ac1a930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ac1aac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ac1ac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ac1ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd30ac1cdf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd30ac1cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd30ac1b1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ac1b350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ac1b4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd30ac1b670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd30ac1b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd30ac17720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30ac17720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30ac17aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30ac17c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30ac17dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30ac16020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30ac161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7fd30ac1bb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7fd30ac1bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7fd30ac1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fd30ac16480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fd30ac16480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30ac16800"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30ac16990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fd30ac16c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fd30ac16c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd30ac15020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd30ac151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd30ac19060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30ac19060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30ac193e0"/>
        <function-ref name="source" scoped="" ref="0x7fd30ac19570"/>
        <function-ref name="address" scoped="" ref="0x7fd30ac19700"/>
        <function-ref name="destination" scoped="" ref="0x7fd30ac19890"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30ac19a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30ac19bb0"/>
        <function-ref name="type" scoped="" ref="0x7fd30ac19d40"/>
        <function-ref name="setType" scoped="" ref="0x7fd30ac17020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30ac171b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30ac17340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30ac174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd30abf8020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="MasterAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd30abf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd30abf83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd30abf8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd30abf86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd30abf8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd30abf89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd30abff910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="MasterAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd30abff910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd30abffc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd30abf8c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="MasterAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd30abf8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd30abf7020"/>
        <function-ref name="source" scoped="" ref="0x7fd30abf71b0"/>
        <function-ref name="address" scoped="" ref="0x7fd30abf7340"/>
        <function-ref name="destination" scoped="" ref="0x7fd30abf74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd30abf7660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd30abf77f0"/>
        <function-ref name="type" scoped="" ref="0x7fd30abf7980"/>
        <function-ref name="setType" scoped="" ref="0x7fd30abf7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd30abf7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd30abf7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd30abf6020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd30c14ae00" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd30c14ba50" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7fd30c13f020" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7fd30c13ce80" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7fd30c13cbc0" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7fd30c1411f0" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7fd30c143a00" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7fd30c13fdd0" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fd30c13f7e0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fd30c13fb40" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7fd30c13c2a0" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7fd30c13c020" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7fd30c13d840" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7fd30c13d5c0" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7fd30c1407c0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7fd30c143270" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7fd30c140020" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fd30c1419a0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fd30c141d00" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fd30c0fd020" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fd30c100270" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fd30c0fe840" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fd30c101b00" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fd30c1009e0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fd30c104d00" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fd30c101420" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fd30c0fe120" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd30c26e7e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd30c536700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fd30c194a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fd30c1921f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd30c1942b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd30c30c020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd30c892e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd30c5f4e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd30c5f4610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd30c5e8770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd30c5e6020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd30c09aa00" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd30c0991f0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd30c0999d0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd30c098940" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd30c095120" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd30c095930" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd30c098190" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd30c0944c0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd30c094240" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd30c09a270" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd30c097190" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd30c097920" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd30c08a270" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd30c08a9a0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd30c08c420" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd30c089820" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd30c08cb20" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd30c0890e0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd30c08d610" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd30c08dce0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd30c05f070" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd30c05f7c0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fd30c05a2e0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd30c05a060" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7fd30c059d30" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd30c062870" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd30c05e780" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fd30c058520" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7fd30c056020" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd30c058d70" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd30c05e020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd30c060870" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7fd30c056910" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fd30c05b020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7fd30c0595f0" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fd30c060070" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7fd30c05ab80" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd30c0659c0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fd30c05d020" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fd30c05b7c0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fd30c05d7e0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd30c062120" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30bdbc8c0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30bdbc8c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd30bdb37c0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd30bdb6020" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd30bdb5da0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd30bdb57d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd30bdb5b10" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd30bdb5020" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd30bdb18a0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd30bdb1020" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd30bdb6800" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd30bdb94d0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd30bdb9250" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd30bdb4dc0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd30bdb47f0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd30bdb4b30" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd30bdb7020" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd30bdb9d10" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd30bdb7820" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fd30bd2d7f0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd30bd2d570" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fd30bd2ccd0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd30bd2ca50" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd30bd34b60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd30bd2c070" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fd30bd576c0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd57440" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd30bd55750" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd554d0" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd30bd54ab0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd544b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30bd547e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd30bd52b60" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd30bd53bf0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd53630" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30bd53960" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd30bd3c630" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd30bd50c80" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd30bd3c060" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30bd3c390" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd30bd35020" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd36890" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30bd36bc0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd30bd36020" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd30bd399c0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd39740" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd30bd37020" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd38900" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd30bd38c50" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd30bd310d0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
              <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30bd32700" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fd30bd32a50" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30bd32d80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fd30bd42560" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd30bd695f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd422e0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd30bd4b110" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd4ce30" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd30bd4e510" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd30bd4c020" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd4ed50" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd30bd48b10" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd48530" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd30bd48880" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd30bd4a600" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd4a020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd30bd4a370" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fd30bd45040" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd47da0" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fd30bd433a0" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd45dc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fd30bd43110" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd30bd69210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd30bd46da0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd46b20" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd30bd40a30" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd30bd695f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd30bd40450" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd30bd407a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd30bd695f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fd30bd3e890" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd30bd695f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30bcd46d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30bcd46d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd30bcd1020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30bccb070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30bccb070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd30bccb2b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd30bcc7e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd30bccae40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd30bcc7460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd30bcc8e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd30bcc71d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd30bcc8640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd30bcc6620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd30bccbe10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd30bccbb90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bccb2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd30bcca680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd30bca5350" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fd30bca5cd0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd30bca5a50" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fd30bca3750" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd30bca34d0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fd30bca22a0" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd30bca2020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd30bca2990" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd30bcb3ad0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fd30bcb0400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fd30bcb0180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd30bcb2270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd30bcb9d30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd30bcb29b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd30bcb6c50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd30bcb33e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd30bcb6510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd30bcb4390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fd30bcb4ca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd30bcb4a20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fd30bcb0e10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fd30bcb0b90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fd30bca93a0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd30bcaad70" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7fd30bca9110" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fd30bcad350" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd30c0f5b00"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd30c0f45a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd30bca9d40" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fd30bca8c40" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fd30bcaa4e0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd30bca84b0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd30bcadaf0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fd30bcac2b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fd30bcacd00" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd30c0f5b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd30c0f45a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd30bcaca80" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd30c0f5b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd30c0f45a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd30bc93d60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fd30bc8e400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fd30bc8e180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd30bc8c020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd30bc8ed10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd30bc8f9a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd30bc8f0e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fd30bc90740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd30bc904c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd30bc631f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30bb13e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30bb13e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd30bb0e070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bb0e070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd30bb0e990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30bb0e070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd30bb0dad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd30bb0d270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd30bb0c270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7fd30ba4ce80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fd30c886930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7fd30ba4cc00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fd30c886930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30b9a6020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30b9a6020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd30b9a6260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b9a6260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fd30b9a40b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b9a6260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9a5e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fd30b9a32a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9a3020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fd30b9a6e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9a6ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd30b9a1610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b9a6260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9a1020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd30b9a1380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b9a6260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fd30b995680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b995060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fd30b9953f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fd30b994850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9945d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fd30b996810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fd30b99ad60" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fd30b99aae0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fd30b9ac2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9ac060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fd30b9aa510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9aa290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fd30b9a9680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b9a9400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fd30b96d520" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b96d2a0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fd30b96f780" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b96f500" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fd30b972e70" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd30b972bf0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fd30b972350" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd30b9720d0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fd30b9708d0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fd30b970650" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fd30b96e690" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b96e410" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fd30b961e60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd30b961850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd30b961bd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fd30b97b120" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b97dae0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fd30b97de30" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fd30b978710" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b978110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fd30b978480" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fd30b97bc00" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fd30c886110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b97b980" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fd30b979620" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b9793a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fd30b97d2e0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b97d060" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fd30b97a760" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b97a4e0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fd30b9656c0" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b965440" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fd30b969790" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b969170" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fd30b969500" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fd30b966680" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b966400" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fd30b968b90" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b968570" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fd30b968900" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fd30b9646c0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b964440" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fd30b9742a0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b974020" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd30b956e00" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b956840" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30b956b70" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd30b94f620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b94f020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30b94f350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd30b94e660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd30b9522a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b952020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd30b951750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b951170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd30b9514c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd30b958cc0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fd30b959cc0" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fd30b959350" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd30b9584f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd30b9578a0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd30b92d3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b931dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fd30b92d110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd30b92c6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fd30b929e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd30b929060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fd30b9298a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30b929bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd30b92a840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd30b92a260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd30b92a5b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fd30b92de30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fd30b92dbb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fd30b9240e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fd30b92e870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd30b937a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd30b92f270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fd30b91f2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b91f020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fd30b920710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7fd30bda4a10"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fd30bda1440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b920410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fd30b91d620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7fd30bda0020"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fd30bd9f8c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b91d320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fd30b9356e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fd30b933840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fd30b933070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fd30b939e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fd30b936e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fd30b934020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fd30b934840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fd30b9366c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fd30b918d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fd30b91a350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fd30b918530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fd30b9182b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fd30b91aac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fd30b91b020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd30b922c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fd30b91bad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd30b91b850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fd30b8bd870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fd30b8bd290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fd30b8bd5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fd30b8be1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fd30b8c0880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fd30b8c0210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fd30b8c05f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fd30b8c6c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd30b8c6990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fd30b8bea70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fd30b8c2730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd30b8c24b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fd30b8c5d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd30b8c5ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fd30b8bcae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fd30b8c19c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd30b8c1740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fd30b8bc2b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fd30b8c34d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd30b998ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd30b990240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fd30b8c3cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fd30b8c61f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd30b8c5390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fd30b8c1020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fd30b8ba4a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd30b8ba4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd30b8bad60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd30b8b6ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd30b8ba4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd30b8b6510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7fd30b8b6830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd30b8ba4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd30b899ce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd30bda8bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b899a60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd30b8927f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd30bda8bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b892570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fd30b8acc50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd30b998ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd30b990240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fd30b89b0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fd30b89a070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fd30b89b8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd30bd695f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fd30b89c860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd30bd695f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fd30b89c280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd30bd695f0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd30b89c5d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd30bd699d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fd30b88ee40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd30bda8bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd30b896060" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd30bda8bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd30b8981e0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd30b898a50" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd30b898da0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd30b8957b0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd30bda8bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd30b896930" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd30b8951c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd30b895510" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd30b89e7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd30b89e020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fd30b8a0720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fd30b8a3db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fd30b778190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd30b777350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd30b778b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd30b7788b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fd30b77c8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd30b74f800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd30b74b270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd30b74f070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fd30b74c9a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fd30b74c720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7fd30b74c020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd30b752870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7fd30b74e810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fd30b74e030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fd30b5f9810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fd30b5f80e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fd30b5f8920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fd30b5d1420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b5d2e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd30b5d1190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fd30b5cc700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b5cdd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd30b5cc110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd30b5cc460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd30b5cd020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd30bda8bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b5ce970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd30b5cecc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fd30b5d2020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd30bda8bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b5d39d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd30b5d3d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd30b5d0b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b5d0250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd30b5d05a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd30b5d08f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd30b5b2a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd30b5b20d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd30b5b2460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30b5b27a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd30b5ae020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd30b5b02a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd30b5b0630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30b5b0970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd30b5b0ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
              <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fd30b5b48f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fd30b5b4670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fd30b4d4b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd30b4d04e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fd30b4cbaa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd30b5052b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd30b506e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fd30b4ce6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b4ce470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fd30b4cdb30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b4cd8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fd30b4cd020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd30b4cc5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b4cc370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fd30b4c1020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fd30b4c2750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fd30b4ba740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b4ba4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fd30b4bdcd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fd30b4957c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fd30b4a02d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fd30b4ad020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b521020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd30b521860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd30b4b0cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b521020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd30b521860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fd30b4a33b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fd30b4ab530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b51d020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd30b51d860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd30b4ab2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b51d020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd30b51d860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fd30b49a9e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fd30b496020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fd30b4aca90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b520ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd30b51f680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fd30b4abd20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b51d020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd30b51d860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fd30b4a7b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fd30b4a7910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fd30b4a71f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fd30b49a2b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fd30b4ac2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b520ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd30b51f680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd30b4ac020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b520ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd30b51f680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fd30b4a8020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fd30b499190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fd30b4a8a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fd30b4a8780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fd30b4a4480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fd30b4a4c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fd30b49b420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fd30b49e190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fd30b4a2350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fd30b49bb60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fd30b4a0ab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fd30b4998b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd30b4a5390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fd30b528d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fd30b5244d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fd30b498070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fd30b495020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fd30b4a9700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fd30b4a9480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fd30b4942a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b494020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fd30b4ad800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd30b521020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd30b521860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fd30b4a3b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fd30b49f270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fd30b49dba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd30b4f1b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd30b4f1730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd30b49d920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd30b4f1b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd30b4f1730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fd30b49eca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd30b5052b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd30b506e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd30b49ea20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd30b5052b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd30b506e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fd30b494ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fd30b498860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fd30b4a5ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fd30b496780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fd30b49f9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fd30b4a2b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd30b42d020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fd30b4069d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fd30b418020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fd30b40d620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd30b40d3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fd30b4215b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fd30b40ac50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fd30b4125e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fd30b419070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fd30b417020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fd30b41b020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fd30b41cd30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fd30b41d4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fd30b414020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fd30b40b550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fd30b406270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fd30b40ec30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fd30b401350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fd30b3fe9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fd30b420420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fd30b415740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fd30b4131f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fd30b41b8e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fd30b422350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fd30b40e460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd30b40e1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fd30b425c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fd30b40a4d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fd30b405190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fd30b400b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fd30b3fe270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fd30b409b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fd30b4058c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fd30b40ddb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fd30b403390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fd30b420b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fd30b4107e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fd30b4047b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fd30b408ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fd30b413de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fd30b413b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fd30b3ff2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fd30b40fa60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fd30b409420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fd30b422e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fd30b4dd4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd30b4dd080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd30b422b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fd30b4dd4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd30b4dd080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fd30b415020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fd30b41ecb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd30b41ea30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fd30b414980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd30b414700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fd30b403b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fd30b41c620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fd30b41e350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fd30b40f2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fd30b40f020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd30c885520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fd30b421ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fd30b404020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fd30b408350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fd30b40bcc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fd30b410020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fd30b412d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fd30b417740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fd30b4197b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fd30b3ffa40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fd30b41de30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd30b41dbb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fd30b401b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fd30b418750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fd30b400350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fd30b35d020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fd30b35d880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd30b324dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fd30b321020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd30b324530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd30b3226d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd30b321950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7fd30b320b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fd30b3154c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd30b31d490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd30b315240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd30b31d490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd30b317420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fd30b316020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd30b31d490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd30b317ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd30b31d490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd30b316930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fd30b31d490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd30b10b5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd30b10b360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd30b0f8b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fd30b0f81c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fd30b0f8530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30b0f8860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd30b0f6880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd30b0f62c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd30b0f65f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd30b0de530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd30b0de530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd30b0de770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b0de770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fd30b0dd2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b0de770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd30b0dd060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd30b0de770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fd30b07a580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd30b0489e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fd30b048020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fd30b048750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fd30b0497f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fd30b049020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd30b04cd30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd30c885920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fd30b05e3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd30c885160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b05e150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fd30b05f3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b05f150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd30b05b350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b05b0d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd30b05c390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd30b05c110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd30bd595e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fd30bd58c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fd30ae385e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd30ae385e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fd30ae352a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fd30c5f2020"/>
            <typename><typedef-ref name="error_t" ref="0x7fd30c5ea1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd30ae385e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fd30ae35020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd30ae385e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7fd30ac601f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd30c5f8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
