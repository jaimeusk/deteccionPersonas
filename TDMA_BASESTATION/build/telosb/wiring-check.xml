<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="19:MasterAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7feb3b1c7cd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7feb3b551b30"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7feb3b551b30"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7feb3b4b2110"/></to>
    </wire>
    <wire loc="20:MasterAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3b1c4360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b498c40"/></to>
    </wire>
    <wire loc="21:MasterAppC.nc">
      <from><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7feb3b1b7840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b10d980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3b10d980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b105b60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:MasterAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7feb3b1b4cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3adde260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3adde260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b105b60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:MasterAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feb3b155910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feb3a025c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feb3a025c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feb396dd8b0"/></to>
    </wire>
    <wire loc="24:MasterAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb3b1458d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb3a0248b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb3a0248b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb396dc590"/></to>
    </wire>
    <wire loc="25:MasterAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7feb3b132a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feb3add8680"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feb3add8680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feb3ada7cc0"/></to>
    </wire>
    <wire loc="26:MasterAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feb3b13a8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feb3a025020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feb3a025020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feb396debc0"/></to>
    </wire>
    <wire loc="27:MasterAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3b135180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a01f910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3a01f910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3add4b20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a18add0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a213b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a231750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a252080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a3a3620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a491c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3ac29c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb39865020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a964020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3acd3510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b0fe8c0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7feb3b4b2780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7feb3b9f91e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7feb3b9f91e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7feb3b59e140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7feb3b4b11d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b54c0c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3b54c0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b53f1a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b4b18d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7feb3b541130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7feb3b53f810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7feb3b53d020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7feb3b526900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7feb3b526900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b50d850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7feb3b53d700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b540640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7feb3b53dde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b46f600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3b50d850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b4f31c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feb3b505de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feb3b4f3830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7feb3b674c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7feb3b4f2af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b59d040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7feb3b598490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7feb3b7d19a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3b46f600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3b498640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7feb3b48f1d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7feb3b499d80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7feb3b499d80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3b1f2480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7feb3b4954d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7feb3b471020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7feb3b471020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3b1dcb20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7feb3b4947f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7feb3b470380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7feb3b470380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3b1d51b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3b1e0610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7feb3b4038a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7feb3b4038a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2acb90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3b1dbde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7feb3b400020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7feb3b400020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2a6060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3b1d4480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7feb3b3fe8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7feb3b3fe8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2a1540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7feb3b454580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b35b060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7feb3b43b710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b324740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7feb3b3b1d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b314540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7feb3b3b6d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b275060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7feb3b3dfd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b30fb90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7feb3b436710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b319060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7feb3b41c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2e3740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7feb3b3ee8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b280540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7feb3b3dad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b304540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7feb3b3c6d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b296060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7feb3b3a7d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b270540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7feb3b44dd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b34a060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7feb3b3d7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2feb90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7feb3b448d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b340b90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7feb3b42fe50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b309060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7feb3b414020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2d2540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7feb3b3fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b29cb90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7feb3b3e6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b270540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7feb3b459580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b366740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7feb3b440580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b330d10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7feb3b426710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2f8060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7feb3b3e1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b314540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7feb3b3be570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b286060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7feb3b3a9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b270540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7feb3b3cd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2b2540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7feb3b421710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2eedc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7feb3b4088a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2b7060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7feb3b3f48a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b28cb90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7feb3b3bcd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b280540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7feb3b3d5d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2c2540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7feb3b452d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b355540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7feb3b439e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b31fb90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7feb3b3f98a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b296060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7feb3b434e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b314540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7feb3b419020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2deb90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7feb3b3eb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b27bb90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7feb3b3d0d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2b7060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7feb3b45c530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b39fd10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7feb3b445580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b33a060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7feb3b42b710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b304540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7feb3b4128a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2cdb90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7feb3b3cbd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2f8060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7feb3b3c3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b291540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7feb3b3b3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b270540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7feb3b40d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2c2540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7feb3b3c8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2f3540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7feb3b457d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b361b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7feb3b43ee50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b329260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7feb3b424e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2f3540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7feb3b3d2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2bdb90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7feb3b3b9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b27bb90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7feb3b41e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2e8260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7feb3b405020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2b2540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7feb3b3f0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b286060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7feb3b44f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b350b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7feb3b3f6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b291540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7feb3b44a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b345540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7feb3b431710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b30fb90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7feb3b4178a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2d7060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7feb3b3e98a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b275060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7feb3b46ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b36b260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7feb3b443d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b335540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7feb3b429e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2feb90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7feb3b40f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2c7060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7feb3b3c1d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b28cb90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7feb3b3ae560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b309060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7feb3b3dc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b309060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7feb3b40a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b2bdb90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7feb3b3acd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b275060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7feb3b3a4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b29cb90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7feb3b3e48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feb3b319060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b105b60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b0fb700"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b0fb700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3ae068e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3b0fe8c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3aeb3020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3ae068e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb39a51db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7feb3b0f51a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feb3adf6020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3aeb3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb39c47a10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7feb3adfe020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3ae872f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feb3ae82850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb3aeb3870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feb3aeb3870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb39c405f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feb3adec300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3af2c8c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feb3af2c8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3af10cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb39c47a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb39c2a360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7feb39c3ad20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb39c452a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feb39c452a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb39c2abf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feb39c3c9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3af2c8c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb39c26dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7feb39c2f020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb39c2f020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb39c24440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb39c2e760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb39c2e760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb39c23760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7feb39c2da80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb39c2da80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7feb3b0a6280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7feb3b0a6280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afef6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7feb3b0a5700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7feb3b0a5700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3afeeac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7feb3b09fa50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7feb3b09fa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afdf220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7feb3b09d020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7feb3b09d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3afde610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7feb3b09cd40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7feb3b09cd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afd86d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7feb3b09a160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7feb3b09a160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3afd6ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7feb3b098020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7feb3b098020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afd0b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7feb3b097570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7feb3b097570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3afce020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7feb3b0955a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7feb3b0955a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afc8220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7feb3b094a20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7feb3b094a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3afc6610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7feb3b0928c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7feb3b0928c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afc06d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7feb3b091d40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7feb3b091d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3afbfac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7feb3b0ab730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3aff6220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7feb3b0ac700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3affdcb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7feb3b099020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3afd57a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7feb3b0b2890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3affd020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7feb3b090ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3afbe7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7feb3b0b60c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3b04b6d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7feb3b0a0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3afe5cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7feb3b0a1bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3afe5020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7feb3b0a2730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afe7b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7feb3b0a9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3aff42f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7feb3b096570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3afcecb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7feb3b0aabb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3aff5610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7feb3b0ba830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b0593e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7feb3b0b3410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feb3afffb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7feb3b0ad410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3b0047a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7feb3b09dda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3afdd2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7feb3b0b5570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feb3b005ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7feb3b093890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3afc52f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7feb3b0a4700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3afed7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7feb3b0572f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b058bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7feb3b057940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7feb3afb73f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7feb3b055020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7feb3afb7b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3b003610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b0593e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3b002c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b058bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3affcb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b0593e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3affa2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b058bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3aff3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b0593e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3aff27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b058bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7feb3b04f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7feb3b04f750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7feb3afb6430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7feb3b04fda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7feb3afb6bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3afec610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3afebc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3afe4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3afe22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3afdc160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3afdb7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3afd4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3afd3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3afcdb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3afcb2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3afc4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3afc37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3afbd610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feb3afbcc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7feb3aef20f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feb3af2a8e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feb3af2a8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3af24b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3af15c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7feb3ae7e9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7feb39a4a3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7feb3adfe020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7feb39a43a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7feb3adf9450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7feb39a455d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7feb3b541130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7feb39a42100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feb3ada7cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad83b70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feb3add57f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feb3ada6d20"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feb3ada6d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feb3a14c020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7feb3add2880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7feb3ada4c00"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7feb3ada4c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7feb3a14bdf0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feb3add1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feb3ada18f0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feb3ada18f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feb3a148a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3adcd310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3a31e550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3a31e550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3a310a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3adb3130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3ad96cb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3ad96cb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3ad68080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3add4b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3ada4020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3ada4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a14b210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3adce080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3ad9f990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3ad9f990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3ad69020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb3add1c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb3ada22d0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb3ada22d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb3a149470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feb3adbe3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feb3a31a660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feb3a31a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feb3a30caf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad83b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feb3a17db80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3ad8de30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3a1468b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7feb3ad80d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7feb3a147ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3ad989b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3ad6a020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3ad6a020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3ad68080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3a17d080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3ad69020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7feb3a3206e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7feb3ad8b020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7feb3ad68b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7feb3ad68b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7feb3a169020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3ad95c70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3ad699d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3ad699d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3a31fa70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7feb3a13d0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3ad7c210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feb3a145860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7feb3ad75990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7feb3ad75990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7feb3a1e6c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feb3a144690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3ad6d840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3ad6d840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3a1e5a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feb3a1404d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feb3a54bb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a144ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a315d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a143b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a311640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7feb3a142610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7feb3acdcdc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7feb3acdcdc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7feb3acd2970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7feb3a13f1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3ad61330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3ad61330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3ad5c7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3a13dd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feb3a17db80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7feb3a17ad90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3a31fa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3a310020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7feb3a169020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7feb3a167410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7feb3a1e6c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7feb3a1dba20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3a17d080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3a1762d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7feb3ad76500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a1e65e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3a1e65e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7feb3a1db370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7feb3a3206e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7feb3a312c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3ad7c210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a1e8be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a1e8be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a1de7b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7feb3ad6c6f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a1e78e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feb3a1e78e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7feb3a1dd4d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7feb3ad76bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7feb3a1e4170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7feb3a1e4170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7feb3a1d9020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3a1e5a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3a1da840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7feb3a17ad90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad64390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad64390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad60e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feb3a1e36b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a23a220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feb3a23a220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a234a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feb3a239020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a16c350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feb3a16c350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feb3a169d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feb3a169d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a181ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feb3a181ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feb3a17b860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feb3a17b860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3ad64e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feb3ad64e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3ad5d990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feb3a1e3020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a17e980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3a17e980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feb3a17a690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feb3a17a690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a21aaa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3a21aaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a216e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feb3a217950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3ad62b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3ad62b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a3a87c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feb3a3a87c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feb3a3a0020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3ad5b640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3acec950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3acec950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3acd3b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7feb3ad53b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7feb3ace7bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7feb3ace7bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7feb3acd0740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7feb3ad50760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feb3a4a16c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7feb3ad50760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feb3a3ab5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7feb3a3ab5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feb3a3a3ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7feb3a4a16c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feb3a490320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7feb3ad482a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7feb3a49e020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7feb3a49e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a490bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7feb3ad4f060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3a49ecb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3a49ecb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3a48f970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3ad46330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3ad3e920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7feb3ad45420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7feb3a258a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7feb3a258a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7feb3a251a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7feb3ad42110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a25aaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7feb3a25aaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a9681d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3ad45bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7feb3ad34b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7feb3ad35ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7feb3ad36c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7feb3acd90c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7feb3accfb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7feb3accca10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7feb3ac26690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7feb3ac26690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7feb3ac202e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7feb3acc8c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7feb3abdf370"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7feb3abdf370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abd1da0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7feb3acc6e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7feb3abdcce0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7feb3abdcce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abc0020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7feb3acc40f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7feb3abd9380"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7feb3abd9380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abb5b00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7feb3acbfc00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7feb3ab9b400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7feb3ab9b400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7feb3aa3a680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7feb3acac1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a5d6e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a5d6e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a9e84d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7feb3acab2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7feb3a5d37b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7feb3a5d37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7feb3acab9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a5d2ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a5d2ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7feb3acada40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a5d4ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a5d4ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3acad120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a5d1160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a5d1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7feb3acb2be0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a5c8870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a5c8870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7feb3acb4550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a5c6880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a5c6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7feb3acb4e00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a5c50a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a5c50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3acb3710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a5cde50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a5cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3acb1020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a5cc670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a5cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7feb3acbe5e0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7feb3a5b6500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7feb3a5b6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7feb3acb6c30"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a5b7ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a5b7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3acb18e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a5c9e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a5c9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7feb3acb01c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7feb3a5cce50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7feb3a5cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7feb3acb0a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a5cae50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a5cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7feb3acaad90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a5a4a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a5a4a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a9e84d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7feb3acaa020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a5779e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a5779e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a9e84d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feb3acba390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feb3a54bb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7feb3accc020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7feb3a54ad20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7feb3a54ad20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7feb3a52e310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7feb3ac9f820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7feb3aca0940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3ac29c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3ac21a20"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3ac21a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb399ecdf0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7feb3ac202e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb399ea690"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb399ecdf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb399e3020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feb399ea690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb399dda90"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb399e3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb399c7a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7feb399d6210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb399e3870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feb399e3870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feb399c6340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feb399d9e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3ac09650"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feb3ac09650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3ac032e0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb399c24c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7feb399cc570"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb399cc570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb399c1a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb399cbc10"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb399cbc10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb399c0da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7feb399c9020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feb399c9020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7feb3ac006d0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feb3af2a8e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7feb3abde6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abcb4a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7feb3abdd9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abc6b00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7feb3abe00e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abd7710"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7feb3abda020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abba630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abd5930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7feb3b454580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abcf020"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7feb3b41c8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abca610"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7feb3b457d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abc5c60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7feb3b45c530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abbf2f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7feb3b4128a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abb97a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7feb3b41e020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abb4c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7feb3b414020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7feb3ab98700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feb3ab8fc20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7feb3ab9a060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7feb3aa2bb70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3ab7d760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7feb3b0a2730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7feb3ab7ca80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7feb3b0a0a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7feb3ab7b930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7feb3b41e020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7feb3aa392f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7feb3ab683f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7feb3ab683f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7feb3ab523f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7feb3aa287a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7feb3ab6c620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7feb3ab6c620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7feb3ab597a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7feb3ab5c3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7feb3ab453f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7feb3ab65d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7feb3ab4ed50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7feb3ab623f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7feb3ab4b3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7feb3ab71bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7feb3ab55d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7feb3ab5fd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7feb3ab48d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7feb3ab67710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7feb3ab51710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7feb3ab5b710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7feb3ab44710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7feb3ab61710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7feb3ab4a710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7feb3ab69020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7feb3ab53020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7feb3ab5d100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7feb3ab46100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7feb3ab66a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7feb3ab50a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7feb3ab63020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7feb3ab4c020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7feb3ab728a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7feb3ab56a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7feb3ab60a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7feb3ab49a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7feb3a5d3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a5c7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7feb3a5bf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7feb3a5c60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a5b1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7feb3a5b3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a5d2490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7feb3a5bb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a5b5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a5c1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7feb3a5c20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a5d5a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9e7350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9e7350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9df660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a5d1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7feb3a5cf490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a5b8c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a5cfbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a5b5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7feb3a5bb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a5ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a5bc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7feb3a5bf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a5bc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a5b2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7feb3a5b3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7feb3a5c2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7feb3a5be0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a5b6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a5c5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a5b1ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7feb3a5d4480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7feb3a5cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a5c9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a5c00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a5c0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a5c70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a5ce2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7feb3a5cd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a5d17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a5b7500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7feb3a5b2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a5c10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7feb3a5be880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7feb3a5d3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a5c40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7feb3a5ce940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7feb3a5c4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7feb3a5b80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a5b09b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9dd890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9dbba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9daa30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a9e84d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a9de510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9d98b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7feb3a9ccb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a96d770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7feb3a96d770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a9681d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7feb3a9d7060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a94bc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a94bc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb398eb940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7feb3a9d4c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7feb3a94a8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7feb3a94a8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7feb398ead70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a9cc2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a5fc020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a5fc020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7feb398e8020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3a9d5a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7feb3a9c8bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7feb3a9681d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a964b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7feb398e8020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a8e3850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7feb398ead70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7feb3a8e4110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb398eb940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a8e9d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feb398ea5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feb398e0020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feb398e0020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feb3a7652c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7feb3a8e4110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7feb3a868a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7feb398e9410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7feb3a8e4790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7feb3a8e4790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7feb3a867060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7feb3a8dfa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7feb398e87c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb398d2760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a8e18e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7feb3a8e0690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb398e1340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb398e1340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a766020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7feb3a8dab40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feb398dbc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feb398dbc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7feb3a7694d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a8e18e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a868250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a8e3850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a867c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a8e9d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a869470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7feb3a8653e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7feb3a8dfa40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7feb3a8665b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7feb3a8e0690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7feb3a860480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7feb3a8dab40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7feb3a865a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feb3a855020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feb3a855020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7feb3a84c700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3a860c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7feb3a85d2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7feb3a84d2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7feb3a847c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feb3a851d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7feb3a8472d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7feb3a819bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7feb3b3e1580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7feb3a8163e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7feb3b3dfd50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7feb3a814bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7feb3b3dc580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7feb3a8113e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7feb3b3d7580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7feb3a80fbb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7feb3b3dad50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7feb3a81ed10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7feb3a6bcd40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7feb398d9440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7feb3a7683f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7feb398d9a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7feb3a6c3020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7feb3a6c3020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7feb3a6bcd40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feb398df020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feb3a855020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb398e07c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a765ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a765ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a6cee80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a7648a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb398d2760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feb3a7652c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feb3a6d0a60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feb3a6d0a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feb398616c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7feb3a7694d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7feb3a762d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a766020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a6d1ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a6d1ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb39862850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7feb3a7683f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7feb3a761710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a6cee80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb39860a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a6cd790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a7648a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a74fbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a6cee80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7feb3a761d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feb3a851d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7feb3a74f5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7feb3a84d2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feb3a6ce270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feb39861e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3985f9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a6cd790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7feb3985f2d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7feb3a6cc020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7feb3985e2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7feb39865630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7feb3985c480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7feb3a6b3bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7feb3a84c700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7feb3a6ae700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7feb3b3e1580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7feb3a6ace40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7feb3b3dc580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a597c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7feb3a5a2da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a59ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a594670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7feb3a58de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7feb3a594e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a5812f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7feb3a5832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a59f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7feb3a589670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a5842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7feb3a599c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a598c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a58f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7feb3a591e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a593670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a5a3760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9e7350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a59eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7feb3a59d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a588a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a59d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a584ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a59fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7feb3a58ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a598480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a599480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a5a2750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a58be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7feb3a58c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a58a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a582ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7feb3a583ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7feb3a590670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7feb3a58ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a585ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a592670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a581ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7feb3a5a2100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7feb3a59a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a597480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a58fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a593e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a58d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a596670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7feb3a5a0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a596e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a59c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7feb3a59ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7feb3a5852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a586ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a59e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a5862f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7feb3a5822f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a590e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7feb3a58b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7feb3a5a0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a59f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a592e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7feb3a59c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7feb3a591670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7feb3a589e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a57f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a56ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7feb3a575da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a56eb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a568670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7feb3a561e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7feb3a568e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a5542f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7feb3a5562f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a573120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7feb3a55c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a5582f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7feb3a56dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a56bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a562670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7feb3a564e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a567670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a576760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9e7350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a571aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7feb3a570120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a55ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a570870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a558ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a573dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7feb3a55de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a56b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a56d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a575750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a55fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7feb3a560670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a55d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a555ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7feb3a556ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7feb3a563670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7feb3a560e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a559ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a566670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a554ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7feb3a575100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7feb3a56e370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a56a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a562e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a567e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a561670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a569670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7feb3a574450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a569e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a56f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7feb3a56fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7feb3a5592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a55aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a571450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a55a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7feb3a5552f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a563e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7feb3a55f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7feb3a574aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a573770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a566e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7feb3a56f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7feb3a564670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7feb3a55ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a5537a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7feb3a52b880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7feb3a520020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7feb3a520020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7feb3a51b140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7feb3a517bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7feb3a51fc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7feb3a51fc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7feb3a502150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7feb3a51a530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feb3a4ad1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7feb3a506540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7feb3a507590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7feb3a507590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feb3a4b79e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7feb3a4fd950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7feb3a504ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7feb3a504ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7feb3a4daa90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7feb3a5029f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7feb3a506540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feb3a4ca020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7feb3a4c4530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7feb3a4c4530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3a4c1e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3a4bd020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7feb3b0ba830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3a4b6c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7feb3b440580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7feb3a498990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7feb3a48e900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7feb3a49a150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7feb3a48c0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7feb3a48cae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7feb3ac26690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7feb3a480500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7feb3abe00e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7feb3a47a820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7feb3abdf370"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7feb3a479b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7feb3abda020"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7feb3a481880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7feb3ab98700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7feb3a477020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a3dbc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a3dbc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a9e84d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a477d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a3da8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a3da8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9e7350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7feb3a4736d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7feb3a3d92f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7feb3a3d92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7feb3a473de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7feb3a3d8cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7feb3a3d8cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a472530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a3d7370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a3d7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a472c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a3d5d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a3d5d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a474e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a3cfc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a3cfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a475780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a3b77a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a3b77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a474550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a3bc2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a3bc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a4713e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a3d1480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a3d1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a4705e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a3cde50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a3cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a46f020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a3cc670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a3cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7feb3a471e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7feb3a3d37b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7feb3a3d37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a46e9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a3b9ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a3b9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7feb3a46f890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7feb3a3ba2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7feb3a3ba2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7feb3a46e130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7feb3a3baad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7feb3a3baad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7feb3a468d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7feb3a3abdf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7feb3a3abdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7feb3a3a1550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a489d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a487bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feb3a486950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3a31e550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feb3a47bbe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feb3a316480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feb3a316480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feb3a3088b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3a46c6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a3cec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7feb3a3d8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a3d2c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7feb3a3c5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7feb3a3cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a3b82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7feb3a3c0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7feb3a3d1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a3c6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7feb3a3c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a3cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7feb3a3d4370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a3bfa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a3d4ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a3bcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a3d5060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7feb3a3c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a3cf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a3d9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a3c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7feb3a3c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a3c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7feb3a3c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7feb3a3c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a3bdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a3ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a3b8ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7feb3a3d2490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a3ce480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a3c6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a3cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a3c5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a3cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7feb3a3d8670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a3d3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7feb3a3d3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7feb3a3bd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a3bead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a3d56b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a3be2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7feb3a3b92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a3c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7feb3a3c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a3d79c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a3cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7feb3a3c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7feb3a3c0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7feb3a3a7020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7feb3a3a07c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feb3a38b150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7feb3a39f020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7feb3abdf370"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7feb3a39e380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7feb3abde6a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7feb3a39d6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7feb3abdd9d0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7feb3a39ca50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7feb3ab9a060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7feb3a39b6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a2a6d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feb3a2a6d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feb3a9e84d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a39a530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a282ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a282ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a399ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a2a06b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a2a06b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7feb3a3993a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7feb3a29e370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7feb3a29e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a398330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a3971e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feb3a395d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3a31e550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7feb3a397b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7feb3acdcdc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a3903e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a297e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a297e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a390cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a296670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a296670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a391b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a29d160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a29d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a38e6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a2822f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a2822f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7feb3a38f590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7feb3a2852f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7feb3a2852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7feb3a38fe00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7feb3a285ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7feb3a285ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a38d020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a286ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a286ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7feb3a38d8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7feb3a2a3300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7feb3a2a3300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7feb3a3809d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feb3a2b2300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feb3ac09650"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7feb3a3063b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feb3a2b4020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7feb3a3056e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feb3b0f51a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feb3a2ae450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b105b60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a299c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7feb3a2a2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a29cc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7feb3a28fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7feb3a296e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a2a1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7feb3a28a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a2862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7feb3a29bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a29ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a290670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7feb3a293e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a295670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a2a4970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9e7350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a2a0d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a289a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a29eac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a2a0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7feb3a28ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a29a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a29b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a2a3950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a28de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7feb3a28e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a28c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a283ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7feb3a291670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7feb3a28ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a287ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a294670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7feb3a29c490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a299480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a290e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a295e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a28f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a297670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7feb3a2a2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7feb3a29de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7feb3a2872f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a288ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a2882f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7feb3a2832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a291e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7feb3a28d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7feb3a2a2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a2a19c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a294e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7feb3a29d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7feb3a293670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7feb3a28ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a2817a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7feb3a255920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7feb3a252940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feb3a25c990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feb3a252080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feb3a231e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feb3a239020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7feb3a230ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a232690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7feb3a232690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a9681d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7feb3a22f8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7feb3a258a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a22e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7feb3a217200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7feb3a213570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feb3a2113f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feb3a217950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a211a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feb3a1d9d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feb3a1e36b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feb3a1d8b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feb3a1e3020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a1d72f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a1d6170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7feb3a1d6b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7feb3a189410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7feb3a1aadb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7feb3a17c800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a178580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7feb3a178580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7feb3a9681d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3a1641c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3ad69020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feb396debc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feb396d1640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feb396dd8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feb3add1020"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb396dc590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb3add1c90"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7feb3a022020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7feb396dbc10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7feb396dbc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3adce080"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feb396d02e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a08d930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb396cf020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb3add1c90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feb3a08d930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feb3a03cdf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feb3a03a400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feb3add57f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb3a039060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb3add1c90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feb3a038720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feb3add1020"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7feb3a037480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7feb3a037c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feb3a018020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feb3add1020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feb3a018c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feb3add1c90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="MasterC" loc="8:MasterC.nc">
      <module/>
    </component>
    <component qname="MasterAppC.TimerTramaTDMA" loc="44(MasterAppC.TimerTramaTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3ae79530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MasterAppC.TimerLeds" loc="44(MasterAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MasterAppC.AMSenderC" loc="47(MasterAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MasterAppC.AMSenderC.SenderC" loc="47(MasterAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(MasterAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MasterAppC.AMReceiverC" loc="43(MasterAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7feb3b39e1d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7feb3b39e580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7feb3b39e930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7feb3b39ece0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7feb3b39d0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7feb3b08b930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7feb3b08bcd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7feb3b08a0d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7feb3b08a450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7feb3b08a7d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7feb3b08ab40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7feb3b088020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7feb3b0883b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7feb3b088780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7feb3b04dc80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7feb3b04a0d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7feb3af65cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7feb3af65cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7feb3af25a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7feb3af25a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7feb3af0f570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7feb3af0f570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7feb3af0fd40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7feb3af0fd40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7feb3af0d160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7feb3af0d160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7feb3af0d940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7feb3af0d940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7feb3af0dd10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7feb3af0c540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7feb3af0c540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7feb3af326d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7feb3af326d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7feb3aeeb020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7feb3aeeb020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7feb3aeeb410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7feb3aeeb410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7feb3aeebbf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7feb3aeebbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7feb3aee9020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3aeafcc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3aeafcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3ae79530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3ae79530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7feb3ae79880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3ae6b980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3ae6b980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7feb3ae6bcd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3adf5550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3adf5550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7feb3a74a5e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7feb3a73e9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7feb3a723cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3a4d8020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3a4d8020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feb3a4d87b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3a4d87b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7feb3a0b26a0" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7feb3a0a83a0" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7feb3a0a00d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7feb3a088c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7feb3a01e330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7feb3b54f160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b54f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b54f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7feb3b551b30" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7feb3b551b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feb3b550020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3b54c0c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b54c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b54c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7feb3b541130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7feb3b541130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7feb3b54b1b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7feb3b54b340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7feb3b5417d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7feb3b541960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7feb3b541af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7feb3b541c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7feb3b541e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7feb3b54b020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7feb3b5414b0"/>
        <function-ref name="node_id" scoped="" ref="0x7feb3b541640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7feb3b53d700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7feb3b53d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b53da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3b53f1a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b53f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b53f520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7feb3b53d020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7feb3b53d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b53d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7feb3b53dde0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7feb3b53dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b53c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7feb3b53f810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7feb3b53f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7feb3b53e980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7feb3b53eb10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7feb3b53e020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7feb3b53e1b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7feb3b53e340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7feb3b53e4d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7feb3b53e660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7feb3b53e7f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7feb3b53fb90"/>
        <function-ref name="node_id" scoped="" ref="0x7feb3b53fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3b540640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b540640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b5409c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7feb3b526900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7feb3b526900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b526c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7feb3b505de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feb3b505de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7feb3b509c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7feb3b509310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7feb3b5094a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7feb3b509630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7feb3b509180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7feb3b5097c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7feb3b509950"/>
        <function-ref name="initClocks" scoped="" ref="0x7feb3b509ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3b50d850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b50d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b50dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7feb3b4f3830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feb3b4f3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7feb3b4f27f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7feb3b4f3d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7feb3b4f2020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7feb3b4f21b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7feb3b4f3bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7feb3b4f2340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7feb3b4f24d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7feb3b4f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7feb3b4f2af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7feb3b4f2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7feb3b4f2e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3b4f31c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b4f31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b4f3540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7feb3b674c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7feb3b674c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7feb3b84f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7feb3b7d19a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7feb3b7d19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7feb3b7d1d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7feb3b8ec020"/>
        <function-ref name="sleep" scoped="" ref="0x7feb3b8ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7feb3b7123d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7feb3b7123d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7feb3b712750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7feb3b50b8b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feb3b50b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7feb3b4be7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7feb3b50bdc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7feb3b4be020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7feb3b4be1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7feb3b50bc30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7feb3b4be340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7feb3b4be4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7feb3b4be660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7feb3b4b18d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7feb3b4b18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b4b1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7feb3b4b2110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7feb3b4b2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feb3b4b2490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7feb3b4b11d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7feb3b4b11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b4b1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7feb3b4b2780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7feb3b4b2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b4b2b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feb3b4b2c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feb3b4b2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7feb3b9ec940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b9ec940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3b9eccc0"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3b9ece50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7feb3b9f91e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7feb3b9f91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b9f9560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feb3b9f96f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feb3b9f9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7feb3b59d040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7feb3b59d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3b59d3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3b59d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7feb3b598490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7feb3b598490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7feb3b598810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7feb3b5989a0"/>
        <function-ref name="sleep" scoped="" ref="0x7feb3b598b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7feb3b59e140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7feb3b59e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b59e4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feb3b59e650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feb3b59e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7feb3b49a0d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3b49a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3b49a450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3b49a5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3b49a770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3b49a900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3b49aa90"/>
        <function-ref name="get" scoped="" ref="0x7feb3b49ac20"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3b49adb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3b4a64d0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b4a6020"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3b4a61b0"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3b4a6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7feb3b48f1d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7feb3b48f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b48f550"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b48f6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b48f870"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b48fa00"/>
        <function-ref name="get" scoped="" ref="0x7feb3b48fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b48fd20"/>
        <function-ref name="set" scoped="" ref="0x7feb3b495020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3b498640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b498640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b4989c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7feb3b4954d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7feb3b4954d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b495850"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b4959e0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b495b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b495d00"/>
        <function-ref name="get" scoped="" ref="0x7feb3b494020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4941b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b494340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7feb3b498c40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3b498c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3b497020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3b4971b0"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3b497340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3b4974d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3b497660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4977f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3b497980"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3b496020"/>
        <function-ref name="set" scoped="" ref="0x7feb3b497b10"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3b497ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3b497e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7feb3b4947f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7feb3b4947f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b494b70"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b494d00"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b48e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b48e1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b48e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b48e4d0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b48e660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b48e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7feb3b499d80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7feb3b499d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b472180"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b472310"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4724a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b472630"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4727c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b472950"/>
        <function-ref name="set" scoped="" ref="0x7feb3b472ae0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b472c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7feb3b471020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7feb3b471020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b4713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b471530"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4716c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b471850"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4719e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b471b70"/>
        <function-ref name="set" scoped="" ref="0x7feb3b471d00"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b470020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7feb3b46f600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b46f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b46f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7feb3b470380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7feb3b470380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b470700"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b470890"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b470a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b470bb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b470d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b46f020"/>
        <function-ref name="set" scoped="" ref="0x7feb3b46f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b46f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7feb3b454580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7feb3b454580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b454900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b454a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b454c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b452980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b453020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4531b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b453340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b453660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4537f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b453980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b453b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b453ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b452020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4521b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b452340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4524d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b454db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b452660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7feb3b43b710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7feb3b43b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b43ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b43bc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b43bdb0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b439a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b43a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b43a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b43a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b43a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b43a7f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b43a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b43ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b43aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b43ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b439120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4392b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b439440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4395d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b43a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b439760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7feb3b3b1d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7feb3b3b1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3b00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3b0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3b0400"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3ae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3b0720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3b08b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3b0a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3b0bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3b0d60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3af020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3af1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3af340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3af4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3af760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3af8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3afa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3afc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3b0590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3afda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7feb3b3b6d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7feb3b3b6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3b50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3b5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3b5400"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3b31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3b5720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3b58b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3b5a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3b5bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3b5d60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3b4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3b41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3b4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3b44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3b4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3b48f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3b4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3b4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3b5590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3b4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7feb3b3dfd50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7feb3b3dfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3de100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3de290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3de420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3de740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3de8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3dea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3debf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3ded80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3dd020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3dd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3dd340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3dd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3dd760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3dd8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3dda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3ddc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3de5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3ddda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7feb3b436710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7feb3b436710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b436a90"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b436c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b436db0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b434a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b435340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b4354d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b435660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4357f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b435980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b435b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b435ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b435e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b434120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4342b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b434440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4345d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b435020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b434760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7feb3b41c8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7feb3b41c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b41cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b41cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b41b020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b41ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b41b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b41b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b41b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b41b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b41b980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b41bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b41bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b41be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b41a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b41a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b41a440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b41a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b41a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b41b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b41a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b41aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7feb3b4038a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7feb3b4038a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b403c20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b403db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b402020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b401c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b402340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4024d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b402660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4027f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b402980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b402b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b402ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b402e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b401020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4012b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b401440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b4015d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b401760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4021b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4018f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b401a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7feb3b3ee8a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7feb3b3ee8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3eec20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3eedb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3ed020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3ecc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3ed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3ed4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3ed660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3ed7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3ed980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3edb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3edca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3ede30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3ec020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3ec2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3ec440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3ec5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3ec760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3ed1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3ec8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3eca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7feb3b3dad50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7feb3b3dad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3d9100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3d9290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3d9420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3d9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3d98d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3d9a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3d9bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3d9d80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3d8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3d81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3d8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3d84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3d8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3d88f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3d8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3d8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3d95b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3d8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7feb3b3c6d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7feb3b3c6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3c50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3c5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3c5400"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3c5720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3c58b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3c5a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3c5bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3c5d60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3c4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3c41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3c4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3c44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3c4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3c48f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3c4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3c4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3c5590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3c4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7feb3b3a7d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7feb3b3a7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3a6100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3a6290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3a6420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3a41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3a6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3a68d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3a6a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3a6bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3a6d80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3a5020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3a51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3a5340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3a54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3a5760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3a58f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3a5a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3a5c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3a65b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3a5da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7feb3b44dd50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7feb3b44dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b44c100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b44c290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b44c420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b44a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b44c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b44c8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b44ca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b44cbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b44cd80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b44b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b44b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b44b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b44b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b44b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b44b8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b44ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b44bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b44c5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b44bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b44a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7feb3b3d7580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7feb3b3d7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3d7900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3d7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3d7c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3d5980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3d61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3d6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3d6660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3d67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3d6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3d6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3d6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3d5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3d51b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3d5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3d54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3d7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3d5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7feb3b448d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7feb3b448d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b447100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b447290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b447420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4451b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b447740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4478d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b447a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b447bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b447d80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b446020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b446340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4464d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b446760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4468f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b446a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b446c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4475b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b446da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b445020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7feb3b42fe50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7feb3b42fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b42d210"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b42d3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b42d530"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b42b340"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b42d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b42d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b42db70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b42dd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b42c020"/>
        <function-ref name="get" scoped="" ref="0x7feb3b42c1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b42c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b42c4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b42c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b42c8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b42ca80"/>
        <function-ref name="set" scoped="" ref="0x7feb3b42cc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b42cda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b42d6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b42b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b42b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7feb3b414020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7feb3b414020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b4143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b414530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b4146c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4124d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4149e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b414b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b414d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b413020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4131b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b413340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b413660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b413a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b413c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b413da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b412020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b414850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4121b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b412340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7feb3b3fb020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7feb3b3fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3fb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3fb6c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3f94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3fb9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3fbb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3fbd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3fa1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3fa340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3fa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3fa660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3fa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3faa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3fac10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3fada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3f9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3fb850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3f91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7feb3b3e6020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7feb3b3e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3e63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3e6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3e66c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3e44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3e69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3e6b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3e6d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3e5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3e51b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3e5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3e54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3e5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3e57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3e5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3e5c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3e5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3e4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3e6850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3e41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7feb3b459580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7feb3b459580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b459900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b459a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b459c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b457980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b458020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4581b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b458340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b458660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4587f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b458980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b458b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b458ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b457020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4571b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b457340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4574d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b459db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b457660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7feb3b440580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7feb3b440580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b440a00"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b440b90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b440d20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b43ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b43f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b43f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b43f4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b43f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b43f7f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b43f980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b43fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b43fca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b43fe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b43e120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b43e2b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b43e440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b43e5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b43f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b43e760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b43e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7feb3b426710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7feb3b426710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b426a90"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b426c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b426db0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b424a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b425340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b4254d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b425660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4257f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b425980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b425b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b425ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b425e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b424120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4242b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b424440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4245d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b425020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b424760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7feb3b3e1580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7feb3b3e1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3e1900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3e1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3e1c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3df980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3e01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3e0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3e04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3e0660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3e07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3e0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3e0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3e0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3df020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3df1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3df340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3df4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3e1db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3df660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3df7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7feb3b3be570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7feb3b3be570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3be8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3bea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3bec10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3bc980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3bd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3bd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3bd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3bd660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3bd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3bd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3bdb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3bdca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3bc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3bc1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3bc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3bc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3beda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3bc660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7feb3b3a9570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7feb3b3a9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3a98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3a9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3a9c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3a7980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3a8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3a8660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3a87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3a8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3a8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3a8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3a7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3a71b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3a7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3a74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3a9da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3a7660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7feb3b3cd580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7feb3b3cd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3cd900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3cda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3cdc20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3cb980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3cc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3cc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3cc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3cc660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3cc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3cc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3ccb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3ccca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3cb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3cb1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3cb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3cb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3cddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3cb660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7feb3b421710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7feb3b421710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b421c90"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b421e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b420020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b41fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b420340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4204d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b420660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4207f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b420980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b420b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b420ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b420e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b41f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b41f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b41f440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b41f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b41f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4201b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b41f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b41fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7feb3b4088a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7feb3b4088a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b408c20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b408db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b407020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b406c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b407340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4074d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b407660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4077f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b407980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b407b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b407ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b407e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b406020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4062b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b406440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b4065d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b406760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4071b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4068f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b406a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7feb3b3f48a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7feb3b3f48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3f4c20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3f4db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3f2020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3f1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3f2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3f24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3f2660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3f27f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3f2980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3f2b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3f2ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3f2e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3f1020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3f12b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3f1440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3f15d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3f1760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3f21b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3f18f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3f1a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7feb3b3bcd40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7feb3b3bcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3bb400"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3b91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3bb720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3bb8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3bba40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3bbbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3bbd60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3ba020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3ba1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3ba340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3ba4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3ba760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3ba8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3baa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3bac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3bb590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3bada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7feb3b3d5d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7feb3b3d5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3d40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3d4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3d4400"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3d4720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3d48b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3d4a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3d4bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3d4d60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3d3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3d31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3d3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3d34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3d3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3d38f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3d3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3d3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3d4590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3d3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7feb3b452d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7feb3b452d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b451100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b451290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b451420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b44f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b451740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4518d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b451a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b451bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b451d80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b450020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4501b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b450340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4504d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b450760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4508f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b450a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b450c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4515b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b450da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b44f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7feb3b439e50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7feb3b439e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b438210"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b4383a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b438530"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b436340"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b438850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4389e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b438b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b438d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b437020"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4371b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b437340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b4374d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b437660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4378f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b437a80"/>
        <function-ref name="set" scoped="" ref="0x7feb3b437c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b437da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4386c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b436020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7feb3b3f98a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7feb3b3f98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3f9c20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3f9db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3f8020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3f7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3f8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3f84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3f8660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3f87f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3f8980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3f8b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3f8ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3f8e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3f7020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3f72b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3f7440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3f75d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3f7760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3f81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3f78f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3f7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7feb3b434e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7feb3b434e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b433210"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b4333a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b433530"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b431340"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b433850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b433b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b433d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b432020"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4321b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b432340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b4324d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b432660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4328f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b432a80"/>
        <function-ref name="set" scoped="" ref="0x7feb3b432c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b432da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4336c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b431020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7feb3b419020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7feb3b419020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b4193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b419530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b4196c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4174d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4199e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b419b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b419d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b418020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4181b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b418340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b418660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b418a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b418c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b418da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b417020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b419850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4171b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b417340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7feb3b400020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7feb3b400020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b4003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b400530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b4006c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3fe4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4009e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b400b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b400d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3ff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3ff1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3ff340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3ff4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3ff660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3ff7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3ffa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3ffc10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3ffda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3fe020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b400850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3fe1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7feb3b3eb020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7feb3b3eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3eb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3eb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3eb6c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3e94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3eb9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3ebb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3ebd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3ea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3ea1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3ea340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3ea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3ea660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3ea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3eaa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3eac10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3eada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3e9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3eb850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3e91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7feb3b3d0d50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7feb3b3d0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3cf100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3cf290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3cf420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3cf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3cf8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3cfa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3cfbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3cfd80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3ce020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3ce1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3ce340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3ce4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3ce760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3ce8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3cea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3cec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3cf5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3ceda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7feb3b45c530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7feb3b45c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b45c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b45ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b45cbd0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b46a980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b46b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b46b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b46b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b46b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b46b660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b46b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b46b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b46bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b46bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b46a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b46a1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b46a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b46a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b45cd60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b46a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b46a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7feb3b445580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7feb3b445580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b445900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b445a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b445c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b443980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b444020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b444340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b444660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4447f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b444980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b444b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b444ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b443020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4431b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b443340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4434d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b445db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b443660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7feb3b42b710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7feb3b42b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b42ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b42bc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b42bdb0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b429a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b42a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b42a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b42a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b42a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b42a7f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b42a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b42ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b42aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b42ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b429120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4292b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b429440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4295d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b42a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b429760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7feb3b4128a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7feb3b4128a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b412c20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b412db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b411020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b410c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b411340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4114d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b411660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4117f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b411980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b411b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b411ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b411e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b410020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4102b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b410440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b4105d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b410760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4111b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4108f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b410a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7feb3b3cbd50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7feb3b3cbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3ca100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3ca290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3ca420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3ca740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3ca8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3caa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3cabf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3cad80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3c9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3c91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3c9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3c94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3c9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3c98f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3c9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3c9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3ca5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3c9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7feb3b3c3570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7feb3b3c3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3c38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3c3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3c3c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3c1980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3c21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3c2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3c2660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3c27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3c2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3c2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3c2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3c1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3c11b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3c1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3c14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3c3da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3c1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7feb3b3b3570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7feb3b3b3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3b38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3b3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3b3c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3b1980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3b2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3b21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3b2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3b24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3b2660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3b27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3b2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3b2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3b2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3b1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3b11b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3b1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3b14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3b3da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3b1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7feb3b40d8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7feb3b40d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b40dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b40ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b40c020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b40bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b40c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b40c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b40c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b40c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b40c980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b40cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b40cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b40ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b40b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b40b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b40b440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b40b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b40b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b40c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b40b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b40ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7feb3b3c8580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7feb3b3c8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3c8900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3c8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3c8c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3c6980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3c7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3c7660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3c77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3c7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3c7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3c7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3c6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3c61b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3c6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3c64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3c8db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3c6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7feb3b457d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7feb3b457d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b456100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b456290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b456420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4541b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b456740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4568d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b456a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b456bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b456d80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b455020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4551b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b455340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4554d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b455760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4558f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b455a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b455c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4565b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b455da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b454020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7feb3b43ee50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7feb3b43ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b43d210"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b43d3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b43d530"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b43b340"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b43d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b43d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b43db70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b43dd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b43c020"/>
        <function-ref name="get" scoped="" ref="0x7feb3b43c1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b43c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b43c4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b43c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b43c8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b43ca80"/>
        <function-ref name="set" scoped="" ref="0x7feb3b43cc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b43cda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b43d6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b43b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b43b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7feb3b424e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7feb3b424e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b423210"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b4233a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b423530"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b421340"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b423850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b423b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b423d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b422020"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4221b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b422340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b4224d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b422660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4228f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b422a80"/>
        <function-ref name="set" scoped="" ref="0x7feb3b422c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b422da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4236c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b421020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7feb3b3d2580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7feb3b3d2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3d2900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3d2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3d2c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3d0980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3d1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3d1660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3d17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3d1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3d1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3d1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3d0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3d01b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3d0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3d04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3d2db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3d0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7feb3b3b9570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7feb3b3b9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3b98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3b9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3b9c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3b6980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3b7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3b71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3b7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3b7660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3b77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3b7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3b7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3b7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3b6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3b61b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3b6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3b64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3b9da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3b6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7feb3b41e020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7feb3b41e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b41e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b41e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b41e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b41c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b41e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b41eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b41ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b41d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b41d1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b41d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b41d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b41d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b41d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b41da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b41dc10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b41dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b41c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b41e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b41c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b41c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7feb3b405020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7feb3b405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b4053a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b405530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b4056c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4034d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4059e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b405b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b405d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b404020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4041b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b404340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4044d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b404660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b404a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b404c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b404da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b403020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b405850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4031b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b403340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7feb3b3f0020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7feb3b3f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3f03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3f0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3f06c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3ee4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3f09e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3f0b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3f0d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3ef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3ef1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3ef340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3ef4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3ef660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3ef7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3efa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3efc10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3efda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3ee020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3f0850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3ee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7feb3b44f580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7feb3b44f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b44f900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b44fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b44fc20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b44d980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b44e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b44e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b44e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b44e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b44e660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b44e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b44e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b44eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b44eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b44d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b44d1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b44d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b44d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b44fdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b44d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b44d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7feb3b3f6020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7feb3b3f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3f63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3f6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3f66c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3f44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3f69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3f6b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3f6d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3f51b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3f5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3f54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3f5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3f57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3f5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3f5c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3f5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3f4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3f6850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3f41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7feb3b44a580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7feb3b44a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b44a900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b44aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b44ac20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b448980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b449020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4491b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b449340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b449660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4497f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b449980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b449b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b449ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b448020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4481b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b448340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b4484d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b44adb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b448660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7feb3b431710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7feb3b431710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b431a90"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b431c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b431db0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b42fa80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b4301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b430340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b4304d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b430660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4307f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b430980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b430b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b430ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b430e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b42f120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b42f2b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b42f440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b42f5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b430020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b42f760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b42f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7feb3b4178a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7feb3b4178a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b417c20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b417db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b416020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b415c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b416340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b416660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b4167f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b416980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b416b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b416ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b416e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b415020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4152b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b415440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b4155d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b415760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4161b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4158f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b415a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7feb3b3fe8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7feb3b3fe8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3fec20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3fedb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3fd020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3fcc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3fd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3fd660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3fd7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3fd980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3fdb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3fdca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3fde30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3fc020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3fc2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3fc440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3fc5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3fc760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3fd1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3fc8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3fca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7feb3b3e98a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7feb3b3e98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3e9c20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3e9db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3e8020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3e7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3e8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3e84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3e8660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3e87f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3e8980"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3e8b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3e8ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3e8e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3e7020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3e72b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3e7440"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3e75d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3e7760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3e81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3e78f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3e7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7feb3b46ad50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7feb3b46ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b45b100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b45b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b45b420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4591b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b45b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b45b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b45ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b45bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b45bd80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b45a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b45a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b45a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b45a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b45a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b45a8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b45aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b45ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b45b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b45ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b459020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7feb3b443d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7feb3b443d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b442100"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b442290"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b442420"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4401b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b442740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4428d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b442a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b442bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b442d80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b441020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4411b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b441340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4414d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b441760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b4418f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b441a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b441c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4425b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b441da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b440020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7feb3b429e50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7feb3b429e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b428210"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b4283a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b428530"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b426340"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b428850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b4289e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b428b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b428d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b427020"/>
        <function-ref name="get" scoped="" ref="0x7feb3b4271b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b427340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b4274d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b427660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b4278f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b427a80"/>
        <function-ref name="set" scoped="" ref="0x7feb3b427c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b427da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b4286c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b426020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b4261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7feb3b40f020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7feb3b40f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b40f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b40f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b40f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b40d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b40f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b40fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b40fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b40e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b40e1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b40e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b40e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b40e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b40e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b40ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b40ec10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b40eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b40d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b40f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b40d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b40d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7feb3b3c1d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7feb3b3c1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3c00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3c0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3c0400"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3be1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3c0720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3c08b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3c0a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3c0bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3c0d60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3bf020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3bf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3bf340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3bf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3bf760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3bf8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3bfa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3bfc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3c0590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3bfda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7feb3b3ae560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7feb3b3ae560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3ae8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3aea70"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3aec00"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3ac980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3ad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3ad340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3ad660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3ad7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3ad980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3adb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3adca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3ac020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3ac1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3ac340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3ac4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3aed90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3ac660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7feb3b3dc580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7feb3b3dc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3dc900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3dca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3dcc20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3da980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3db1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3db340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3db660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3db7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3db980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3dbb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3dbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3da020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3da1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3da340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3da4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3dcdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3da660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3da7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7feb3b40a020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7feb3b40a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b40a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b40a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b40a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b4084d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b40a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b40ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b40ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b409020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b4091b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b409340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b4094d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b409660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b4097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b409a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b409c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b409da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b408020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b40a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b4081b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b408340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7feb3b3acd40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7feb3b3acd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3ab0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3ab270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3ab400"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3a91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3ab720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3ab8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3aba40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3abbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3abd60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3aa020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3aa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3aa340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3aa4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3aa760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3aa8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3aaa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3aac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3ab590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3aada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7feb3b3a4580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7feb3b3a4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3a4900"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3a4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3a4c20"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3a2980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3a31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3a3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3a34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3a3660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3a37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3a3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3a3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3a3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3a2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3a21b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3a2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3a24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3a4db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3a2660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7feb3b3e48f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7feb3b3e48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3e3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b3e33c0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3e36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3e3870"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3e3a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3e3b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3e3d20"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3e2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3e21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3e2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3e24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b3e2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3e28f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b3e2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3e2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3e3550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3e2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b39fd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b39fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3700e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b370270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b370400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b36e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b370720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3708b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b370a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b370bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b370d60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b36f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b36f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b36f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b36f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b36f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b36f8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b36fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b36fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b36fda0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b370590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b36e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b36b260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b36b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b36b5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b36b770"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b36b900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b369660"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b36bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b36bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b36a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b36a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b36a340"/>
        <function-ref name="get" scoped="" ref="0x7feb3b36a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b36a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b36a7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b36a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b36ac10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b36ada0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b369020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3691b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b369340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b36ba90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b366740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b366740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b366ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b366c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b366de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b364a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b365340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3654d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b365660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3657f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b365980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b365b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b365ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b365e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b364120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3642b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b364440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3645d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b364760"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b365020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b361b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b361b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b360020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b3601b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b360340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b35e020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b360660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3607f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b360980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b360b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b360ca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b360e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b35f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b35f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b35f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b35f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b35f760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b35f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b35fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b35fc10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b3604d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b35fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b35b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b35b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b35b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b35b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b35b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3594d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b35ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b35bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b35bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b35a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b35a1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b35a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b35a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b35a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b35a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b35aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b35ac10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b35ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b359020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3591b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b35b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b359340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b355540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b355540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3558c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b355a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b355be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b353980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b354020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b354340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b354660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b354980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b354b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b354ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b353020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3531b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b353340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b353660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b355d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b350b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b350b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b34f020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b34f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b34f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b34d020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b34f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b34f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b34f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b34fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b34fca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b34fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b34e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b34e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b34e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b34e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b34e760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b34e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b34ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b34ec10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b34f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b34eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b34a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b34a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b34a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b34a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b34a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3484d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b34aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b34abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b34ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b349020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3491b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b349340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3494d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b349660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b349a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b349c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b349da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b348020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3481b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b34a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b348340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b345540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b345540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3458c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b345a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b345be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b343980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b344020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b344340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b344660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3447f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b344980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b344b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b344ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b343020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3431b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b343340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3434d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b343660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b345d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b340b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b340b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b33f020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b33f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b33f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b33d020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b33f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b33f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b33f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b33fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b33fca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b33fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b33e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b33e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b33e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b33e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b33e760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b33e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b33ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b33ec10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b33f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b33eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b33a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b33a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b33a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b33a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b33a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3384d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b33aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b33abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b33ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b339020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3391b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b339340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b339660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3397f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b339a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b339c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b339da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b338020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3381b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b33a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b338340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b335540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b335540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3358c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b335a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b335be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b333980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b334020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b334340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b334660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3347f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b334980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b334b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b334ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b333020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3331b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b333340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3334d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b333660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b335d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b330d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b330d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b32e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b32e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b32e400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b32c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b32e720"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b32e8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b32ea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b32ebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b32ed60"/>
        <function-ref name="get" scoped="" ref="0x7feb3b32d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b32d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b32d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b32d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b32d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b32d8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b32da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b32dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b32dda0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b32e590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b32c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b329260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b329260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3295e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b329770"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b329900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b327660"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b329c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b329db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b328020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b328340"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3284d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b328660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b3287f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b328980"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b328c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b328da0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b327020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3271b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b327340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b329a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b324740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b324740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b324ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b324c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b324de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b322a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b3231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b323340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b3234d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b323660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3237f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b323980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b323b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b323ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b323e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b322120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3222b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b322440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3225d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b322760"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b323020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b31fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b31fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b31e020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b31e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b31e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b31c020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b31e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b31e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b31e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b31eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b31eca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b31ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b31d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b31d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b31d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b31d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b31d760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b31d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b31da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b31dc10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b31e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b31dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b319060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b319060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3193e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b319570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b319700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3174d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b319a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b319bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b319d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b318020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3181b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b318340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b318660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b318a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b318c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b318da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b317020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3171b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b319890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b317340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b314540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b314540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3148c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b314a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b314be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b312980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b313020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b313340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b313660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3137f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b313980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b313b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b313ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b312020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3121b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b312340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3124d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b312660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b314d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b30fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b30fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b30e020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b30e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b30e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b30c020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b30e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b30e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b30e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b30eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b30eca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b30ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b30d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b30d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b30d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b30d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b30d760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b30d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b30da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b30dc10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b30e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b30dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b309060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b309060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3093e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b309570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b309700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b3074d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b309a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b309bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b309d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b308020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b3081b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b308340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b3084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b308660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b3087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b308a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b308c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b308da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b307020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b3071b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b309890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b307340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b304540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b304540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b3048c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b304a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b304be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b301980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b302020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b3021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b302340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b3024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b302660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b3027f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b302980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b302b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b302ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b301020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b3011b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b301340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b3014d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b301660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b304d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b3017f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2feb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2feb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2fd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2fd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2fd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2fd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2fd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2fdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2fdca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2fde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2fc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2fc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2fc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2fc760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2fc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2fca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2fcc10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2fd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2fcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2f8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2f8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2f83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2f8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2f8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2f64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2f8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2f8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2f8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2f71b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2f7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2f74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2f7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2f77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2f7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2f7c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2f7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2f6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2f61b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2f8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2f3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2f3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2f38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2f3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2f3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2f1980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2f21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2f2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2f2660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2f27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2f2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2f2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2f2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2f1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2f11b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2f1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2f14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2f1660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2f3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2eedc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2eedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2ed180"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2ed310"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2ed4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2ed7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2ed950"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2edae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2edc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2ede00"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2ec020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2ec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2ec340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2ec4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2ec760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2ec8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2eca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2ecc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2ecda0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2ed630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2e8260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2e8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2e85e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2e8770"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2e8900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2e6660"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2e8c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2e8db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2e7020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2e7340"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2e74d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2e7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2e77f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2e7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2e7c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2e7da0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2e6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2e61b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2e6340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2e8a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2e3740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2e3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2e3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2e3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2e3de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2e1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2e2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2e24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2e2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2e27f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2e2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2e2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2e2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2e2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2e1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2e12b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2e1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2e15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2e1760"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2e2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2e18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2deb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2deb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2dd020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2dd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2dd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2db020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2dd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2dd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2dd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2ddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2ddca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2dde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2dc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2dc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2dc760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2dc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2dca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2dcc10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2dd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2d7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2d73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2d7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2d7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2d54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2d7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2d7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2d7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2d61b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2d6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2d64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2d6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2d67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2d6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2d6c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2d6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2d5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2d51b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2d7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2d2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2d2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2d28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2d2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2d2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2d0980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2d1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2d1660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2d17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2d1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2d1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2d1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2d0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2d01b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2d0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2d04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2d0660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2d2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2cdb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2cdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2cc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2cc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2cc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2cc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2cc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2ccb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2ccca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2cce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2cb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2cb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2cb760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2cb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2cba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2cbc10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2cc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2c7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2c73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2c7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2c7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2c54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2c7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2c7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2c7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2c6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2c61b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2c6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2c64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2c6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2c67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2c6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2c6c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2c6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2c5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2c51b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2c7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2c2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2c28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2c2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2c2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2c0980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2c1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2c11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2c1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2c1660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2c17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2c1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2c1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2c1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2c0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2c01b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2c0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2c04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2c0660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2c2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2bdb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2bdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2bc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2bc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2bc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2bc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2bc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2bcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2bcca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2bce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2bb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2bb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2bb760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2bb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2bba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2bbc10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2bc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2b7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2b73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2b7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2b7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2b54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2b7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2b7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2b7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2b6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2b61b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2b6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2b64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2b6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2b6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2b6c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2b6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2b5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2b51b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2b7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2b2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2b2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2b28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2b2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2b2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2af980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2b01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2b0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2b0660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2b07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2b0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2b0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2b0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2af020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2af1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2af340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2af4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2af660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2b2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2acb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2acb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2ab020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2ab1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2ab340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2a9020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2ab660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2ab7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2ab980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2abb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2abca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2abe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2aa1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2aa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2aa5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2aa760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2aa8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2aaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2aac10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2ab4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2aada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2a6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2a6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2a63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2a6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2a6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2a44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2a6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2a6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2a6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2a51b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2a5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2a54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2a5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2a57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2a5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b2a5c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2a5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b2a4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2a41b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2a6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b2a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b2a1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b2a1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2a18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b2a1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b2a1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b29f980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b2a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b2a0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2a04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2a0660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2a07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2a0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2a0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2a0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b29f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b29f1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b29f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b29f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b29f660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b2a1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b29f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b29cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b29cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b29b020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b29b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b29b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b299020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b29b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b29b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b29b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b29bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b29bca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b29be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b29a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b29a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b29a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b29a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b29a760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b29a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b29aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b29ac10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b29b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b29ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b296060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b296060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2963e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b296570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b296700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2944d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b296a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b296bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b296d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b295020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2951b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b295340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2954d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b295660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2957f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b295a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b295c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b295da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b294020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2941b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b296890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b294340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b291540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b291540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2918c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b291a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b291be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b28f980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b290020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b2901b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b290340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b2904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b290660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b2907f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b290980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b290b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b290ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b28f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b28f1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b28f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b28f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b28f660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b291d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b28f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b28cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b28cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b28b020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b28b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b28b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b289020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b28b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b28b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b28b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b28bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b28bca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b28be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b28a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b28a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b28a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b28a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b28a760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b28a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b28aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b28ac10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b28b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b28ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b286060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b286060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2863e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b286570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b286700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2834d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b286a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b286bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b286d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b284020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2841b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b284340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b284660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b284a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b284c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b284da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b283020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2831b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b286890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b283340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b280540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b280540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2808c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b280a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b280be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b27e980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b27f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b27f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b27f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b27f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b27f660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b27f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b27f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b27fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b27fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b27e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b27e1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b27e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b27e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b27e660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b280d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b27e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b27bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b27bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b27a020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b27a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b27a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b278020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b27a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b27a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b27a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b27ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b27aca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b27ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b279020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b2791b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b279340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b2795d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b279760"/>
        <function-ref name="set" scoped="" ref="0x7feb3b2798f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b279a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b279c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b27a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b279da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b275060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b275060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2753e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b275570"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b275700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b2734d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b275a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b275bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b275d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b274020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b2741b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b274340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b2744d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b274660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b2747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b274a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b274c10"/>
        <function-ref name="set" scoped="" ref="0x7feb3b274da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b273020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b2731b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b275890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b273340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feb3b270540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feb3b270540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b2708c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b270a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b270be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b26e980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b26f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b26f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b26f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b26f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b26f660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b26f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b26f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b26fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b26fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b26e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b26e1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b26e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b26e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b26e660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b270d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b26e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3b1e0610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3b1e0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b1e0990"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b1e0b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b1e0cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b1de980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b1df020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b1df1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b1df340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b1df4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b1df660"/>
        <function-ref name="get" scoped="" ref="0x7feb3b1df7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b1df980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b1dfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b1dfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b1de020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b1de1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b1de340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b1de4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b1de660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b1e0e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b1de7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3b1f2480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3b1f2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b1f2800"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b1f2990"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b1f2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b1f2cb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b1f2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b1e0020"/>
        <function-ref name="set" scoped="" ref="0x7feb3b1e01b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b1e0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3b1dbde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3b1dbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b1d9180"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b1d9310"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b1d94a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b1d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b1d97c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b1d9950"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b1d9ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b1d9c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b1d9e00"/>
        <function-ref name="get" scoped="" ref="0x7feb3b1d8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b1d81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b1d8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b1d84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b1d8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b1d88f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b1d8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b1d8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b1d8da0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b1d9630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b1d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3b1dcb20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3b1dcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b1db020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b1db1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b1db340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b1db4d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b1db660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b1db7f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b1db980"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b1dbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3b1d4480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3b1d4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b1d4800"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b1d4990"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3b1d4b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3b1d27f0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b1d4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b1d3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3b1d31b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3b1d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b1d34d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b1d3660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3b1d37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3b1d3980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3b1d3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3b1d3da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3b1d2020"/>
        <function-ref name="set" scoped="" ref="0x7feb3b1d21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3b1d2340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3b1d24d0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b1d4cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3b1d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3b1d51b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3b1d51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3b1d5530"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3b1d56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3b1d5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3b1d59e0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b1d5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3b1d5d00"/>
        <function-ref name="set" scoped="" ref="0x7feb3b1d4020"/>
        <function-ref name="clr" scoped="" ref="0x7feb3b1d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7feb3b132a50" loc="17:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7feb3b132a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3b132dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3b143020"/>
        <function-ref name="start" scoped="" ref="0x7feb3b1431b0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3b143340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7feb3b1c7cd0" loc="9:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7feb3b1c7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feb3b1c40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerTramaTDMA" ref="0x7feb3b1b7840" loc="11:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7feb3b1b7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3b1b6cf0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b1c1300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3b1b60d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3b1c1c00"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3b1b4660"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3b1b41e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3b1c1780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3b1c2480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3b1b66e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3b1c2950"/>
        <function-ref name="stop" scoped="" ref="0x7feb3b1c2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7feb3b155910" loc="13:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3b155910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3b155c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3b155e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3b1ad020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3b1ad1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3b1ad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7feb3b13a8f0" loc="15:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb3b13a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3b13ac70"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3b13ae00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3b144020"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3b1441b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3b144340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7feb3b135180" loc="16:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3b135180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3b135500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3b1c4360" loc="10:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3b1c4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3b1c46e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3b1c4870"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3b1c4a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3b1c4b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3b1c4d20"/>
        <function-ref name="get" scoped="" ref="0x7feb3b1c3020"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3b1c31b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3b1c37f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3b1c3340"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3b1c34d0"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3b1c3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7feb3b1b4cd0" loc="12:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7feb3b1b4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3b1af220"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b1b27c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3b1b1590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3b1b1110"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3b1afb20"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3b1af6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3b1b2c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3b1b3940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3b1b1ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3b1b3e10"/>
        <function-ref name="stop" scoped="" ref="0x7feb3b1b2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7feb3b1458d0" loc="14:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb3b1458d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb3b145c50"/>
        <function-ref name="source" scoped="" ref="0x7feb3b145de0"/>
        <function-ref name="address" scoped="" ref="0x7feb3b1ac020"/>
        <function-ref name="destination" scoped="" ref="0x7feb3b1ac1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7feb3b1ac340"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb3b1ac4d0"/>
        <function-ref name="type" scoped="" ref="0x7feb3b1ac660"/>
        <function-ref name="setType" scoped="" ref="0x7feb3b1ac7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb3b1ac980"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb3b1acb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb3b1acca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb3b10d980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="MasterAppC.TimerTramaTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3b10d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3ade1e80"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ade34a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3ade1260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3ade3da0"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3ade07a0"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3ade0320"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3ade3920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3ade45a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3ade1870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3ade4a70"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ade3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7feb3b105b60" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b105b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3b100110"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b1035f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3b1014a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3b101020"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3b100a10"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3b100590"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3b103a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3b104790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3b101ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3b104c60"/>
        <function-ref name="stop" scoped="" ref="0x7feb3b103170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7feb3b0fb700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7feb3b0fb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3b0f8c40"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0f91e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3b0f8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3b0f9ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3b0f6590"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3b0f6110"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3b0f9660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3b0fa390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3b0f8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3b0fa860"/>
        <function-ref name="stop" scoped="" ref="0x7feb3b0fad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feb3b0f51a0" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7feb3b0f51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3b0f5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3b0fe8c0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3b0fe8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3b0fec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb3aeb3870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb3aeb3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3aeb0090"/>
        <function-ref name="fired" scoped="" ref="0x7feb3aeb1090"/>
        <function-ref name="startAt" scoped="" ref="0x7feb3aeb1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3aeb1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb3aeb0550"/>
        <function-ref name="start" scoped="" ref="0x7feb3aeb26a0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3aeb2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3aeb3020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3aeb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3aeb33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb39c452a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb39c452a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb39c43b30"/>
        <function-ref name="fired" scoped="" ref="0x7feb39c44aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7feb39c434e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb39c43020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb39c42020"/>
        <function-ref name="start" scoped="" ref="0x7feb39c440d0"/>
        <function-ref name="stop" scoped="" ref="0x7feb39c445e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb39c47a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb39c47a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb39c47d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7feb39c2da80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feb39c2da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb39c2de00"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb39c2c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb39c2c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb39c2c340"/>
        <function-ref name="fired" scoped="" ref="0x7feb39c2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7feb39c2f020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feb39c2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb39c2f3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb39c2f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb39c2f6c0"/>
        <function-ref name="get" scoped="" ref="0x7feb39c2f850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb39c2f9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb39c2fb70"/>
        <function-ref name="getMode" scoped="" ref="0x7feb39c2fd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb39c2e020"/>
        <function-ref name="overflow" scoped="" ref="0x7feb39c2e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb39c2e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb39c2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7feb39c2e760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb39c2e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb39c2eae0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb39c2ec70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb39c2ee00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb39c2d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb39c2d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb39c2d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb39c2d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb39c2d660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb39c2d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7feb3b0bb1d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feb3b0bb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0bb550"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b0bb6e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0bb870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b0bba00"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7feb3b0c0b00" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3b0c0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3b0c0e80"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3b0bf030"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0bf1c0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b0bf350"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0bf4e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0bf670"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3b0bf800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0bf990"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3b0bfb20"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3b0bfcb0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3b0bfe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7feb3b0be720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3b0be720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b0beaa0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b0bec30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0bedc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b0bd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0bd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0bd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b0bd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0bd660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7feb3b0ab730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7feb3b0ab730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b0abab0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b0abc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0abdd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b0aa020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0aa1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0aa340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b0aa4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0aa660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0aa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7feb3b0a6280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7feb3b0a6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b0a6600"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b0a6790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0a6920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b0a6ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0a6c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0a6dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b0a5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0a51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7feb3b0ac700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7feb3b0ac700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0aca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b0acc10"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b0acda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0ab020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0ab1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b0ab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7feb3b099020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7feb3b099020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0993a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b099530"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b0996c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b099850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0999e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b099b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7feb3b0b2890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7feb3b0b2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0b2c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b0b2da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0ac020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b0ac1b0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7feb3b09a160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7feb3b09a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b09a4e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b09a670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b09a800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b09a990"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b09ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7feb3b090ae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7feb3b090ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b090e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b08f020"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b08f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b08f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b08f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b08f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7feb3b098020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7feb3b098020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b0983a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b098530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0986c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b098850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0989e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b098b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b098d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b097020"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7feb3b0b60c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7feb3b0b60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b0b6440"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b0b65d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0b6760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b0b68f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0b6a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0b6c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b0b6da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0b5020"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7feb3b0a0a20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7feb3b0a0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0a0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b09f020"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b09f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b09f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b09f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b09f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7feb3b0a1bb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7feb3b0a1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0a0020"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b0a01b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0a0340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b0a04d0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7feb3b0a2730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7feb3b0a2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b0a2ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b0a2c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0a2dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b0a1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0a11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0a1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b0a14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0a1660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7feb3b0a9a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7feb3b0a9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0a9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b0a8020"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b0a81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0a8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0a84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b0a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7feb3b096570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7feb3b096570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0968f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b096a80"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b096c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b096da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b095020"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b0951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7feb3b09fa50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7feb3b09fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b09fdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b09e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b09e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b09e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b09e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b09e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b09e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b09e980"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b09eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7feb3b0aabb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7feb3b0aabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0a9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b0a91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0a9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b0a94d0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7feb3b0ba830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7feb3b0ba830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3b0babb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3b0bad40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0b7020"/>
        <function-ref name="get" scoped="" ref="0x7feb3b0b71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0b7340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0b74d0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3b0b7660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0b77f0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3b0b7980"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3b0b7b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3b0b7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7feb3b097570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7feb3b097570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b097af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b097c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b097e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b096020"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7feb3b0b3410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7feb3b0b3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b0b3790"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b0b3920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0b3ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b0b3c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0b3dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0b2020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b0b21b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0b2340"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7feb3b0955a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7feb3b0955a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b095920"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b095ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b095c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b095dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b094020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0941b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b094340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0944d0"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b094660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7feb3b0ad410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7feb3b0ad410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0ad790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b0ad920"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b0adab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0adc40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0addd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b0b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7feb3b09dda0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7feb3b09dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b09c180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b09c310"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b09c4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b09c630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b09c7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b09c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7feb3b0b5570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7feb3b0b5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0b58f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b0b5a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0b5c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b0b5da0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7feb3b09d020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7feb3b09d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b09d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b09d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b09d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b09d850"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b09d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7feb3b093890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7feb3b093890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b093c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b093da0"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b092020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0921b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b092340"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b0924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7feb3b09cd40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7feb3b09cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b09b0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b09b270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b09b400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b09b590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b09b720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b09b8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b09ba40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b09bbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b09bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7feb3b0a89e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7feb3b0a89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3b0a8d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3b0a7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b0a71b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b0a7340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0a74d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0a7660"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3b0a77f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0a7980"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3b0a7b10"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3b0a7ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3b0a7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7feb3b0a4700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7feb3b0a4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0a4a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b0a4c10"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b0a4da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0a2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0a21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b0a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7feb3b094a20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7feb3b094a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b094da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b093020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0931b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b093340"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7feb3b091d40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7feb3b091d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0900e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b090270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b090400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b090590"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b090720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7feb3b0a5700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7feb3b0a5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b0a5b80"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b0a5d10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0a4020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b0a41b0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7feb3b0928c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7feb3b0928c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b092c40"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b092dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b091020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b0911b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b091340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b0914d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b091660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b0917f0"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b091980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7feb3b057940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7feb3b057940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b057cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7feb3b0572f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7feb3b0572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b057670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7feb3b055020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7feb3b055020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b0553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7feb3b058bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3b058bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b057020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb3b0593e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3b0593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3b059760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3b0598f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b059a80"/>
        <function-ref name="get" scoped="" ref="0x7feb3b059c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b059da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b058020"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3b0581b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b058340"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3b0584d0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3b058660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3b0587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7feb3b04f750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7feb3b04f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b04fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7feb3b04f100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7feb3b04f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b04f480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7feb3b04fda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7feb3b04fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b04e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7feb3b050a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3b050a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b050e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb3b051260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3b051260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3b0515e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3b051770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b051900"/>
        <function-ref name="get" scoped="" ref="0x7feb3b051a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b051c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b051db0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3b050020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0501b0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3b050340"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3b0504d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3b050660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3b0047a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3b0047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b004b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3b004cb0"/>
        <function-ref name="captured" scoped="" ref="0x7feb3b004e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b003020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0031b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3b003340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3b04b6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3b04b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3b04ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3b04bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b04bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3b005020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3b0051b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b005340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3b0054d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3b005660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3b0057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3b002c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3b002c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3b001020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3b005ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3b005ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3b005e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3b004020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3b0041b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3b004340"/>
        <function-ref name="fired" scoped="" ref="0x7feb3b0044d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3b003610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3b003610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3b003990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3b003b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3b003cb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3b003e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3b002020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3b0021b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3b002340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3b0024d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3b002660"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3b0027f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3b002980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3affdcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3affdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3affc0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3affc230"/>
        <function-ref name="captured" scoped="" ref="0x7feb3affc3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3affc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3affc6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3affc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afffb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afffb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3affe020"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3affe1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3affe340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3affe4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3affe660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3affe7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3affe980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3affeb10"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3affeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3affa2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3affa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3affa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3affd020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3affd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3affd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3affd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3affd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3affd850"/>
        <function-ref name="fired" scoped="" ref="0x7feb3affd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3affcb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3affcb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3affb020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3affb1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3affb340"/>
        <function-ref name="get" scoped="" ref="0x7feb3affb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3affb660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3affb7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3affb980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3affbb10"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3affbca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3affbe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3affa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3aff42f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3aff42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3aff4670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3aff4800"/>
        <function-ref name="captured" scoped="" ref="0x7feb3aff4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3aff4b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3aff4cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3aff4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3aff6220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3aff6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3aff65a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3aff6730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3aff68c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3aff6a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3aff6be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3aff6d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3aff5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3aff51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3aff5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3aff27a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3aff27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3aff2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3aff5610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3aff5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3aff5990"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3aff5b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3aff5cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3aff5e40"/>
        <function-ref name="fired" scoped="" ref="0x7feb3aff4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3aff3160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3aff3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3aff34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3aff3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3aff3800"/>
        <function-ref name="get" scoped="" ref="0x7feb3aff3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3aff3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3aff3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3aff3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3aff2020"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3aff21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3aff2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3aff24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3afed7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3afed7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afedb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3afedcb0"/>
        <function-ref name="captured" scoped="" ref="0x7feb3afede40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afec1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3afec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afef6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afef6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3afefa50"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3afefbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afefd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3afee020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3afee1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afee340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3afee4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3afee660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3afee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3afebc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3afebc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3afeeac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3afeeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afeee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3afed020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3afed1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3afed340"/>
        <function-ref name="fired" scoped="" ref="0x7feb3afed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3afec610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3afec610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3afec990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3afecb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afeccb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3afece40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afeb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afeb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3afeb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afeb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3afeb660"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3afeb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3afeb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3afe5cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3afe5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afe40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3afe4230"/>
        <function-ref name="captured" scoped="" ref="0x7feb3afe43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afe4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afe46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3afe4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afe7b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afe7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3afe6020"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3afe61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afe6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3afe64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3afe6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afe67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3afe6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3afe6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3afe6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3afe22f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3afe22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afe2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3afe5020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3afe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afe53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3afe5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3afe56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3afe5850"/>
        <function-ref name="fired" scoped="" ref="0x7feb3afe59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3afe4b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3afe4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3afe3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3afe31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afe3340"/>
        <function-ref name="get" scoped="" ref="0x7feb3afe34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afe3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afe37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3afe3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afe3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3afe3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3afe3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3afe2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3afdd2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3afdd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afdd670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3afdd800"/>
        <function-ref name="captured" scoped="" ref="0x7feb3afdd990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afddb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afddcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3afdde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afdf220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afdf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3afdf5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3afdf730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afdf8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3afdfa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3afdfbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afdfd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3afde020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3afde1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3afde340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3afdb7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3afdb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afdbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3afde610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3afde610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afde990"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3afdeb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3afdecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3afdee40"/>
        <function-ref name="fired" scoped="" ref="0x7feb3afdd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3afdc160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3afdc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3afdc4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3afdc670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afdc800"/>
        <function-ref name="get" scoped="" ref="0x7feb3afdc990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afdcb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afdccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3afdce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afdb020"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3afdb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3afdb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3afdb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3afd57a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3afd57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afd5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3afd5cb0"/>
        <function-ref name="captured" scoped="" ref="0x7feb3afd5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afd4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afd41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3afd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afd86d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afd86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3afd8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3afd8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afd8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3afd6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3afd61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afd6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3afd64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3afd6660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3afd67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3afd3c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3afd3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3afd6ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3afd6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afd6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3afd5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3afd51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3afd5340"/>
        <function-ref name="fired" scoped="" ref="0x7feb3afd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3afd4610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3afd4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3afd4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3afd4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afd4cb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3afd4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afd3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afd31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3afd3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afd34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3afd3660"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3afd37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3afd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3afcecb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3afcecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afcd0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3afcd230"/>
        <function-ref name="captured" scoped="" ref="0x7feb3afcd3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afcd550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afcd6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3afcd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afd0b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afd0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3afcf020"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3afcf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afcf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3afcf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3afcf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afcf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3afcf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3afcfb10"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3afcfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3afcb2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3afcb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afcb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3afce020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3afce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afce3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3afce530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3afce6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3afce850"/>
        <function-ref name="fired" scoped="" ref="0x7feb3afce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3afcdb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3afcdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3afcc020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3afcc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afcc340"/>
        <function-ref name="get" scoped="" ref="0x7feb3afcc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afcc660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afcc7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3afcc980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afccb10"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3afccca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3afcce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3afcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3afc52f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3afc52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afc5670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3afc5800"/>
        <function-ref name="captured" scoped="" ref="0x7feb3afc5990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afc5b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afc5cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3afc5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afc8220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afc8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3afc85a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3afc8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afc88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3afc8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3afc8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afc8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3afc6020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3afc61b0"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3afc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3afc37a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3afc37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afc3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3afc6610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3afc6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afc6990"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3afc6b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3afc6cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3afc6e40"/>
        <function-ref name="fired" scoped="" ref="0x7feb3afc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3afc4160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3afc4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3afc44e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3afc4670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afc4800"/>
        <function-ref name="get" scoped="" ref="0x7feb3afc4990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afc4b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afc4cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3afc4e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afc3020"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3afc31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3afc3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3afc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3afbe7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3afbe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afbeb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3afbecb0"/>
        <function-ref name="captured" scoped="" ref="0x7feb3afbee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afbd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afbd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3afbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feb3afc06d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feb3afc06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3afc0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3afc0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afc0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3afbf020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3afbf1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afbf340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3afbf4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3afbf660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3afbf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feb3afbcc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feb3afbcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feb3afbfac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feb3afbfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3afbfe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb3afbe020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb3afbe1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb3afbe340"/>
        <function-ref name="fired" scoped="" ref="0x7feb3afbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feb3afbd610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3afbd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3afbd990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3afbdb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3afbdcb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3afbde40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3afbc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3afbc1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3afbc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3afbc4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3afbc660"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3afbc7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3afbc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7feb3afb6bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7feb3afb6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7feb3afb73f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7feb3afb73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afb7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7feb3afb7b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7feb3afb7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7feb3afb6430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7feb3afb6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3afb67b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7feb39c23760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feb39c23760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb39c23ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb39c23c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb39c23e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb39c22020"/>
        <function-ref name="fired" scoped="" ref="0x7feb39c221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7feb39c26dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feb39c26dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb39c25180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb39c25310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb39c254a0"/>
        <function-ref name="get" scoped="" ref="0x7feb39c25630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb39c257c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb39c25950"/>
        <function-ref name="getMode" scoped="" ref="0x7feb39c25ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb39c25c70"/>
        <function-ref name="overflow" scoped="" ref="0x7feb39c25e00"/>
        <function-ref name="setMode" scoped="" ref="0x7feb39c24020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb39c241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb39c2abf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb39c2abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb39c264e0"/>
        <function-ref name="fired" scoped="" ref="0x7feb39c284e0"/>
        <function-ref name="startAt" scoped="" ref="0x7feb39c28e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb39c289a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb39c269a0"/>
        <function-ref name="start" scoped="" ref="0x7feb39c29a80"/>
        <function-ref name="stop" scoped="" ref="0x7feb39c28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb39c2a360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb39c2a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb39c2a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7feb39c24440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb39c24440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb39c247c0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb39c24950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb39c24ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb39c24c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb39c24e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb39c23020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb39c231b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb39c23340"/>
        <function-ref name="setControl" scoped="" ref="0x7feb39c234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feb3af2c8c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3af2c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3af31700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3af300d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3af31bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3af30590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7feb3af2a8e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feb3af2a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3af27780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3af26150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3af27c40"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3af26610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7feb3af15c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3af15c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3af14020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3af141b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3af14340"/>
        <function-ref name="get" scoped="" ref="0x7feb3af144d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3af14660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3af147f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3af14980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3af14b10"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3af14ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3af14e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3af13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feb3af24b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3af24b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3af169b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3af15360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3af16e70"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3af15820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7feb3aef20f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7feb3aef20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3aef0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3aef09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3aef04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3aef0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feb3af10cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3af10cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3aef4b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3aef3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3aef3090"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3aef3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb39c405f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb39c405f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb39c3de50"/>
        <function-ref name="fired" scoped="" ref="0x7feb39c3fe00"/>
        <function-ref name="startAt" scoped="" ref="0x7feb39c3d800"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb39c3d340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb39c3c340"/>
        <function-ref name="start" scoped="" ref="0x7feb39c3f430"/>
        <function-ref name="stop" scoped="" ref="0x7feb39c3f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7feb39c3ad20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7feb39c3ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb39c36670"/>
        <function-ref name="fired" scoped="" ref="0x7feb39c37550"/>
        <function-ref name="startAt" scoped="" ref="0x7feb39c36020"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb39c37a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb39c36b30"/>
        <function-ref name="start" scoped="" ref="0x7feb39c39b60"/>
        <function-ref name="stop" scoped="" ref="0x7feb39c37090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feb39c3c9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb39c3c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb39c3b7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb39c3a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb39c3bca0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb39c3a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7feb3ae7e9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7feb3ae7e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3ae7ed40"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3ae7d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7feb3ae82850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb3ae82850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3ae7e090"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ae80090"/>
        <function-ref name="startAt" scoped="" ref="0x7feb3ae80a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3ae80550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb3ae7e550"/>
        <function-ref name="start" scoped="" ref="0x7feb3ae816a0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ae81bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb3ae872f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3ae872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3ae83870"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ae86e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3ae85c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3ae85780"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3ae821e0"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3ae83cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3ae85300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3ae86020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3ae83260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3ae864f0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ae869c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7feb3adfe020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7feb3adfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3adfb630"/>
        <function-ref name="fired" scoped="" ref="0x7feb3adfda60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3adfc920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3adfc4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3adf9020"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3adfbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3adfc020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3adfec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3adfb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3adfd110"/>
        <function-ref name="stop" scoped="" ref="0x7feb3adfd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7feb3adf9450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7feb3adf9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7feb3adf97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb3ae068e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3ae068e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3ae00020"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ae034c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3ae01300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3ae03e00"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3ae00960"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3ae004c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3ae03960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3ae04560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3ae01930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3ae04a50"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ae03020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7feb39a42100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7feb39a42100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb39a42480"/>
        <function-ref name="runTask" scoped="" ref="0x7feb39a42610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7feb39a4a3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7feb39a4a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb39a46870"/>
        <function-ref name="fired" scoped="" ref="0x7feb39a48e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb39a47c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb39a47780"/>
        <function-ref name="getdt" scoped="" ref="0x7feb39a451e0"/>
        <function-ref name="gett0" scoped="" ref="0x7feb39a46cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb39a47300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb39a48020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb39a46260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb39a484f0"/>
        <function-ref name="stop" scoped="" ref="0x7feb39a489c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7feb39a43a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7feb39a43a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7feb39a43dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7feb39a455d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7feb39a455d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7feb39a43660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7feb39a437f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7feb39a45c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7feb39a45e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7feb39a43020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7feb39a431b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7feb39a43340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7feb39a434d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7feb39a45950"/>
        <function-ref name="node_id" scoped="" ref="0x7feb39a45ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb39a51db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb39a51db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb39a4b470"/>
        <function-ref name="fired" scoped="" ref="0x7feb39a4e9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb39a4d7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb39a4d320"/>
        <function-ref name="getdt" scoped="" ref="0x7feb39a4bdb0"/>
        <function-ref name="gett0" scoped="" ref="0x7feb39a4b910"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb39a4ee50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb39a50a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb39a4ddf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb39a4e020"/>
        <function-ref name="stop" scoped="" ref="0x7feb39a4e510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feb3adf6020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7feb3adf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3adf6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feb3adec300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3adec300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3adeb150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3adebad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3adeb610"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3adea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb3adde260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="MasterAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3adde260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3adda6e0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3adddca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3addba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3addb5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3add9020"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3addab60"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3addb170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3addee50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3adda0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3addd350"/>
        <function-ref name="stop" scoped="" ref="0x7feb3addd820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feb3add8680" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feb3add8680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3add8a00"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3add8b90"/>
        <function-ref name="start" scoped="" ref="0x7feb3add8d20"/>
        <function-ref name="stop" scoped="" ref="0x7feb3add5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feb3add57f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb3add57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3add5b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3add5d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3add4020"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3add41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3add4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feb3add2880" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7feb3add2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3add2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feb3add1020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3add1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3add13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3add1530"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3add16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3add1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3add19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7feb3adcd310" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3adcd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3adc8880"/>
        <function-ref name="clear" scoped="" ref="0x7feb3adc0020"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3adc8150"/>
        <function-ref name="set" scoped="" ref="0x7feb3adc0750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feb3adb3130" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3adb3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feb3adb34b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feb3adb3640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feb3adb37d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feb3adb3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3add4b20" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3add4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3add2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feb3adce080" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3adce080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb3adce400"/>
        <function-ref name="noAck" scoped="" ref="0x7feb3adce590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb3adce720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feb3add1c90" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb3add1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb3add00a0"/>
        <function-ref name="source" scoped="" ref="0x7feb3add0230"/>
        <function-ref name="address" scoped="" ref="0x7feb3add03c0"/>
        <function-ref name="destination" scoped="" ref="0x7feb3add0550"/>
        <function-ref name="setSource" scoped="" ref="0x7feb3add06e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb3add0870"/>
        <function-ref name="type" scoped="" ref="0x7feb3add0a00"/>
        <function-ref name="setType" scoped="" ref="0x7feb3add0b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb3add0d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb3adcf020"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb3adcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feb3adbe3f0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feb3adbe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3adbd970"/>
        <function-ref name="clear" scoped="" ref="0x7feb3adbc0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3adbd240"/>
        <function-ref name="set" scoped="" ref="0x7feb3adbc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feb3ada7cc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feb3ada7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3ada60a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3ada6230"/>
        <function-ref name="start" scoped="" ref="0x7feb3ada63c0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ada6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7feb3ad8de30" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3ad8de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3ad961e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3ad96370"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3ad96500"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3ad96690"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3ad96820"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3ad969b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feb3ad80d20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7feb3ad80d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feb3ad8a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feb3ada18f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3ada18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ada1c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3ada1e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ada0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3ada01b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3ada0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feb3ada6d20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb3ada6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3ada50e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ada5270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3ada5400"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3ada5590"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3ada5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feb3ada4c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7feb3ada4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3ada2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7feb3ad989b0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3ad989b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3ad98d30"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3ad9f020"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3ad9f1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3ad9f340"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3ad9f4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3ad9f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feb3ad96cb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3ad96cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feb3ad8c0a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feb3ad8c230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feb3ad8c3c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feb3ad8c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3ada4020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3ada4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3ada43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feb3ad9f990" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3ad9f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb3ad9fd10"/>
        <function-ref name="noAck" scoped="" ref="0x7feb3ad9e020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb3ad9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feb3ad8b020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7feb3ad8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feb3ad8b3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7feb3ad8b530"/>
        <function-ref name="getRetries" scoped="" ref="0x7feb3ad8b6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feb3ad8b850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feb3ad8b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feb3ada22d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb3ada22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb3ada2650"/>
        <function-ref name="source" scoped="" ref="0x7feb3ada27e0"/>
        <function-ref name="address" scoped="" ref="0x7feb3ada2970"/>
        <function-ref name="destination" scoped="" ref="0x7feb3ada2b00"/>
        <function-ref name="setSource" scoped="" ref="0x7feb3ada2c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb3ada2e20"/>
        <function-ref name="type" scoped="" ref="0x7feb3ada1020"/>
        <function-ref name="setType" scoped="" ref="0x7feb3ada11b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb3ada1340"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb3ada14d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb3ada1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feb3ad95c70" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3ad95c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feb3ad97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feb3ad83b70" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad83b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3ad7d020"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3ad7d1b0"/>
        <function-ref name="start" scoped="" ref="0x7feb3ad7d340"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ad7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feb3ad699d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3ad699d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feb3ad69d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feb3ad68b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7feb3ad68b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feb3ad67020"/>
        <function-ref name="setRetries" scoped="" ref="0x7feb3ad671b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7feb3ad67340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feb3ad674d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feb3ad67660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7feb3ad6a020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3ad6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3ad6a3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3ad6a530"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3ad6a6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3ad6a850"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3ad6a9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3ad6ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7feb3ad75990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7feb3ad75990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3ad75d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ad6d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3ad6d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3ad6d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3ad6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feb3ad68080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3ad68080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feb3ad68400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feb3ad68590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feb3ad68720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feb3ad688b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7feb3ad76500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7feb3ad76500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3ad76880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feb3ad69020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3ad69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb3ad693a0"/>
        <function-ref name="noAck" scoped="" ref="0x7feb3ad69530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb3ad696c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3ad7c210" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3ad7c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3ad7c590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3ad7c720"/>
        <function-ref name="request" scoped="" ref="0x7feb3ad7c8b0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3ad7ca40"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3ad7cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7feb3ad6c6f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7feb3ad6c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3ad6ca70"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ad6cc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3ad6cd90"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3ad76020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3ad761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7feb3ad76bc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7feb3ad76bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ad75020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3ad751b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ad75340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3ad754d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3ad75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7feb3ad6d840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3ad6d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3ad6dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feb3ad64390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad64390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3ad64710"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3ad648a0"/>
        <function-ref name="start" scoped="" ref="0x7feb3ad64a30"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ad64bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7feb3ad61330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3ad61330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3ad616b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3ad61840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3ad619d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3ad61b60"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3ad61cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3ad61e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3ad64e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3ad64e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3ad62220"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ad623b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3ad62540"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3ad626d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3ad62860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3ad62b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3ad62b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3ad61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feb3ad60e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feb3ad60e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3ad5d220"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3ad5d3b0"/>
        <function-ref name="start" scoped="" ref="0x7feb3ad5d540"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ad5d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7feb3ad5c7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3ad5c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3ad5cb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3ad5ccf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3ad5ce80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3ad5b030"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3ad5b1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3ad5b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7feb3ad4f060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7feb3ad4f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3ad4f3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3ad4f570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3ad4f700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3ad4f890"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3ad4fa20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3ad4fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7feb3ad46330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3ad46330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3ad466b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3ad46840"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3ad469d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3ad46b60"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3ad46cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3ad46e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7feb3ad482a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7feb3ad482a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3ad48620"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3ad487b0"/>
        <function-ref name="modify" scoped="" ref="0x7feb3ad48940"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3ad48ad0"/>
        <function-ref name="resend" scoped="" ref="0x7feb3ad48c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3ad5d990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3ad5d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3ad5dd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ad5c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3ad5c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3ad5c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3ad5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7feb3ad45420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7feb3ad45420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7feb3ad457a0"/>
        <function-ref name="rand32" scoped="" ref="0x7feb3ad45930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7feb3ad50760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7feb3ad50760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feb3ad50ae0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ad50c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7feb3ad3e920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3ad3e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3ad3eca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3ad3ee30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3ad43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7feb3ad53b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7feb3ad53b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7feb3ad59020"/>
        <function-ref name="rfOff" scoped="" ref="0x7feb3ad591b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7feb3ad59340"/>
        <function-ref name="startVReg" scoped="" ref="0x7feb3ad594d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7feb3ad59660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7feb3ad597f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7feb3ad59980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7feb3ad59b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3ad45bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3ad45bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3ad47020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3ad471b0"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3ad47340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3ad474d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3ad47660"/>
        <function-ref name="get" scoped="" ref="0x7feb3ad477f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3ad47980"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3ad46020"/>
        <function-ref name="set" scoped="" ref="0x7feb3ad47b10"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3ad47ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3ad47e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7feb3ad5b640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3ad5b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3ad5b9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3ad5bb50"/>
        <function-ref name="request" scoped="" ref="0x7feb3ad5bce0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3ad5be70"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3ad5a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7feb3ad42110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7feb3ad42110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3ad42590"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3ad42720"/>
        <function-ref name="isState" scoped="" ref="0x7feb3ad428b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3ad42a40"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3ad42bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3ad42d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7feb3ad34b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7feb3ad34b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3ad33020"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3ad331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7feb3ad35ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7feb3ad35ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3ad34020"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3ad341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7feb3ad36c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7feb3ad36c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3ad35020"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3ad351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7feb3acdcdc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7feb3acdcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7feb3ace8180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7feb3ace8310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7feb3ace84a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7feb3ace8630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7feb3ace87c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7feb3ace8950"/>
        <function-ref name="setChannel" scoped="" ref="0x7feb3ace8ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7feb3ace8c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7feb3ace8e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7feb3ace7020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7feb3ace71b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7feb3ace7340"/>
        <function-ref name="sync" scoped="" ref="0x7feb3ace74d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7feb3ace7760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7feb3ace78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7feb3acd90c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7feb3acd90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acd9cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3acd6170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7feb3ace7bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7feb3ace7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7feb3acdb020"/>
        <function-ref name="rfOff" scoped="" ref="0x7feb3acdb1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7feb3acdb340"/>
        <function-ref name="startVReg" scoped="" ref="0x7feb3acdb4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7feb3acdb660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7feb3acdb7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7feb3acdb980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7feb3acdbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3acec950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3acec950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3aceccd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3acece60"/>
        <function-ref name="request" scoped="" ref="0x7feb3ace9020"/>
        <function-ref name="granted" scoped="" ref="0x7feb3ace91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3ace9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7feb3acd2970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7feb3acd2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7feb3acd2cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7feb3acd2e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7feb3acd1030"/>
        <function-ref name="syncDone" scoped="" ref="0x7feb3acd11c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7feb3acd1350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7feb3acd14e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7feb3acd1670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7feb3acd1800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7feb3acd1990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7feb3acd1b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7feb3acd1cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7feb3acd1e40"/>
        <function-ref name="sync" scoped="" ref="0x7feb3acd0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7feb3acd02b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7feb3acd0440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7feb3acb18e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3acb18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb1c60"/>
        <function-ref name="write" scoped="" ref="0x7feb3acb1df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7feb3accc020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7feb3accc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7feb3accc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7feb3accca10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7feb3accca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3acc82a0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3acc92a0"/>
        <function-ref name="startAt" scoped="" ref="0x7feb3acc9c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3acc9760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb3acc8760"/>
        <function-ref name="start" scoped="" ref="0x7feb3acca890"/>
        <function-ref name="stop" scoped="" ref="0x7feb3accada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7feb3acb3710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3acb3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb3a90"/>
        <function-ref name="write" scoped="" ref="0x7feb3acb3c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7feb3acc6e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7feb3acc6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3acc5220"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3acc53b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3acc5540"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3acc56d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3acc5860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3acc59f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3acc5b80"/>
        <function-ref name="clr" scoped="" ref="0x7feb3acc5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7feb3accfb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7feb3accfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acce750"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3accebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7feb3ac9f820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7feb3ac9f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3ac9fba0"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3ac9fd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7feb3acb01c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7feb3acb01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb0540"/>
        <function-ref name="write" scoped="" ref="0x7feb3acb06d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7feb3acb0a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7feb3acb0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb0df0"/>
        <function-ref name="write" scoped="" ref="0x7feb3acaf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7feb3acb4550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7feb3acb4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb48d0"/>
        <function-ref name="write" scoped="" ref="0x7feb3acb4a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7feb3acba390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feb3acba390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7feb3acba710"/>
        <function-ref name="changed" scoped="" ref="0x7feb3acba8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7feb3acbaa30"/>
        <function-ref name="setAddress" scoped="" ref="0x7feb3acbabc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7feb3acc8c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7feb3acc8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3acc6020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3acc61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3acc6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3acc64d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3acc6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3acc67f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3acc6980"/>
        <function-ref name="clr" scoped="" ref="0x7feb3acc6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7feb3acad120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3acad120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3acad6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7feb3acc40f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7feb3acc40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3acc4470"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3acc4600"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3acc4790"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3acc4920"/>
        <function-ref name="get" scoped="" ref="0x7feb3acc4ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3acc4c40"/>
        <function-ref name="set" scoped="" ref="0x7feb3acc4dd0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3acc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3acd3510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3acd3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3acd3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7feb3acb1020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3acb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb13a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3acb1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7feb3acada40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7feb3acada40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3acaddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7feb3acac1d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7feb3acac1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3acac550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3acac6e0"/>
        <function-ref name="request" scoped="" ref="0x7feb3acac870"/>
        <function-ref name="granted" scoped="" ref="0x7feb3acaca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3acacb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7feb3acaad90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7feb3acaad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3aca9180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3aca9310"/>
        <function-ref name="request" scoped="" ref="0x7feb3aca94a0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3aca9630"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3aca97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7feb3acd0740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7feb3acd0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7feb3acd0ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7feb3acd0c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7feb3acd0de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7feb3accf020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7feb3accf1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7feb3accf340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7feb3accf4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7feb3accf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7feb3acb4e00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7feb3acb4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb31c0"/>
        <function-ref name="write" scoped="" ref="0x7feb3acb3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7feb3acb2be0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7feb3acb2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acb4020"/>
        <function-ref name="write" scoped="" ref="0x7feb3acb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7feb3acab2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7feb3acab2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3acab630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3aca9a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3aca9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3aca9e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3aca8020"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3aca81b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3aca8340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3aca84d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3aca8660"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3aca87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3aca8e30"/>
        <function-ref name="set" scoped="" ref="0x7feb3aca8980"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3aca8b10"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3aca8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7feb3aca0940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7feb3aca0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3aca0cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3aca0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3acd3b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3acd3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3acd2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3acd21b0"/>
        <function-ref name="request" scoped="" ref="0x7feb3acd2340"/>
        <function-ref name="granted" scoped="" ref="0x7feb3acd24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3acd2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7feb3acbe5e0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7feb3acbe5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acbe960"/>
        <function-ref name="write" scoped="" ref="0x7feb3acbeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7feb3acb6c30" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7feb3acb6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3acbe0e0"/>
        <function-ref name="write" scoped="" ref="0x7feb3acbe270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7feb3acbfc00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7feb3acbfc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3acc2020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3acc21b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7feb3acc2340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7feb3acc24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7feb3acaa020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7feb3acaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3acaa3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3acaa530"/>
        <function-ref name="request" scoped="" ref="0x7feb3acaa6c0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3acaa850"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3acaa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7feb3acab9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7feb3acab9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3acabd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3ac29c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3ac29c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3ac26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7feb3ac26690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7feb3ac26690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3ac22020"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ac23020"/>
        <function-ref name="startAt" scoped="" ref="0x7feb3ac239a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3ac234e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb3ac224e0"/>
        <function-ref name="start" scoped="" ref="0x7feb3ac255b0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3ac25ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3ac21a20" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3ac21a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3ac21da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7feb3ac202e0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7feb3ac202e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3abe4b30"/>
        <function-ref name="fired" scoped="" ref="0x7feb3abe6ae0"/>
        <function-ref name="startAt" scoped="" ref="0x7feb3abe44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3abe4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb3abe3020"/>
        <function-ref name="start" scoped="" ref="0x7feb3abe6110"/>
        <function-ref name="stop" scoped="" ref="0x7feb3abe6620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb399ea690" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb399ea690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb399e7020"/>
        <function-ref name="fired" scoped="" ref="0x7feb399e8020"/>
        <function-ref name="startAt" scoped="" ref="0x7feb399e89a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb399e84e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb399e74e0"/>
        <function-ref name="start" scoped="" ref="0x7feb399e95b0"/>
        <function-ref name="stop" scoped="" ref="0x7feb399e9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb399ecdf0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb399ecdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb399ea1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb399e3870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb399e3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb399df090"/>
        <function-ref name="fired" scoped="" ref="0x7feb399e0090"/>
        <function-ref name="startAt" scoped="" ref="0x7feb399e0a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb399e0550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb399df550"/>
        <function-ref name="start" scoped="" ref="0x7feb399e16a0"/>
        <function-ref name="stop" scoped="" ref="0x7feb399e1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb399e3020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb399e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb399e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7feb399c9020" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feb399c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb399c93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb399c9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb399c96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb399c9850"/>
        <function-ref name="fired" scoped="" ref="0x7feb399c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7feb399cc570" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feb399cc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb399cc8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb399cca80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb399ccc10"/>
        <function-ref name="get" scoped="" ref="0x7feb399ccda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb399cb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb399cb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb399cb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb399cb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb399cb660"/>
        <function-ref name="setMode" scoped="" ref="0x7feb399cb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb399cb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7feb399cbc10" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb399cbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb399ca020"/>
        <function-ref name="getControl" scoped="" ref="0x7feb399ca1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb399ca340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb399ca4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb399ca660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb399ca7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb399ca980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb399cab10"/>
        <function-ref name="setControl" scoped="" ref="0x7feb399caca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7feb399c0da0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feb399c0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb399bf180"/>
        <function-ref name="setEvent" scoped="" ref="0x7feb399bf310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feb399bf4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feb399bf630"/>
        <function-ref name="fired" scoped="" ref="0x7feb399bf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7feb399c24c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feb399c24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb399c2840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb399c29d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb399c2b60"/>
        <function-ref name="get" scoped="" ref="0x7feb399c2cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb399c2e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb399c1030"/>
        <function-ref name="getMode" scoped="" ref="0x7feb399c11c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb399c1350"/>
        <function-ref name="overflow" scoped="" ref="0x7feb399c14e0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb399c1670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb399c1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb399c6340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb399c6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb399c4ba0"/>
        <function-ref name="fired" scoped="" ref="0x7feb399c5b80"/>
        <function-ref name="startAt" scoped="" ref="0x7feb399c4550"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb399c4090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb399c2090"/>
        <function-ref name="start" scoped="" ref="0x7feb399c51b0"/>
        <function-ref name="stop" scoped="" ref="0x7feb399c56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb399c7a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb399c7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb399c7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7feb399c1a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb399c1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb399c1e10"/>
        <function-ref name="getControl" scoped="" ref="0x7feb399c0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb399c01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb399c0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb399c04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb399c0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb399c07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb399c0980"/>
        <function-ref name="setControl" scoped="" ref="0x7feb399c0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feb3ac09650" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3ac09650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3ac085b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3ac06020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3ac08a70"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3ac064e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7feb3ac006d0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7feb3ac006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3abff5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3abfd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3abffa70"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3abfd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feb3ac032e0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3ac032e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3ac01110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3ac01a90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3ac015d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3ac00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feb399dda90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feb399dda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb399d92e0"/>
        <function-ref name="fired" scoped="" ref="0x7feb399db2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7feb399dbc60"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb399db7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb399d97a0"/>
        <function-ref name="start" scoped="" ref="0x7feb399dc8d0"/>
        <function-ref name="stop" scoped="" ref="0x7feb399dcde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7feb399d6210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7feb399d6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb399d3b30"/>
        <function-ref name="fired" scoped="" ref="0x7feb399d5a60"/>
        <function-ref name="startAt" scoped="" ref="0x7feb399d34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb399d3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb399d2020"/>
        <function-ref name="start" scoped="" ref="0x7feb399d5090"/>
        <function-ref name="stop" scoped="" ref="0x7feb399d55a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feb399d9e10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb399d9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb399d8ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb399d7670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb399d71b0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb399d7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7feb3abde6a0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7feb3abde6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abdea20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abdebb0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abded40"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abdd020"/>
        <function-ref name="get" scoped="" ref="0x7feb3abdd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abdd340"/>
        <function-ref name="set" scoped="" ref="0x7feb3abdd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abdd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7feb3abdd9d0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7feb3abdd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abddd50"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abdc020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abdc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abdc340"/>
        <function-ref name="get" scoped="" ref="0x7feb3abdc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abdc660"/>
        <function-ref name="set" scoped="" ref="0x7feb3abdc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abdc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7feb3abdcce0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7feb3abdcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abdb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abdb230"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abdb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abdb550"/>
        <function-ref name="get" scoped="" ref="0x7feb3abdb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abdb870"/>
        <function-ref name="set" scoped="" ref="0x7feb3abdba00"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abdbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7feb3abdf370" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7feb3abdf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abdf6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abdf880"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abdfa10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abdfba0"/>
        <function-ref name="get" scoped="" ref="0x7feb3abdfd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abde020"/>
        <function-ref name="set" scoped="" ref="0x7feb3abde1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abde340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7feb3abd9380" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7feb3abd9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abd9700"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abd9890"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abd9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abd9bb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3abd9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abd8020"/>
        <function-ref name="set" scoped="" ref="0x7feb3abd81b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abd8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7feb3abe00e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7feb3abe00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abe0460"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abe05f0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abe0780"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abe0910"/>
        <function-ref name="get" scoped="" ref="0x7feb3abe0aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abe0c30"/>
        <function-ref name="set" scoped="" ref="0x7feb3abe0dc0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abdf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7feb3abda020" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7feb3abda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abda3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abda530"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abda6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abda850"/>
        <function-ref name="get" scoped="" ref="0x7feb3abda9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abdab70"/>
        <function-ref name="set" scoped="" ref="0x7feb3abdad00"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3abd5930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abd5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abd5cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abd5e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3abd4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3abd3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abd4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abd44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3abd4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3abd47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abd4980"/>
        <function-ref name="get" scoped="" ref="0x7feb3abd4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3abd4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3abd4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3abd3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3abd32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3abd3440"/>
        <function-ref name="set" scoped="" ref="0x7feb3abd35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3abd3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3abd38f0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abd41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3abd3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3abd7710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abd7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abd7a90"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abd7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abd7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abd5020"/>
        <function-ref name="get" scoped="" ref="0x7feb3abd51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abd5340"/>
        <function-ref name="set" scoped="" ref="0x7feb3abd54d0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abd5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3abcf020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abcf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abcf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3abcf6c0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3abcd4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abcf9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abcfb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3abcfd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3abce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abce1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3abce340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3abce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3abce660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3abce7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3abcea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3abcec10"/>
        <function-ref name="set" scoped="" ref="0x7feb3abceda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3abcd020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3abcd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abcf850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3abcd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3abd1da0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abd1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abd0180"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abd0310"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abd04a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abd0630"/>
        <function-ref name="get" scoped="" ref="0x7feb3abd07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abd0950"/>
        <function-ref name="set" scoped="" ref="0x7feb3abd0ae0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abd0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3abca610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abca610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abca990"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abcab20"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3abcacb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3abc8980"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abc9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abc91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3abc9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3abc94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abc9660"/>
        <function-ref name="get" scoped="" ref="0x7feb3abc97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3abc9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3abc9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3abc9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3abc8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3abc81b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3abc8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3abc84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3abc8660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abcae40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3abc87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3abcb4a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abcb4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abcb820"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abcb9b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abcbb40"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abcbcd0"/>
        <function-ref name="get" scoped="" ref="0x7feb3abcbe60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abca020"/>
        <function-ref name="set" scoped="" ref="0x7feb3abca1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3abc5c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abc5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abc4020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abc41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3abc4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3abc2020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abc4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abc47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3abc4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3abc4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abc4ca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3abc4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3abc3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3abc31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3abc3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3abc35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3abc3760"/>
        <function-ref name="set" scoped="" ref="0x7feb3abc38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3abc3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3abc3c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abc44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3abc3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3abc6b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abc6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abc6e80"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abc5030"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abc51c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abc5350"/>
        <function-ref name="get" scoped="" ref="0x7feb3abc54e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abc5670"/>
        <function-ref name="set" scoped="" ref="0x7feb3abc5800"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abc5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3abbf2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abbf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abbf670"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abbf800"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3abbf990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3abbc660"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abbfcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abbfe40"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3abbd020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3abbd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abbd340"/>
        <function-ref name="get" scoped="" ref="0x7feb3abbd4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3abbd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3abbd7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3abbd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3abbdc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3abbdda0"/>
        <function-ref name="set" scoped="" ref="0x7feb3abbc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3abbc1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3abbc340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abbfb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3abbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3abc0020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abc03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abc0530"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abc06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abc0850"/>
        <function-ref name="get" scoped="" ref="0x7feb3abc09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abc0b70"/>
        <function-ref name="set" scoped="" ref="0x7feb3abc0d00"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abbf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3abb97a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abb97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abb9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abb9cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3abb9e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3abb7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abb81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abb8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3abb84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3abb8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abb87f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3abb8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3abb8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3abb8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3abb8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3abb7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3abb72b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3abb7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3abb75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3abb7760"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abb8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3abb78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3abba630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abba630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abba9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abbab40"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abbacd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abbae60"/>
        <function-ref name="get" scoped="" ref="0x7feb3abb9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abb91b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3abb9340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abb94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3abb4c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3abb4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abb3020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abb31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3abb3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3abb1020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abb3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abb37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3abb3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3abb3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abb3ca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3abb3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3abb2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3abb21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3abb2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3abb25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3abb2760"/>
        <function-ref name="set" scoped="" ref="0x7feb3abb28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3abb2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3abb2c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abb34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3abb2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3abb5b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3abb5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3abb5e80"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3abb4030"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3abb41c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3abb4350"/>
        <function-ref name="get" scoped="" ref="0x7feb3abb44e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3abb4670"/>
        <function-ref name="set" scoped="" ref="0x7feb3abb4800"/>
        <function-ref name="clr" scoped="" ref="0x7feb3abb4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7feb3ab98700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7feb3ab98700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7feb3ab98a80"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab98c10"/>
        <function-ref name="captured" scoped="" ref="0x7feb3ab98da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7feb3ab9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7feb3ab9b400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7feb3ab9b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3ab9b780"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab9b910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7feb3ab9baa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7feb3ab9bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7feb3ab9a060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7feb3ab9a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3ab9a3e0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab9a570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7feb3ab9a700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7feb3ab9a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7feb3ab7ca80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7feb3ab7ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feb3ab7ce00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feb3ab7b020"/>
        <function-ref name="captured" scoped="" ref="0x7feb3ab7b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3ab7b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3ab7b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feb3ab7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feb3ab8fc20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feb3ab8fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7feb3ab7d020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab7d1b0"/>
        <function-ref name="captured" scoped="" ref="0x7feb3ab7d340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7feb3ab7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7feb3ab7d760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feb3ab7d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feb3ab7dae0"/>
        <function-ref name="getControl" scoped="" ref="0x7feb3ab7dc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3ab7de00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feb3ab7c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feb3ab7c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3ab7c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feb3ab7c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feb3ab7c660"/>
        <function-ref name="setControl" scoped="" ref="0x7feb3ab7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7feb3ab7b930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3ab7b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3ab7bcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3ab7be40"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3ab7a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3ab79c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3ab7a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3ab7a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3ab7a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3ab7a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3ab7a980"/>
        <function-ref name="get" scoped="" ref="0x7feb3ab7ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3ab7aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3ab7ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3ab79020"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3ab792b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3ab79440"/>
        <function-ref name="set" scoped="" ref="0x7feb3ab795d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3ab79760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3ab798f0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3ab7a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3ab79a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7feb3ab683f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7feb3ab683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab68770"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab68900"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab68a90"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab68c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab68db0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab67020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab671b0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7feb3ab5c3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7feb3ab5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab5c770"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab5c900"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab5ca90"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab5cc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab5cdb0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab5b020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab5b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7feb3ab65d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7feb3ab65d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab64100"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab64290"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab64420"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab645b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab64740"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab648d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab64a60"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab64bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7feb3ab623f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7feb3ab623f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab62770"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab62900"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab62a90"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab62c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab62db0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab61020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab611b0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab61340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7feb3ab71bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7feb3ab71bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab6a020"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab6a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab6a340"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab6a4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab6a660"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab6a7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab6a980"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab6ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7feb3ab5fd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7feb3ab5fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab5e210"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab5e3a0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab5e530"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab5e6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab5e850"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab5e9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab5eb70"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab5ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7feb3ab67710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7feb3ab67710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab67a90"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab67c20"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab67db0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab66020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab661b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab66340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab664d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7feb3ab5b710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7feb3ab5b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab5ba90"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab5bc20"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab5bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab5a020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab5a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab5a340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab5a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7feb3ab6c620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7feb3ab6c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab6c9a0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab6cb30"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab6ccc0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab6ce50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab72020"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab721b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab72340"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7feb3ab61710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7feb3ab61710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab61a90"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab61c20"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab61db0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab60020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab601b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab60340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab604d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab60660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7feb3ab69020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7feb3ab69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab693a0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab69530"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab696c0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab69850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab699e0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab69b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab69d00"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7feb3ab5d100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7feb3ab5d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab5d480"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab5d610"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab5d7a0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab5d930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab5dac0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab5dc50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab5dde0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7feb3ab66a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7feb3ab66a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab66db0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab65020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab651b0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab65340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab654d0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab65660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab657f0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab65980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7feb3ab63020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7feb3ab63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab633a0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab63530"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab636c0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab63850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab639e0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab63b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab63d00"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7feb3ab728a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7feb3ab728a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab72c20"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab72db0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab71020"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab711b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab71340"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab714d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab71660"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7feb3ab60a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7feb3ab60a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab60db0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab5f020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab5f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab5f340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab5f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab5f660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab5f7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab5f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7feb3ab523f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7feb3ab523f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab52770"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab52900"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab52a90"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab52c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab52db0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab51020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab511b0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7feb3ab453f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7feb3ab453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab45770"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab45900"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab45a90"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab45c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab45db0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab44020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab441b0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab44340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7feb3ab4ed50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7feb3ab4ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab4d100"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab4d290"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab4d420"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab4d5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab4d740"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab4d8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab4da60"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab4dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7feb3ab4b3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7feb3ab4b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab4b770"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab4b900"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab4ba90"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab4bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab4bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab4a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab4a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab4a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7feb3ab55d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7feb3ab55d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab54100"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab54290"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab54420"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab545b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab54740"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab548d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab54a60"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab54bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7feb3ab48d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7feb3ab48d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab47210"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab473a0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab47530"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab476c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab47850"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab479e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab47b70"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab47d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7feb3ab51710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7feb3ab51710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab51a90"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab51c20"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab51db0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab50020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab501b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab50340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab504d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7feb3ab44710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7feb3ab44710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab44a90"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab44c20"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab44db0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab43020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab431b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab43340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab434d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab43660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7feb3ab597a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7feb3ab597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab59b20"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab59cb0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab59e40"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab56020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab561b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab56340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab564d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7feb3ab4a710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7feb3ab4a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab4aa90"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab4ac20"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab4adb0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab49020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab491b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab49340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab494d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7feb3ab53020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7feb3ab53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab533a0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab53530"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab536c0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab53850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab539e0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab53b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab53d00"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7feb3ab46100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7feb3ab46100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab46480"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab46610"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab467a0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab46930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab46ac0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab46c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab46de0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7feb3ab50a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7feb3ab50a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab50db0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab4e020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab4e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab4e340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab4e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab4e660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab4e7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab4e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7feb3ab4c020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7feb3ab4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab4c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab4c530"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab4c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab4c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab4c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab4cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab4cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7feb3ab56a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7feb3ab56a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab56db0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab55020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab551b0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab55340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab554d0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab55660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab557f0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab55980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7feb3ab49a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7feb3ab49a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3ab49db0"/>
        <function-ref name="fired" scoped="" ref="0x7feb3ab48020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3ab481b0"/>
        <function-ref name="edge" scoped="" ref="0x7feb3ab48340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3ab484d0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3ab48660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3ab487f0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3ab48980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7feb3aa392f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7feb3aa392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3aa39670"/>
        <function-ref name="fired" scoped="" ref="0x7feb3aa39800"/>
        <function-ref name="disable" scoped="" ref="0x7feb3aa39990"/>
        <function-ref name="edge" scoped="" ref="0x7feb3aa39b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3aa39cb0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3aa39e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3aa2c020"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3aa2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7feb3aa3a680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7feb3aa3a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3aa3aa00"/>
        <function-ref name="disable" scoped="" ref="0x7feb3aa3ab90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7feb3aa3ad20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7feb3aa39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7feb3aa287a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7feb3aa287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3aa28b20"/>
        <function-ref name="fired" scoped="" ref="0x7feb3aa28cb0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3aa28e40"/>
        <function-ref name="edge" scoped="" ref="0x7feb3aa27020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7feb3aa271b0"/>
        <function-ref name="enable" scoped="" ref="0x7feb3aa27340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7feb3aa274d0"/>
        <function-ref name="getValue" scoped="" ref="0x7feb3aa27660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7feb3aa2bb70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7feb3aa2bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3aa28020"/>
        <function-ref name="disable" scoped="" ref="0x7feb3aa281b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7feb3aa28340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7feb3aa284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7feb3a5c9e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a5c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c8410"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7feb3a5d3160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7feb3a5d3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7feb3a5cde50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a5cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5cc210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7feb3a5c7880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a5c7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c7c00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7feb3a5bf0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7feb3a5bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5bf420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5bf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7feb3a5c60a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7feb3a5c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c6420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7feb3a5b1500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a5b1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b1880"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7feb3a5b3500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7feb3a5b3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b3880"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7feb3a5d2490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a5d2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7feb3a5bb880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7feb3a5bb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5bbc00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5bbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7feb3a5b5500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a5b5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b5880"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7feb3a5cce50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7feb3a5cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5ca210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7feb3a5cae50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a5cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c9210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7feb3a5c1880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a5c1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c1c00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7feb3a5c20a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7feb3a5c20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c2420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7feb3a5c6880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a5c6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c6c00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7feb3a5d5a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a5d5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a5d5e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a5d4020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a5d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7feb3a5d1e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a5d1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5cf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7feb3a5cf490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7feb3a5cf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5cf910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7feb3a5b8c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a5b8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b70a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7feb3a5cfbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a5cfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7feb3a5b5ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a5b5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b30a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7feb3a5d1160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a5d1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7feb3a5bb0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7feb3a5bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5bb420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5bb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7feb3a5ca670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a5ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5ca9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7feb3a5cc670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a5cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7feb3a5d4ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a5d4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d4e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7feb3a5bc0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a5bc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5bc420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5bc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7feb3a5bf880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7feb3a5bf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5bfc00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5bfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7feb3a5bc880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a5bc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5bcc00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5bcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7feb3a5b2ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a5b2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b10a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7feb3a5b3ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7feb3a5b3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b20a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7feb3a5c2880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7feb3a5c2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c2c00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7feb3a5be0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7feb3a5be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5be420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5be5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7feb3a5b6ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a5b6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b50a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7feb3a5c5880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a5c5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c5c00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7feb3a5b1ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a5b1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a5b00a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a5b0230"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b03c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a5b0550"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a5b06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7feb3a5d4480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7feb3a5d4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7feb3a5cd670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7feb3a5cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5cd9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7feb3a5c9670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a5c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c99f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7feb3a5c00a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a5c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c0420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7feb3a5c50a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a5c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c5420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7feb3a5c0880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a5c0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c0c00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7feb3a5c8870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a5c8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c8bf0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7feb3a5d37b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7feb3a5d37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7feb3a5c70a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a5c70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c7420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a5d6e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a5d6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a5d51c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a5d5350"/>
        <function-ref name="request" scoped="" ref="0x7feb3a5d54e0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a5d5670"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a5d5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7feb3a5ce2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a5ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5ce670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7feb3a5cd020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7feb3a5cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7feb3a5b6500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7feb3a5b6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b6880"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7feb3a5b7ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a5b7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b60a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7feb3a5d17b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a5d17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7feb3a5b7500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a5b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b7880"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7feb3a5b2500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7feb3a5b2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b2880"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7feb3a5c10a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a5c10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c1420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7feb3a5be880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7feb3a5be880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5bec00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5bed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7feb3a5d3e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7feb3a5d3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7feb3a5d2ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a5d2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5d2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7feb3a5c40a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a5c40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c4420"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7feb3a5ce940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7feb3a5ce940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5cecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7feb3a5c4880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7feb3a5c4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5c4c00"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5c4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7feb3a5b80a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7feb3a5b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5b8820"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5b89b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7feb3a5b09b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a5b09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a5b0d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a5af020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5af1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a5af340"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a5af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7feb3a9e52c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7feb3a9e52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a9e5640"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a9e57d0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a9e5960"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a9e5af0"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a9e5c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7feb3a9e7350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9e7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a9e76d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a9e7860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a9e79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7feb3a9e4540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7feb3a9e4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a9e48c0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a9e4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7feb3a9e3370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7feb3a9e3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a9e36f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a9e3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a9e84d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a9e84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a9e8850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a9e89e0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a9e8b70"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a9e8d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a9e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7feb3a9e21d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7feb3a9e21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a9e2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7feb3a9cc2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a9cc2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a9cc660"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a9cc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7feb3a9dd890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7feb3a9dd890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a9ddc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a9ddda0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a9db020"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a9db1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a9db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7feb3a9df660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a9df660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a9df9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a9dfb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a9dfd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7feb3a9d4c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7feb3a9d4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7feb3a9d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7feb3a9ccb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7feb3a9ccb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a9d5020"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a9d51b0"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a9d5340"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a9d54d0"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a9d5660"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a9d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7feb3a9d7060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7feb3a9d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a9d73e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a9d7570"/>
        <function-ref name="request" scoped="" ref="0x7feb3a9d7700"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a9d7890"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a9d7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7feb3a9dbba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7feb3a9dbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a9da020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a9da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7feb3a9daa30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7feb3a9daa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a9dadb0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a9d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3a9d5a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3a9d5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3a9d5df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3a9d3020"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3a9d31b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3a9d3340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3a9d34d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a9d3660"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3a9d37f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3a9d3e30"/>
        <function-ref name="set" scoped="" ref="0x7feb3a9d3980"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3a9d3b10"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3a9d3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a9de510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a9de510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a9de890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a9dea20"/>
        <function-ref name="request" scoped="" ref="0x7feb3a9debb0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a9ded40"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a9dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7feb3a9c8bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7feb3a9c8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3a9c7020"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3a9c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7feb3a9d98b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7feb3a9d98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a9d9c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7feb3a96d770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7feb3a96d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a96daf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a96dc80"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a96de10"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a965020"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a9651b0"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a965340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7feb3a9681d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7feb3a9681d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a968550"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a9686e0"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a968870"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a968a00"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a968b90"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a968d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a964020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a9643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7feb3a964b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7feb3a964b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a963020"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a9631b0"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a963340"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a9634d0"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a963660"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a9637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7feb3a5fc020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a5fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a5fc3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a5fc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7feb3a94a8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7feb3a94a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7feb3a94ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a94bc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a94bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a94a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a94a1b0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a94a340"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a94a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a94a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feb398ea5d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feb398ea5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feb398ea950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feb398eaae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7feb398e8020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7feb398e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb398e83a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb398e8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7feb398e87c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7feb398e87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7feb398e8b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7feb398ead70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7feb398ead70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7feb398e9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb398eb940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb398eb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb398ebcc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb398ebe50"/>
        <function-ref name="request" scoped="" ref="0x7feb398ea020"/>
        <function-ref name="granted" scoped="" ref="0x7feb398ea1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb398ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7feb398e9410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7feb398e9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7feb398e9790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7feb398e9920"/>
        <function-ref name="splitRead" scoped="" ref="0x7feb398e9ab0"/>
        <function-ref name="write" scoped="" ref="0x7feb398e9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7feb3a8e18e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a8e18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feb3a8e1c60"/>
        <function-ref name="configure" scoped="" ref="0x7feb3a8e1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7feb3a8e3850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a8e3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a8e3bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a8e3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7feb3a8dfa40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7feb3a8dfa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7feb3a8dfdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7feb3a8e4110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7feb3a8e4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7feb3a8e4490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7feb3a8e0690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7feb3a8e0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a8e0a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a8e0ba0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a8e0d30"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a8df020"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a8df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a8e9d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a8e9d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a8e6180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a8e6310"/>
        <function-ref name="request" scoped="" ref="0x7feb3a8e64a0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a8e6630"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a8e67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7feb3a8e4790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7feb3a8e4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7feb3a8e4b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7feb3a8e4ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7feb3a8e4e30"/>
        <function-ref name="write" scoped="" ref="0x7feb3a8e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7feb3a8dab40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7feb3a8dab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb3a8dc020"/>
        <function-ref name="txDone" scoped="" ref="0x7feb3a8dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7feb3a868250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a868250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feb3a8685f0"/>
        <function-ref name="configure" scoped="" ref="0x7feb3a868780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7feb3a867c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7feb3a867c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a866020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a8661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7feb3a8653e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7feb3a8653e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7feb3a865780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7feb3a868a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7feb3a868a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7feb3a868d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7feb3a865a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7feb3a865a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feb3a865dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feb3a864020"/>
        <function-ref name="setUctl" scoped="" ref="0x7feb3a8641b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feb3a864340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feb3a8644d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feb3a864660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feb3a8647f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feb3a864980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feb3a864b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feb3a864ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feb3a864e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feb3a863020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feb3a8631b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7feb3a863440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feb3a8635d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feb3a863760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feb3a8638f0"/>
        <function-ref name="isUart" scoped="" ref="0x7feb3a863a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feb3a863c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7feb3a863da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feb3a862020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feb3a8621b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feb3a862340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feb3a8624d0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3a862660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feb3a8629f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feb3a862b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7feb3a862d10"/>
        <function-ref name="tx" scoped="" ref="0x7feb3a861020"/>
        <function-ref name="getUctl" scoped="" ref="0x7feb3a8611b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7feb3a861340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feb3a8614d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feb3a861660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feb3a8617f0"/>
        <function-ref name="rx" scoped="" ref="0x7feb3a861980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feb3a861b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feb3a861ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feb3a861e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feb3a860020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feb3a8601b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3a860c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3a860c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3a85e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3a85e1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3a85e340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3a85e4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3a85e660"/>
        <function-ref name="get" scoped="" ref="0x7feb3a85e7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3a85e980"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3a85d020"/>
        <function-ref name="set" scoped="" ref="0x7feb3a85eca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3a85eb10"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3a85ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7feb3a8665b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7feb3a8665b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a866950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a866ae0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a866c70"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a866e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a865020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a869470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a869470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a869810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a8699a0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a869b30"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a869cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a869e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7feb3a867060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7feb3a867060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7feb3a8673e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7feb3a867570"/>
        <function-ref name="splitRead" scoped="" ref="0x7feb3a867700"/>
        <function-ref name="write" scoped="" ref="0x7feb3a867890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7feb3a860480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7feb3a860480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb3a860800"/>
        <function-ref name="txDone" scoped="" ref="0x7feb3a860990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7feb3a85d2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7feb3a85d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3a85d670"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3a85d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7feb3a84d2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7feb3a84d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3a84d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7feb3a851d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feb3a851d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb3a8500e0"/>
        <function-ref name="txDone" scoped="" ref="0x7feb3a850270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7feb3a855020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feb3a855020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feb3a8553a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feb3a855530"/>
        <function-ref name="setUctl" scoped="" ref="0x7feb3a8556c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feb3a855850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feb3a8559e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feb3a855b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feb3a855d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feb3a854020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feb3a8541b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feb3a854340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feb3a8544d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feb3a854660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feb3a8547f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7feb3a854a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feb3a854c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feb3a854da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feb3a853020"/>
        <function-ref name="isUart" scoped="" ref="0x7feb3a8531b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feb3a853340"/>
        <function-ref name="isSpi" scoped="" ref="0x7feb3a8534d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feb3a853660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feb3a8537f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feb3a853980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feb3a853b10"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3a853ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feb3a852220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feb3a8523b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7feb3a852540"/>
        <function-ref name="tx" scoped="" ref="0x7feb3a8526d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7feb3a852860"/>
        <function-ref name="disableUart" scoped="" ref="0x7feb3a8529f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feb3a852b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feb3a852d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feb3a851020"/>
        <function-ref name="rx" scoped="" ref="0x7feb3a8511b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feb3a851340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feb3a8514d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feb3a851660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feb3a8517f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feb3a851980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7feb3a814bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7feb3a814bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a813020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a8131b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a813340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a811020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a813660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a8137f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a813980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a813b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a813ca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a813e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a812020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a8121b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a812340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a8125d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a812760"/>
        <function-ref name="set" scoped="" ref="0x7feb3a8128f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a812a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a8134d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a812c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a812da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7feb3a8472d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7feb3a8472d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb3a847650"/>
        <function-ref name="txDone" scoped="" ref="0x7feb3a8477e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7feb3a8113e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7feb3a8113e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a811760"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a8118f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a811a80"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a80f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a811da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a810020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a8101b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a810340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a8104d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a810660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a8107f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a810980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a810b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a810da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a80f020"/>
        <function-ref name="set" scoped="" ref="0x7feb3a80f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a80f340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a811c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a80f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a80f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7feb3a80fbb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7feb3a80fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a80d020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a80d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a80d340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a80b020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a80d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a80d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a80d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a80db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a80dca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a80de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a80c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a80c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a80c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a80c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a80c760"/>
        <function-ref name="set" scoped="" ref="0x7feb3a80c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a80ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a80d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a80cc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a80cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7feb3a84c700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7feb3a84c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feb3a84ca80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feb3a84cc10"/>
        <function-ref name="setUctl" scoped="" ref="0x7feb3a84cda0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feb3a84b020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feb3a84b1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feb3a84b340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feb3a84b4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feb3a84b660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feb3a84b7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feb3a84b980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feb3a84bb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feb3a84bca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feb3a84be30"/>
        <function-ref name="getUbr" scoped="" ref="0x7feb3a84a120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feb3a84a2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feb3a84a440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feb3a84a5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7feb3a84a760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feb3a84a8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7feb3a84aa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feb3a84ac10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feb3a84ada0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feb3a849020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feb3a8491b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3a849340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feb3a8496d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feb3a849860"/>
        <function-ref name="setUbr" scoped="" ref="0x7feb3a8499f0"/>
        <function-ref name="tx" scoped="" ref="0x7feb3a849b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7feb3a849d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7feb3a848020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feb3a8481b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feb3a848340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feb3a8484d0"/>
        <function-ref name="rx" scoped="" ref="0x7feb3a848660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feb3a8487f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feb3a848980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feb3a848b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feb3a848ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feb3a848e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7feb3a81ed10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7feb3a81ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7feb3a8450e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7feb3a845270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7feb3a845400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7feb3a845590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7feb3a845720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7feb3a8458b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7feb3a845a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7feb3a845bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3a845d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7feb3a844020"/>
        <function-ref name="getData" scoped="" ref="0x7feb3a8441b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7feb3a844340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7feb3a8444d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7feb3a844760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7feb3a8448f0"/>
        <function-ref name="getIV" scoped="" ref="0x7feb3a844a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7feb3a844c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7feb3a844da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7feb3a81d020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7feb3a81d1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7feb3a81d340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7feb3a81d4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7feb3a81d660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7feb3a81d7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7feb3a81d980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7feb3a81dd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7feb3a81c020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7feb3a81c1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7feb3a81c340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7feb3a81c4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7feb3a81c660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7feb3a81c7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7feb3a81c980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7feb3a81cb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7feb3a81cca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7feb3a81ce30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7feb3a81b020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7feb3a81b1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7feb3a81b340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7feb3a81b4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7feb3a81b660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7feb3a81b7f0"/>
        <function-ref name="setData" scoped="" ref="0x7feb3a81b980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7feb3a81bb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7feb3a81bca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7feb3a81be30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7feb3a81a020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7feb3a81a1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7feb3a81a340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7feb3a81a8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7feb3a81aa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7feb3a81abf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7feb3a81ad80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7feb3a819020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7feb3a8191b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7feb3a819340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7feb3a8194d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7feb3a819660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7feb3a8197f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7feb3a8163e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7feb3a8163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a816760"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a8168f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a816a80"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a8147f0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a816da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a815020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a8151b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a815340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a8154d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a815660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a8157f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a815980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a815b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a815da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a814020"/>
        <function-ref name="set" scoped="" ref="0x7feb3a8141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a814340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a816c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a8144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a814660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7feb3a847c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7feb3a847c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3a846020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7feb3a819bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7feb3a819bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a818020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a8181b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a818340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a816020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a818660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a8187f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a818980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a818b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a818ca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a818e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a817020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a8171b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a817340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a8175d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a817760"/>
        <function-ref name="set" scoped="" ref="0x7feb3a8178f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a817a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a8184d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a817c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a817da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feb398e0020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feb398e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feb398e03a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feb398e0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7feb398d9440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7feb398d9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb398d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feb398d2760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb398d2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feb398d2ae0"/>
        <function-ref name="configure" scoped="" ref="0x7feb398d2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7feb398d9a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7feb398d9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7feb398d9dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7feb398d8020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7feb398d81b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7feb398d8340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7feb398d84d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7feb398d8660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7feb398d87f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7feb398d8980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb398d8b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7feb398d8ca0"/>
        <function-ref name="getData" scoped="" ref="0x7feb398d8e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7feb398d7020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7feb398d71b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7feb398d7440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7feb398d75d0"/>
        <function-ref name="getIV" scoped="" ref="0x7feb398d7760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7feb398d78f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7feb398d7a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7feb398d7c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7feb398d7da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7feb398d6020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7feb398d61b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7feb398d6340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7feb398d64d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7feb398d6660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7feb398d69f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7feb398d6b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7feb398d6d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7feb398d5020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7feb398d51b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7feb398d5340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7feb398d54d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7feb398d5660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7feb398d57f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7feb398d5980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7feb398d5b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7feb398d5ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7feb398d5e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7feb398d4020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7feb398d41b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7feb398d4340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7feb398d44d0"/>
        <function-ref name="setData" scoped="" ref="0x7feb398d4660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7feb398d47f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7feb398d4980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7feb398d4b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7feb398d4ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7feb398d4e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7feb398d3020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7feb398d35b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7feb398d3740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7feb398d38d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7feb398d3a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7feb398d3bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7feb398d3d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7feb398d2020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7feb398d21b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7feb398d2340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7feb398d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7feb398dbc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feb398dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb398d9020"/>
        <function-ref name="txDone" scoped="" ref="0x7feb398d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb398e1340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb398e1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb398e16c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb398e1850"/>
        <function-ref name="request" scoped="" ref="0x7feb398e19e0"/>
        <function-ref name="granted" scoped="" ref="0x7feb398e1b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb398e1d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7feb398df020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feb398df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feb398df3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feb398df530"/>
        <function-ref name="setUctl" scoped="" ref="0x7feb398df6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feb398df850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feb398df9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feb398dfb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feb398dfd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feb398de020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feb398de1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feb398de340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feb398de4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feb398de660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feb398de7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7feb398dea80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feb398dec10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feb398deda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feb398dd020"/>
        <function-ref name="isUart" scoped="" ref="0x7feb398dd1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feb398dd340"/>
        <function-ref name="isSpi" scoped="" ref="0x7feb398dd4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feb398dd660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feb398dd7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feb398dd980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feb398ddb10"/>
        <function-ref name="getMode" scoped="" ref="0x7feb398ddca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feb398dc220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feb398dc3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7feb398dc540"/>
        <function-ref name="tx" scoped="" ref="0x7feb398dc6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7feb398dc860"/>
        <function-ref name="disableUart" scoped="" ref="0x7feb398dc9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feb398dcb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feb398dcd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feb398db020"/>
        <function-ref name="rx" scoped="" ref="0x7feb398db1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feb398db340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feb398db4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feb398db660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feb398db7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feb398db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feb398e07c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb398e07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feb398e0b40"/>
        <function-ref name="userId" scoped="" ref="0x7feb398e0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feb3a7652c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feb3a7652c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feb3a765640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feb3a7657d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feb3a7648a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a7648a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feb3a764c20"/>
        <function-ref name="configure" scoped="" ref="0x7feb3a764db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7feb3a7694d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7feb3a7694d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb3a769850"/>
        <function-ref name="txDone" scoped="" ref="0x7feb3a7699e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a766020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a766020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a7663a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a766530"/>
        <function-ref name="request" scoped="" ref="0x7feb3a7666c0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a766850"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a7669e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7feb3a7683f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7feb3a7683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3a768770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feb3a765ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a765ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feb3a765e50"/>
        <function-ref name="userId" scoped="" ref="0x7feb3a764020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7feb3a74fbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a74fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feb3a74e020"/>
        <function-ref name="userId" scoped="" ref="0x7feb3a74e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7feb3a762d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7feb3a762d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb3a761180"/>
        <function-ref name="txDone" scoped="" ref="0x7feb3a761310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7feb3a74f5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7feb3a74f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3a74f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7feb3a761710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7feb3a761710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3a761ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7feb3a761d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7feb3a761d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feb3a74f180"/>
        <function-ref name="txDone" scoped="" ref="0x7feb3a74f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feb3a6d0a60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feb3a6d0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feb3a6d0e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feb3a6ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feb3a6cd790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3a6cd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feb3a6cdb30"/>
        <function-ref name="configure" scoped="" ref="0x7feb3a6cdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7feb3a6ce270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feb3a6ce270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a6ce5f0"/>
        <function-ref name="requested" scoped="" ref="0x7feb3a6ce780"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a6ce910"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a6ceaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feb3a6cec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a6d1ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a6d1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a6d00a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a6d0230"/>
        <function-ref name="request" scoped="" ref="0x7feb3a6d03c0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a6d0550"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a6d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7feb3a6cc020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7feb3a6cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feb3a6cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feb3a6cee80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb3a6cee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feb3a6cd220"/>
        <function-ref name="userId" scoped="" ref="0x7feb3a6cd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb39865020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb39865020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb398653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7feb39865630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7feb39865630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feb398659b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feb39865b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feb39865cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7feb39865e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feb398616c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feb398616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feb39861a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feb39861bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feb3985f9d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feb3985f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feb3985fd70"/>
        <function-ref name="configure" scoped="" ref="0x7feb3985e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7feb3985e2b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7feb3985e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feb3985e630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feb3985e7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feb3985e950"/>
        <function-ref name="dequeue" scoped="" ref="0x7feb3985eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7feb39861e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feb39861e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb398601e0"/>
        <function-ref name="requested" scoped="" ref="0x7feb39860370"/>
        <function-ref name="granted" scoped="" ref="0x7feb39860500"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb39860690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feb39860820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3985ed30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3985ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3985d0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3985d270"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3985d400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3985d590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3985d720"/>
        <function-ref name="get" scoped="" ref="0x7feb3985d8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3985da40"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3985c1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3985dd60"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3985dbd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3985c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb39862850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb39862850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb39862bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb39862d80"/>
        <function-ref name="request" scoped="" ref="0x7feb39861020"/>
        <function-ref name="granted" scoped="" ref="0x7feb398611b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb39861340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7feb3985f2d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7feb3985f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feb3985f650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feb39860a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feb39860a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feb39860df0"/>
        <function-ref name="userId" scoped="" ref="0x7feb3985f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7feb3985c480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7feb3985c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3985c800"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3985c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7feb3a6c3020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7feb3a6c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7feb3a6c33a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7feb3a6c3530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7feb3a6c36c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7feb3a6c3850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7feb3a6c39e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7feb3a6c3b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7feb3a6c3d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7feb3a6c2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3a6c21b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7feb3a6c2340"/>
        <function-ref name="getData" scoped="" ref="0x7feb3a6c24d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7feb3a6c2660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7feb3a6c27f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7feb3a6c2a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7feb3a6c2c10"/>
        <function-ref name="getIV" scoped="" ref="0x7feb3a6c2da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7feb3a6c1020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7feb3a6c11b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7feb3a6c1340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7feb3a6c14d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7feb3a6c1660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7feb3a6c17f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7feb3a6c1980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7feb3a6c1b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7feb3a6c1ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7feb3a6c0220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7feb3a6c03b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7feb3a6c0540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7feb3a6c06d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7feb3a6c0860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7feb3a6c09f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7feb3a6c0b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7feb3a6c0d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7feb3a6bf020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7feb3a6bf1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7feb3a6bf340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7feb3a6bf4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7feb3a6bf660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7feb3a6bf7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7feb3a6bf980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7feb3a6bfb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7feb3a6bfca0"/>
        <function-ref name="setData" scoped="" ref="0x7feb3a6bfe30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7feb3a6be020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7feb3a6be1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7feb3a6be340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7feb3a6be4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7feb3a6be660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7feb3a6be7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7feb3a6bed80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7feb3a6bd020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7feb3a6bd1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7feb3a6bd340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7feb3a6bd4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7feb3a6bd660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7feb3a6bd7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7feb3a6bd980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7feb3a6bdb10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7feb3a6bdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7feb3a6b3bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7feb3a6b3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feb3a6b2020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feb3a6b21b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7feb3a6b2340"/>
        <function-ref name="enableUart" scoped="" ref="0x7feb3a6b24d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feb3a6b2660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feb3a6b27f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feb3a6b2980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feb3a6b2b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feb3a6b2ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feb3a6b2e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feb3a6b1020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feb3a6b11b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feb3a6b1340"/>
        <function-ref name="getUbr" scoped="" ref="0x7feb3a6b15d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feb3a6b1760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feb3a6b18f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feb3a6b1a80"/>
        <function-ref name="isUart" scoped="" ref="0x7feb3a6b1c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feb3a6b1da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7feb3a6b0020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feb3a6b01b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feb3a6b0340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feb3a6b04d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feb3a6b0660"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3a6b07f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feb3a6b0b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feb3a6b0d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7feb3a6af020"/>
        <function-ref name="tx" scoped="" ref="0x7feb3a6af1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7feb3a6af340"/>
        <function-ref name="disableUart" scoped="" ref="0x7feb3a6af4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feb3a6af660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feb3a6af7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feb3a6af980"/>
        <function-ref name="rx" scoped="" ref="0x7feb3a6afb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feb3a6afca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feb3a6afe30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feb3a6ae020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feb3a6ae1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feb3a6ae340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7feb3a6ace40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7feb3a6ace40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a6ab1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a6ab370"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a6ab500"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a6a91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a6ab820"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a6ab9b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a6abb40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a6abcd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a6abe60"/>
        <function-ref name="get" scoped="" ref="0x7feb3a6aa020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a6aa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a6aa340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a6aa4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a6aa760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a6aa8f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a6aaa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a6aac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a6ab690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a6aada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a6a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7feb3a6bcd40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7feb3a6bcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7feb3a6b90e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7feb3a6b9270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7feb3a6b9400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7feb3a6b9590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7feb3a6b9720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7feb3a6b98b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7feb3a6b9a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7feb3a6b9bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3a6b9d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7feb3a6b8020"/>
        <function-ref name="getData" scoped="" ref="0x7feb3a6b81b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7feb3a6b8340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7feb3a6b84d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7feb3a6b8760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7feb3a6b88f0"/>
        <function-ref name="getIV" scoped="" ref="0x7feb3a6b8a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7feb3a6b8c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7feb3a6b8da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7feb3a6b7020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7feb3a6b71b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7feb3a6b7340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7feb3a6b74d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7feb3a6b7660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7feb3a6b77f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7feb3a6b7980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7feb3a6b7d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7feb3a6b6020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7feb3a6b61b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7feb3a6b6340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7feb3a6b64d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7feb3a6b6660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7feb3a6b67f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7feb3a6b6980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7feb3a6b6b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7feb3a6b6ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7feb3a6b6e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7feb3a6b5020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7feb3a6b51b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7feb3a6b5340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7feb3a6b54d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7feb3a6b5660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7feb3a6b57f0"/>
        <function-ref name="setData" scoped="" ref="0x7feb3a6b5980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7feb3a6b5b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7feb3a6b5ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7feb3a6b5e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7feb3a6b4020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7feb3a6b41b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7feb3a6b4340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7feb3a6b48d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7feb3a6b4a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7feb3a6b4bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7feb3a6b4d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7feb3a6b3020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7feb3a6b31b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7feb3a6b3340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7feb3a6b34d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7feb3a6b3660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7feb3a6b37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7feb3a6ae700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7feb3a6ae700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a6aea80"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a6aec10"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a6aeda0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a6aca80"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a6ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a6ad340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a6ad4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a6ad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a6ad7f0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a6ad980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a6adb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a6adca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a6ade30"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a6ac120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a6ac2b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a6ac440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a6ac5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a6ad020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a6ac760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a6ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7feb3a597c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a597c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a596210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7feb3a5a2da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7feb3a5a2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5a0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7feb3a59ab50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a59ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a599020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7feb3a594670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a594670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5949f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a594b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7feb3a58de50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7feb3a58de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58c210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7feb3a594e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7feb3a594e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a593210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7feb3a5812f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a5812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a581670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a581800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7feb3a5832f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7feb3a5832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a583670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a583800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7feb3a59f120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a59f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7feb3a589670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7feb3a589670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5899f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a589b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7feb3a5842f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a5842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a584670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a584800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7feb3a599c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7feb3a599c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a598020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7feb3a598c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a598c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a597020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7feb3a58f670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a58f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58f9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7feb3a591e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7feb3a591e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a590210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7feb3a593670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a593670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5939f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a593b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7feb3a5a3760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a5a3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a5a3ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a5a3c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a5a3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7feb3a59eaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a59eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7feb3a59d120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7feb3a59d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7feb3a588a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a588a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a588df0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a586020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7feb3a59d870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a59d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7feb3a584ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a584ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a584e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a583020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7feb3a59fdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a59fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7feb3a58ae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7feb3a58ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a589210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7feb3a598480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a598480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a598800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a598990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7feb3a599480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a599480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a599800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a599990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7feb3a5a2750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a5a2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5a2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7feb3a58be50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a58be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58a210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7feb3a58c670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7feb3a58c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58c9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7feb3a58a670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a58a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58a9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7feb3a582ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a582ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a582e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7feb3a583ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7feb3a583ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a583e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a582020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7feb3a590670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7feb3a590670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5909f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a590b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7feb3a58ce50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7feb3a58ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58b210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7feb3a585ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a585ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a585e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a584020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7feb3a592670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a592670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5929f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a592b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7feb3a581ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a581ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a581e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a57f020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a57f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a57f340"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a57f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7feb3a5a2100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7feb3a5a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5a2480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7feb3a59a370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7feb3a59a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a59a6f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a59a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7feb3a597480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a597480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a597800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a597990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7feb3a58fe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a58fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58d210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7feb3a593e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a593e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a592210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7feb3a58d670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a58d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58d9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7feb3a596670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a596670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5969f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a596b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7feb3a5a0450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7feb3a5a0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5a07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7feb3a596e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a596e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a594210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a5a4a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a5a4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a5a4e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a5a3020"/>
        <function-ref name="request" scoped="" ref="0x7feb3a5a31b0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a5a3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a5a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7feb3a59c020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a59c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7feb3a59ccc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7feb3a59ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7feb3a5852f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7feb3a5852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a585670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a585800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7feb3a586ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a586ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a586e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a585020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7feb3a59e450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a59e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7feb3a5862f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a5862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a586670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a586800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7feb3a5822f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7feb3a5822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a582670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a582800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7feb3a590e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a590e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58f210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7feb3a58b670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7feb3a58b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a58b9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a58bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7feb3a5a0aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7feb3a5a0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5a0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7feb3a59f770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a59f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7feb3a592e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a592e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a591210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7feb3a59c670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7feb3a59c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a59c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7feb3a591670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7feb3a591670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5919f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a591b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7feb3a589e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7feb3a589e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a588610"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5887a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7feb3a57f7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a57f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a57fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a57fcb0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a57fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a57e020"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a57e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7feb3a56ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a56ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a569210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7feb3a575da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7feb3a575da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a574180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7feb3a56eb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a56eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a56d020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a56d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7feb3a568670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a568670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5689f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a568b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7feb3a561e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7feb3a561e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a560210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7feb3a568e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7feb3a568e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a567210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7feb3a5542f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a5542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a554670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a554800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7feb3a5562f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7feb3a5562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a556670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a556800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7feb3a573120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a573120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5734a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7feb3a55c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7feb3a55c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55c9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7feb3a5582f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a5582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a558670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a558800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7feb3a56dc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7feb3a56dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a56b020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a56b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7feb3a56bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a56bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a56a020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a56a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7feb3a562670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a562670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5629f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a562b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7feb3a564e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7feb3a564e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a563210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7feb3a567670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a567670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5679f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a567b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7feb3a576760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a576760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a576ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a576c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a576e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7feb3a571aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a571aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a571e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7feb3a570120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7feb3a570120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5705a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7feb3a55ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a55ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55bdf0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7feb3a570870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a570870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a570bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7feb3a558ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a558ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a558e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a556020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7feb3a573dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a573dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a571180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7feb3a55de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7feb3a55de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55c210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7feb3a56b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a56b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a56b800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a56b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7feb3a56d480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a56d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a56d800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a56d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7feb3a575750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a575750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a575ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7feb3a55fe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a55fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55d210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7feb3a560670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7feb3a560670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5609f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a560b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7feb3a55d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a55d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55d9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7feb3a555ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a555ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a555e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a554020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7feb3a556ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7feb3a556ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a556e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a555020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7feb3a563670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7feb3a563670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5639f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a563b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7feb3a560e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7feb3a560e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55f210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7feb3a559ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a559ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a559e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a558020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7feb3a566670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a566670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5669f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a566b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7feb3a554ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a554ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a554e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a553020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5531b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a553340"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a5534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7feb3a575100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7feb3a575100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a575480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7feb3a56e370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7feb3a56e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a56e6f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a56e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7feb3a56a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a56a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a56a800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a56a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7feb3a562e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a562e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a561210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7feb3a567e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a567e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a566210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7feb3a561670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a561670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5619f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a561b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7feb3a569670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a569670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5699f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a569b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7feb3a574450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7feb3a574450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5747d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7feb3a569e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a569e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a568210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a5779e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a5779e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a577d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a576020"/>
        <function-ref name="request" scoped="" ref="0x7feb3a5761b0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a576340"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a5764d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7feb3a56f020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a56f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a56f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7feb3a56fcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7feb3a56fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a56e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7feb3a5592f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7feb3a5592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a559670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a559800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7feb3a55aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a55aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55ae50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a559020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7feb3a571450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a571450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a5717d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7feb3a55a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a55a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55a670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7feb3a5552f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7feb3a5552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a555670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a555800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7feb3a563e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a563e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a562210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7feb3a55f670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7feb3a55f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55f9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7feb3a574aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7feb3a574aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a574e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7feb3a573770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a573770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a573af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7feb3a566e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a566e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a564210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7feb3a56f670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7feb3a56f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a56f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7feb3a564670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7feb3a564670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5649f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a564b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7feb3a55ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7feb3a55ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a55b610"/>
        <function-ref name="write" scoped="" ref="0x7feb3a55b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7feb3a5537a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a5537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a553b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a553cb0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a553e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a552020"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a5521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7feb3a54bb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feb3a54bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7feb3a548020"/>
        <function-ref name="changed" scoped="" ref="0x7feb3a5481b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7feb3a548340"/>
        <function-ref name="setAddress" scoped="" ref="0x7feb3a5484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7feb3a54ad20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7feb3a54ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7feb3a5320e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7feb3a52e310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7feb3a52e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7feb3a52e690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7feb3a52b880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7feb3a52b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a52bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7feb3a520020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7feb3a520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5203a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7feb3a517bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7feb3a517bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a51a020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a51a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7feb3a51a530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7feb3a51a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feb3a51a8b0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a51aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7feb3a51b140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7feb3a51b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a51b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7feb3a51fc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7feb3a51fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a506020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a5061b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7feb3a506540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7feb3a506540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a5068c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a506a50"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a506be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a506d70"/>
        <function-ref name="get" scoped="" ref="0x7feb3a505020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a5051b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a505340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a5054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7feb3a4fd950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7feb3a4fd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7feb3a500780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7feb3a502150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7feb3a502150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a5024d0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a502660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7feb3a5029f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7feb3a5029f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a502d70"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a501020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a5011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a501340"/>
        <function-ref name="get" scoped="" ref="0x7feb3a5014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a501660"/>
        <function-ref name="set" scoped="" ref="0x7feb3a5017f0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a501980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7feb3a504ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7feb3a504ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7feb3a4ddae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7feb3a4daa90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7feb3a4daa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7feb3a4cb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feb3a4ca020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3a4ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a4cae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3a4c9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3a4c9340"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3a4c9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7feb3a4c4530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7feb3a4c4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a4c33d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3a4c3d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3a4c3890"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3a4c2260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7feb3a4bd020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feb3a4bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a4bd3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feb3a4bd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feb3a4bd6c0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a4bd850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feb3a4bd9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3a4bdb70"/>
        <function-ref name="getMode" scoped="" ref="0x7feb3a4bdd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3a4bc020"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3a4bc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feb3a4bc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feb3a4bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feb3a4c1e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3a4c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55a640"/>
            <typename><typedef-ref name="TMicro" ref="0x7feb3b55a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a4bfca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3a4be670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3a4be1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3a4beb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7feb3a507590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7feb3a507590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a507910"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a507aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a507c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a507dc0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a4b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a4b81b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a4b8340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a4b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feb3a4b6c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feb3a4b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a4b5020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a4b51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feb3a4b5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feb3a4b3020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a4b5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a4b57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feb3a4b5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7feb3a4b5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a4b5ca0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a4b5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7feb3a4b4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feb3a4b41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7feb3a4b4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feb3a4b45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7feb3a4b4760"/>
        <function-ref name="set" scoped="" ref="0x7feb3a4b48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feb3a4b4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7feb3a4b4c10"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a4b54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feb3a4b4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feb3a4b79e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feb3a4b79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a4b7d60"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a4b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a4b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a4b6340"/>
        <function-ref name="get" scoped="" ref="0x7feb3a4b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a4b6660"/>
        <function-ref name="set" scoped="" ref="0x7feb3a4b67f0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a4b6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feb3a4ad1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7feb3a4ad1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feb3a4ad530"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a4ad6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7feb3a49ecb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3a49ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3a49d0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3a49d230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3a49d3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3a49d550"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3a49d6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3a49d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7feb3a498990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7feb3a498990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7feb3a498d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7feb3a49e020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7feb3a49e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a49e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a49e530"/>
        <function-ref name="modify" scoped="" ref="0x7feb3a49e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a49e850"/>
        <function-ref name="resend" scoped="" ref="0x7feb3a49e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feb3a4a16c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7feb3a4a16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feb3a4a1a40"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a4a1bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7feb3a49a150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7feb3a49a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7feb3a49a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7feb3a48f970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3a48f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3a48fcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3a48fe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3a48e030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3a48e1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3a48e350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3a48e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7feb3a486950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feb3a486950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3a484020"/>
        <function-ref name="clear" scoped="" ref="0x7feb3a484750"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3a485780"/>
        <function-ref name="set" scoped="" ref="0x7feb3a484e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7feb3a46f020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a46f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a46f3a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a46f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7feb3a46f890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7feb3a46f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a46fc10"/>
        <function-ref name="write" scoped="" ref="0x7feb3a46fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7feb3a48e900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7feb3a48e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7feb3a48ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7feb3a472530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a472530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a4728b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7feb3a481880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7feb3a481880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7feb3a481c00"/>
        <function-ref name="disable" scoped="" ref="0x7feb3a481d90"/>
        <function-ref name="captured" scoped="" ref="0x7feb3a480020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7feb3a4801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7feb3a48cae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7feb3a48cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3a489390"/>
        <function-ref name="fired" scoped="" ref="0x7feb3a48a360"/>
        <function-ref name="startAt" scoped="" ref="0x7feb3a48ace0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3a48a820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feb3a489850"/>
        <function-ref name="start" scoped="" ref="0x7feb3a48b970"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a48be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7feb3a489d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a489d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3a4870a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3a487230"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3a4873c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3a487550"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3a4876e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3a487870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7feb3a474550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a474550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a4748d0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a474a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7feb3a474e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a474e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a4731c0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a473350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7feb3a468d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7feb3a468d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a46c0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7feb3a46c270"/>
        <function-ref name="sfd" scoped="" ref="0x7feb3a46c400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a490bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a490bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a48f020"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a48f1b0"/>
        <function-ref name="modify" scoped="" ref="0x7feb3a48f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a48f4d0"/>
        <function-ref name="resend" scoped="" ref="0x7feb3a48f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7feb3a477d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a477d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a4750e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a475270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a475400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7feb3a472c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a472c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a471020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7feb3a47a820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7feb3a47a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a47aba0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a47ad30"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a479020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a4791b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a479340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a4794d0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a479660"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a4797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a491c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a491c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a490020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7feb3a487bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a487bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a486020"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a4861b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a486340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7feb3a47bbe0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feb3a47bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a481020"/>
        <function-ref name="isSet" scoped="" ref="0x7feb3a4811b0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a481340"/>
        <function-ref name="set" scoped="" ref="0x7feb3a4814d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7feb3a4713e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a4713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a471960"/>
        <function-ref name="write" scoped="" ref="0x7feb3a471af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7feb3a477020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7feb3a477020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a4773a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a477530"/>
        <function-ref name="request" scoped="" ref="0x7feb3a4776c0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a477850"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a4779e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7feb3a480500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7feb3a480500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a480980"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a480b10"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a480ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a480e30"/>
        <function-ref name="get" scoped="" ref="0x7feb3a47a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a47a1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a47a340"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a47a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7feb3a46e130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7feb3a46e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a46e4b0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a46e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7feb3a46e9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a46e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a46ed40"/>
        <function-ref name="write" scoped="" ref="0x7feb3a46d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7feb3a4736d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7feb3a4736d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a473a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7feb3a479b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7feb3a479b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a478020"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a4781b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a478340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a4784d0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a478660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a4787f0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a478980"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a478b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3a46c6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3a46c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3a46ca40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3a46cbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3a46cd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3a46b020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3a46b1b0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a46b340"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3a46b4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3a46bb10"/>
        <function-ref name="set" scoped="" ref="0x7feb3a46b660"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3a46b7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3a46b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7feb3a4705e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a4705e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a470960"/>
        <function-ref name="write" scoped="" ref="0x7feb3a470af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feb3a490320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7feb3a490320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feb3a4906a0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a490830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7feb3a475780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a475780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a475b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a475c90"/>
        <function-ref name="write" scoped="" ref="0x7feb3a475e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a474020"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a4741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7feb3a473de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7feb3a473de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a472180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7feb3a471e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7feb3a471e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a470220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7feb3a48c0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7feb3a48c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7feb3a48c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7feb3a3cec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a3cec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cd210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7feb3a3d8020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7feb3a3d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7feb3a3d2c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a3d2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3d1020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7feb3a3cc670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a3cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7feb3a3c5e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7feb3a3c5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c4210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7feb3a3cce50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7feb3a3cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cb210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7feb3a3b82f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a3b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3b8670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3b8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7feb3a3ba2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7feb3a3ba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3ba670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3ba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7feb3a3d7370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a3d7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7feb3a3c0670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7feb3a3c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c09f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7feb3a3bc2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a3bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bc670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3bc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7feb3a3d1c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7feb3a3d1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cf020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7feb3a3cfc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a3cfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3ce020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7feb3a3c6670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a3c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c69f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7feb3a3c8e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7feb3a3c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c7210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7feb3a3cb670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a3cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cb9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7feb3a3da8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a3da8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a3dac70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a3dae00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a3d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7feb3a3d5d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a3d5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7feb3a3d4370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7feb3a3d4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7feb3a3bfa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a3bfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bfdf0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7feb3a3d4ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a3d4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7feb3a3bcad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a3bcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bce50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7feb3a3d5060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a3d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d53e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7feb3a3c1e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7feb3a3c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c0210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7feb3a3cf480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a3cf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cf800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7feb3a3d1480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a3d1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3d1800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3d1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7feb3a3d9940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a3d9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7feb3a3c3e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a3c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c1210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7feb3a3c4670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7feb3a3c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c49f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7feb3a3c1670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a3c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c19f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7feb3a3b9ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a3b9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3b9e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7feb3a3baad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7feb3a3baad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bae50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7feb3a3c7670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7feb3a3c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c79f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7feb3a3c4e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7feb3a3c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c3210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7feb3a3bdad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a3bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bde50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7feb3a3ca670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a3ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3ca9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7feb3a3b8ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a3b8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a3b8e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a3b7020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3b71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a3b7340"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a3b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7feb3a3d92f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7feb3a3d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7feb3a3d2490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7feb3a3d2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3d2810"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3d29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7feb3a3ce480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a3ce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3ce800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3ce990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7feb3a3c6e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a3c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c5210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7feb3a3cbe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a3cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3ca210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7feb3a3c5670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a3c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c59f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7feb3a3cd670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a3cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cd9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7feb3a3d8670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7feb3a3d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7feb3a3cde50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a3cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3cc210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a3dbc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a3dbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a3da020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a3da1b0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a3da340"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a3da4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a3da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7feb3a3d3160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a3d3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7feb3a3d3e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7feb3a3d3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7feb3a3bd2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7feb3a3bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bd670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3bd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7feb3a3bead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a3bead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bee50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7feb3a3d56b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a3d56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d5a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7feb3a3be2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a3be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3be670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3be800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7feb3a3b92f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7feb3a3b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3b9670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3b9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7feb3a3c7e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a3c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c6210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7feb3a3c3670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7feb3a3c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c39f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7feb3a3d8cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7feb3a3d8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7feb3a3d79c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a3d79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7feb3a3cae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a3cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c8210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7feb3a3d37b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7feb3a3d37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a3d3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7feb3a3c8670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7feb3a3c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3c89f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7feb3a3c0e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7feb3a3c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a3bf610"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3bf7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7feb3a3b77a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a3b77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a3b7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a3b7cb0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3b7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a3b6020"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a3b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7feb3a3abdf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7feb3a3abdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a3a81c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7feb3a3a8350"/>
        <function-ref name="sfd" scoped="" ref="0x7feb3a3a84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a3a87c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a3a87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a3a8b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7feb3a3a7020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7feb3a3a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7feb3a3a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feb3a3ab5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7feb3a3ab5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feb3a3ab940"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a3abad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7feb3a39e380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7feb3a39e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a39e700"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a39e890"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a39ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a39ebb0"/>
        <function-ref name="get" scoped="" ref="0x7feb3a39ed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a39d020"/>
        <function-ref name="set" scoped="" ref="0x7feb3a39d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a39d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7feb3a397b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7feb3a397b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7feb3a396020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7feb3a3961b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7feb3a396340"/>
        <function-ref name="syncDone" scoped="" ref="0x7feb3a3964d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7feb3a396660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7feb3a3967f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7feb3a396980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7feb3a396b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7feb3a396ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7feb3a396e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7feb3a395020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7feb3a3951b0"/>
        <function-ref name="sync" scoped="" ref="0x7feb3a395340"/>
        <function-ref name="getChannel" scoped="" ref="0x7feb3a3955d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7feb3a395760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7feb3a3809d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7feb3a3809d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3a380d50"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3a37f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7feb3a395d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feb3a395d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3a392330"/>
        <function-ref name="clear" scoped="" ref="0x7feb3a392a60"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3a394ba0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a391210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7feb3a39d6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7feb3a39d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a39da30"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a39dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a39dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a39c020"/>
        <function-ref name="get" scoped="" ref="0x7feb3a39c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a39c340"/>
        <function-ref name="set" scoped="" ref="0x7feb3a39c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a39c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7feb3a390cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a390cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a38f0a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a38f230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7feb3a38f590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7feb3a38f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a38f910"/>
        <function-ref name="write" scoped="" ref="0x7feb3a38faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7feb3a38e6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a38e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a38ea50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a38ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7feb3a398330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a398330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3a3986b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3a398840"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3a3989d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3a398b60"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3a398cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3a398e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7feb3a3a1550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7feb3a3a1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a3a18d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7feb3a3a1a60"/>
        <function-ref name="sfd" scoped="" ref="0x7feb3a3a1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7feb3a3993a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7feb3a3993a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a399720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7feb3a39f020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7feb3a39f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feb3a39f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feb3a39f530"/>
        <function-ref name="toggle" scoped="" ref="0x7feb3a39f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feb3a39f850"/>
        <function-ref name="get" scoped="" ref="0x7feb3a39f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feb3a39fb70"/>
        <function-ref name="set" scoped="" ref="0x7feb3a39fd00"/>
        <function-ref name="clr" scoped="" ref="0x7feb3a39e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7feb3a38d020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a38d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a38d3a0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a38d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a3a3620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a3a3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a3a39a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7feb3a3971e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a3971e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a397560"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a3976f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a397880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a3a0020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a3a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a3a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7feb3a39b6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7feb3a39b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a39ba60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a39bbf0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a39bd80"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a39a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a39a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7feb3a38fe00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7feb3a38fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a38e1c0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a38e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7feb3a39a530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a39a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a39a8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a39aa40"/>
        <function-ref name="write" scoped="" ref="0x7feb3a39abd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a39ad60"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a399020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7feb3a38d8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7feb3a38d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a38de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7feb3a3a07c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7feb3a3a07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7feb3a3a0b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3a38b150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3a38b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3a38b4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3a38b660"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3a38b7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3a38b980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3a38bb10"/>
        <function-ref name="get" scoped="" ref="0x7feb3a38bca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3a38be30"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3a38a4d0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a38a020"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3a38a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3a38a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7feb3a3903e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a3903e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a390760"/>
        <function-ref name="write" scoped="" ref="0x7feb3a3908f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7feb3a391b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a391b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a390020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7feb3a39ca50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7feb3a39ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feb3a39cdd0"/>
        <function-ref name="disable" scoped="" ref="0x7feb3a39b020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7feb3a39b1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7feb3a39b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7feb3a399ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a399ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a398020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feb3a3a3ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7feb3a3a3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feb3a3a10a0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a3a1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feb3a31fa70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3a31fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feb3a31fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7feb3a323670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a323670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3a3239f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3a323b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3a323d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3a320020"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3a3201b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3a320340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7feb3a31e550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3a31e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3a31db00"/>
        <function-ref name="clear" scoped="" ref="0x7feb3a31b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3a31d3d0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a31b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7feb3a31f0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a31f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a31f440"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a31f5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a31f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7feb3a316480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feb3a316480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a316800"/>
        <function-ref name="isSet" scoped="" ref="0x7feb3a316990"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a316b20"/>
        <function-ref name="set" scoped="" ref="0x7feb3a316cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feb3a31a660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feb3a31a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3a319ce0"/>
        <function-ref name="clear" scoped="" ref="0x7feb3a317460"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3a3195b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a317b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7feb3a3206e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7feb3a3206e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb3a320a60"/>
        <function-ref name="noAck" scoped="" ref="0x7feb3a320bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb3a320d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feb3a310020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feb3a310020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feb3a3103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7feb3a315d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a315d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3a3120e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3a312270"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3a312400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3a312590"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3a312720"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3a3128b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7feb3a3074a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3a3074a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a307820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3a3079b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a307b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a307cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3a307e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7feb3a310a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7feb3a310a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3a30d020"/>
        <function-ref name="clear" scoped="" ref="0x7feb3a30d750"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3a30f8d0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a30de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7feb3a311640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a311640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a3119c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a311b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a311ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7feb3a3088b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feb3a3088b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a308c30"/>
        <function-ref name="isSet" scoped="" ref="0x7feb3a308dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a307020"/>
        <function-ref name="set" scoped="" ref="0x7feb3a3071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7feb3a3063b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7feb3a3063b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a305020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7feb3a3056e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7feb3a3056e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a3033d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feb3a30caf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feb3a30caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feb3a3090d0"/>
        <function-ref name="clear" scoped="" ref="0x7feb3a309800"/>
        <function-ref name="isValid" scoped="" ref="0x7feb3a30b970"/>
        <function-ref name="set" scoped="" ref="0x7feb3a308020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7feb3a312c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7feb3a312c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb3a311020"/>
        <function-ref name="noAck" scoped="" ref="0x7feb3a3111b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb3a311340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feb3a2b4020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7feb3a2b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a2b4c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feb3a2b2300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feb3a2b2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55be30"/>
            <typename><typedef-ref name="T32khz" ref="0x7feb3b55a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feb3a2b1150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feb3a2b1ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feb3a2b1610"/>
        <function-ref name="overflow" scoped="" ref="0x7feb3a2b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feb3a2ae450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feb3a2ae450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feb3b55b680"/>
            <typename><typedef-ref name="TMilli" ref="0x7feb3b55b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feb3a2aaa20"/>
        <function-ref name="fired" scoped="" ref="0x7feb3a2ab020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feb3a2abda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feb3a2ab920"/>
        <function-ref name="getdt" scoped="" ref="0x7feb3a2a94a0"/>
        <function-ref name="gett0" scoped="" ref="0x7feb3a2a9020"/>
        <function-ref name="isRunning" scoped="" ref="0x7feb3a2ab4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feb3a2ad090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feb3a2aa410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feb3a2ad560"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a2ada30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7feb3a299c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7feb3a299c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a297210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7feb3a2a2020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7feb3a2a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7feb3a29cc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7feb3a29cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a29b020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a29b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7feb3a296670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7feb3a296670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a2969f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a296b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7feb3a28fe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7feb3a28fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28e210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7feb3a296e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7feb3a296e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a295210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7feb3a2822f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7feb3a2822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a282670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a282800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7feb3a2852f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7feb3a2852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a285670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a285800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7feb3a2a1370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7feb3a2a1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7feb3a28a670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7feb3a28a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28a9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7feb3a2862f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7feb3a2862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a286670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a286800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7feb3a29bc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7feb3a29bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a29a020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a29a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7feb3a29ac60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7feb3a29ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a299020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7feb3a290670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7feb3a290670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a2909f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a290b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7feb3a293e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7feb3a293e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a291210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7feb3a295670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7feb3a295670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a2959f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a295b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7feb3a2a4970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7feb3a2a4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7feb3a2a4cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7feb3a2a4e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7feb3a2a3030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7feb3a2a0d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7feb3a2a0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a29e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7feb3a29e370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7feb3a29e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a29e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7feb3a289a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7feb3a289a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a289df0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a288020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7feb3a29eac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7feb3a29eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a29ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7feb3a286ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7feb3a286ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a286e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a285020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7feb3a2a0060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7feb3a2a0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a03e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7feb3a28ce50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7feb3a28ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28a210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7feb3a29a480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7feb3a29a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a29a800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a29a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7feb3a29b480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7feb3a29b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a29b800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a29b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7feb3a2a3950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7feb3a2a3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7feb3a28de50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7feb3a28de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28c210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7feb3a28e670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7feb3a28e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28e9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7feb3a28c670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7feb3a28c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28c9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7feb3a283ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7feb3a283ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a283e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a282020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7feb3a285ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7feb3a285ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a285e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a283020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7feb3a291670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7feb3a291670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a2919f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a291b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7feb3a28ee50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7feb3a28ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28d210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7feb3a287ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7feb3a287ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a287e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7feb3a294670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7feb3a294670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a2949f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a294b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7feb3a282ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7feb3a282ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a282e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a281020"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2811b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a281340"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a2814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7feb3a2a3300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7feb3a2a3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a3680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7feb3a29c490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7feb3a29c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a29c810"/>
        <function-ref name="write" scoped="" ref="0x7feb3a29c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7feb3a299480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7feb3a299480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a299800"/>
        <function-ref name="write" scoped="" ref="0x7feb3a299990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7feb3a290e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7feb3a290e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28f210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7feb3a295e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7feb3a295e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a294210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7feb3a28f670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7feb3a28f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28f9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7feb3a297670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7feb3a297670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a2979f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a297b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7feb3a2a2670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7feb3a2a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7feb3a297e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7feb3a297e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a296210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a2a6d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a2a6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a2a40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a2a4230"/>
        <function-ref name="request" scoped="" ref="0x7feb3a2a43c0"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a2a4550"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a2a46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7feb3a29d160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7feb3a29d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a29d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7feb3a29de00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7feb3a29de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a29c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7feb3a2872f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7feb3a2872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a287670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a287800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7feb3a288ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7feb3a288ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a288e50"/>
        <function-ref name="write" scoped="" ref="0x7feb3a287020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7feb3a2a06b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7feb3a2a06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a0a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7feb3a2882f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7feb3a2882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a288670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a288800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7feb3a2832f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7feb3a2832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a283670"/>
        <function-ref name="write" scoped="" ref="0x7feb3a283800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7feb3a291e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7feb3a291e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a290210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7feb3a28d670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7feb3a28d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a28d9f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a28db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7feb3a2a2cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7feb3a2a2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7feb3a2a19c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7feb3a2a19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a2a1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7feb3a294e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7feb3a294e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a293210"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7feb3a29d7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7feb3a29d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7feb3a29db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7feb3a293670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7feb3a293670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a2939f0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a293b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7feb3a28ae50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7feb3a28ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7feb3a289610"/>
        <function-ref name="write" scoped="" ref="0x7feb3a2897a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7feb3a2817a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7feb3a2817a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7feb3a281b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7feb3a281cb0"/>
        <function-ref name="write" scoped="" ref="0x7feb3a281e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7feb3a280020"/>
        <function-ref name="readDone" scoped="" ref="0x7feb3a2801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7feb3a258a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7feb3a258a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7feb3a258da0"/>
        <function-ref name="rand32" scoped="" ref="0x7feb3a257020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7feb3a255920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7feb3a255920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a258560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a25c990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a25c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a25cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7feb3a251a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7feb3a251a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7feb3a251da0"/>
        <function-ref name="rand32" scoped="" ref="0x7feb3a250020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7feb3a252940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7feb3a252940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a251560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a252080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a252080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a252400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7feb3a25aaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7feb3a25aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a25ae20"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a243020"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a2431b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a243340"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a2434d0"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a243660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feb3a239020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feb3a239020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a2393a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a239530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a2396c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a239850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a2399e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a23a220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a23a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a23a5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a23a730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a23a8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a23aa50"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a23abe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feb3a231e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feb3a231e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a230210"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a2303a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a230530"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a2306c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a230850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a234a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a234a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a234d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a231020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a2311b0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a231340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a2314d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7feb3a22f8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7feb3a22f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7feb3a22fc70"/>
        <function-ref name="rand32" scoped="" ref="0x7feb3a22fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a231750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a231750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a231ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7feb3a22e170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a22e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a22e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a22e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a22e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7feb3a230ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7feb3a230ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a230e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a22f020"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a22f1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a22f340"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a22f4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a22f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7feb3a232690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7feb3a232690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a232a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a232ba0"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a232d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a21d020"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a21d1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a21d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feb3a217950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7feb3a217950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a217cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a21aaa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a21aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a21ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7feb3a217200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7feb3a217200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a217580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feb3a2113f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7feb3a2113f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a211770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a213b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a213b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a211020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a216e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a216e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a2131e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7feb3a211a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a211a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a211df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a210020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a2101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7feb3a213570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7feb3a213570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a2138f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feb3a1e3020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7feb3a1e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a1e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feb3a1e36b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feb3a1e36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a1e3a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1e3bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1e3d50"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a1e2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a1e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a1e78e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a1e78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a1e7c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1e7df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1e6020"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a1e61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a1e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7feb3a1e6c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7feb3a1e6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a1e50a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1e5230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1e53c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a1e5550"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a1e56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a1e65e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a1e65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a1e6960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a1e8be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a1e8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a1e7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a1e71b0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a1e7340"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a1e74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a1e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7feb3a1e5a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3a1e5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a1e5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7feb3a1e4170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7feb3a1e4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a1e44f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3a1e4680"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1e4810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1e49a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3a1e4b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feb3a1d9d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feb3a1d9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a1d8180"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1d8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1d84a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a1d8630"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a1d87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feb3a1d8b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7feb3a1d8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a1d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7feb3a1aadb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7feb3a1aadb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3a1a9180"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3a1a9310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7feb3a1d72f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a1d72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3a1d7670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3a1d7800"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3a1d7990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3a1d7b20"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3a1d7cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3a1d7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7feb3a1dba20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7feb3a1dba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a1dbda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1da020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1da1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a1da340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a1da4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7feb3a1d6b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7feb3a1d6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feb3a1d5020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feb3a1d51b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feb3a1d5340"/>
        <function-ref name="dequeue" scoped="" ref="0x7feb3a1d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7feb3a1d6170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a1d6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1d64f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a1d6680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a1d6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7feb3a1db370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7feb3a1db370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a1db6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feb3a1de7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feb3a1de7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a1deb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a1decc0"/>
        <function-ref name="request" scoped="" ref="0x7feb3a1dee50"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a1dd020"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a1dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7feb3a1dd4d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7feb3a1dd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a1dd850"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1dd9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1ddb70"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a1ddd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a1db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7feb3a1da840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7feb3a1da840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a1dabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7feb3a1d9020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7feb3a1d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a1d93a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3a1d9530"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1d96c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1d9850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3a1d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feb3a18add0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feb3a18add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feb3a189180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7feb3a189410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7feb3a189410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feb3a189790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feb3a189920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feb3a189ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7feb3a189c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feb3a17db80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feb3a17db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3a17c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3a17c1b0"/>
        <function-ref name="start" scoped="" ref="0x7feb3a17c340"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a17c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feb3a17b860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feb3a17b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a17bbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a17bd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a17a020"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a17a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a17a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feb3a17a690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7feb3a17a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a17aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a181ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a181ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a17e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a17e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a17e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a17e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a17e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feb3a17d080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3a17d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feb3a17d400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feb3a17d590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feb3a17d720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feb3a17d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7feb3a17c800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7feb3a17c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a17cb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a17cd10"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a17b020"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a17b1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a17b340"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a17b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7feb3a17ad90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7feb3a17ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feb3a179180"/>
        <function-ref name="stopDone" scoped="" ref="0x7feb3a179310"/>
        <function-ref name="start" scoped="" ref="0x7feb3a1794a0"/>
        <function-ref name="stop" scoped="" ref="0x7feb3a179630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a17e980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a17e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a17ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feb3a1762d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7feb3a1762d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feb3a176650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feb3a1767e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feb3a176970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feb3a176b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7feb3a178580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7feb3a178580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7feb3a178900"/>
        <function-ref name="toIdle" scoped="" ref="0x7feb3a178a90"/>
        <function-ref name="isState" scoped="" ref="0x7feb3a178c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7feb3a178db0"/>
        <function-ref name="requestState" scoped="" ref="0x7feb3a177020"/>
        <function-ref name="forceState" scoped="" ref="0x7feb3a1771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feb3a169d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feb3a169d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a168180"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a168310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a1684a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a168630"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a1687c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a16c350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a16c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a16c6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a16c860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a16c9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a16cb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a16cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feb3a169020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7feb3a169020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feb3a1693a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7feb3a169530"/>
        <function-ref name="getRetries" scoped="" ref="0x7feb3a1696c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feb3a169850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feb3a1699e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7feb3a1641c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feb3a1641c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb3a164540"/>
        <function-ref name="noAck" scoped="" ref="0x7feb3a1646d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb3a164860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feb3a167410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7feb3a167410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feb3a167790"/>
        <function-ref name="setRetries" scoped="" ref="0x7feb3a167920"/>
        <function-ref name="getRetries" scoped="" ref="0x7feb3a167ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feb3a167c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feb3a167dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feb3a144690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7feb3a144690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a144a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feb3a145860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feb3a145860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a145be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a145d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a144020"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a1441b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a144340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7feb3a142610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7feb3a142610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7feb3a142990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7feb3a142b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7feb3a142cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7feb3a142e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7feb3a141020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7feb3a1411b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7feb3a141340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7feb3a1414d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7feb3a141660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7feb3a1417f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7feb3a141980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7feb3a141b10"/>
        <function-ref name="sync" scoped="" ref="0x7feb3a141ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7feb3a140020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7feb3a1401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7feb3a1468b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7feb3a1468b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3a146c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3a146dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3a145020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3a1451b0"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3a145340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3a1454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feb3a147ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7feb3a147ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feb3a1460a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7feb3a13f1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7feb3a13f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7feb3a13f570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7feb3a13f700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7feb3a13f890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7feb3a13fa20"/>
        <function-ref name="setCca" scoped="" ref="0x7feb3a13fbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7feb3a13fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feb3a148a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3a148a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a148e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3a147020"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a1471b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a147340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3a1474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feb3a14c020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb3a14c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a14c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a14c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a14c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a14c850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a14c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feb3a14bdf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7feb3a14bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a1491c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7feb3a144ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7feb3a144ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7feb3a1430a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7feb3a143230"/>
        <function-ref name="getRssi" scoped="" ref="0x7feb3a1433c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7feb3a143550"/>
        <function-ref name="getPower" scoped="" ref="0x7feb3a1436e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7feb3a143870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7feb3a1404d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feb3a1404d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7feb3a140950"/>
        <function-ref name="changed" scoped="" ref="0x7feb3a140ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7feb3a140c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7feb3a140e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7feb3a143b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7feb3a143b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a142020"/>
        <function-ref name="getHeader" scoped="" ref="0x7feb3a1421b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7feb3a142340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a14b210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a14b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a14b590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feb3a13dd30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feb3a13dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feb3a13c0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feb3a13c270"/>
        <function-ref name="led1On" scoped="" ref="0x7feb3a13c400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feb3a13c590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feb3a13c720"/>
        <function-ref name="get" scoped="" ref="0x7feb3a13c8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feb3a13ca40"/>
        <function-ref name="led2Off" scoped="" ref="0x7feb3a13b1b0"/>
        <function-ref name="set" scoped="" ref="0x7feb3a13cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7feb3a13cd60"/>
        <function-ref name="led2On" scoped="" ref="0x7feb3a13b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feb3a149470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb3a149470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb3a1497f0"/>
        <function-ref name="source" scoped="" ref="0x7feb3a149980"/>
        <function-ref name="address" scoped="" ref="0x7feb3a149b10"/>
        <function-ref name="destination" scoped="" ref="0x7feb3a149ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7feb3a149e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb3a148020"/>
        <function-ref name="type" scoped="" ref="0x7feb3a1481b0"/>
        <function-ref name="setType" scoped="" ref="0x7feb3a148340"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb3a1484d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb3a148660"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb3a1487f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7feb3a13d0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7feb3a13d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feb3a13d470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feb3a13d600"/>
        <function-ref name="request" scoped="" ref="0x7feb3a13d790"/>
        <function-ref name="granted" scoped="" ref="0x7feb3a13d920"/>
        <function-ref name="isOwner" scoped="" ref="0x7feb3a13dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feb3a025020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb3a025020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a0253a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a025530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a0256c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a025850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a0259e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feb3a025c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3a025c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a024020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3a0241b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a024340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a0244d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3a024660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feb3a0248b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb3a0248b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb3a024c30"/>
        <function-ref name="source" scoped="" ref="0x7feb3a024dc0"/>
        <function-ref name="address" scoped="" ref="0x7feb3a023020"/>
        <function-ref name="destination" scoped="" ref="0x7feb3a0231b0"/>
        <function-ref name="setSource" scoped="" ref="0x7feb3a023340"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb3a0234d0"/>
        <function-ref name="type" scoped="" ref="0x7feb3a023660"/>
        <function-ref name="setType" scoped="" ref="0x7feb3a0237f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb3a023980"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb3a023b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb3a023ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7feb3a022020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7feb3a022020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb3a0223a0"/>
        <function-ref name="noAck" scoped="" ref="0x7feb3a022530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb3a0226c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feb396debc0" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb396debc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb396dd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb396dd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb396dd340"/>
        <function-ref name="cancel" scoped="" ref="0x7feb396dd4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb396dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feb396dd8b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb396dd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb396ddc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb396dddc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb396dc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb396dc1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb396dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feb396dc590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb396dc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb396dc910"/>
        <function-ref name="source" scoped="" ref="0x7feb396dcaa0"/>
        <function-ref name="address" scoped="" ref="0x7feb396dcc30"/>
        <function-ref name="destination" scoped="" ref="0x7feb396dcdc0"/>
        <function-ref name="setSource" scoped="" ref="0x7feb396db020"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb396db1b0"/>
        <function-ref name="type" scoped="" ref="0x7feb396db340"/>
        <function-ref name="setType" scoped="" ref="0x7feb396db4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb396db660"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb396db7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb396db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7feb396dbc10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7feb396dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feb396da020"/>
        <function-ref name="noAck" scoped="" ref="0x7feb396da1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feb396da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feb396d1640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb396d1640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb396d19c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb396d1b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb396d1ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb396d1e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb396d0030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7feb396d02e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb396d02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb396d0660"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb396d07f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb396d0980"/>
        <function-ref name="cancel" scoped="" ref="0x7feb396d0b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb396d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7feb396cf020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb396cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb396cf3a0"/>
        <function-ref name="source" scoped="" ref="0x7feb396cf530"/>
        <function-ref name="address" scoped="" ref="0x7feb396cf6c0"/>
        <function-ref name="destination" scoped="" ref="0x7feb396cf850"/>
        <function-ref name="setSource" scoped="" ref="0x7feb396cf9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb396cfb70"/>
        <function-ref name="type" scoped="" ref="0x7feb396cfd00"/>
        <function-ref name="setType" scoped="" ref="0x7feb396cd020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb396cd1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb396cd340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb396cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a08d930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a08d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a08dcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a08de40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a08a020"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a08a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a08a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7feb3a03a400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feb3a03a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a03a7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a03a930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a03aac0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a03ac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a03ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feb3a03cdf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feb3a03cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feb3a03b1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a03b350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a03b4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7feb3a03b670"/>
        <function-ref name="sendDone" scoped="" ref="0x7feb3a03b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7feb3a038720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3a038720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a038aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3a038c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a038dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a037020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3a0371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7feb3a03bb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7feb3a03bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7feb3a03a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7feb3a037480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7feb3a037480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3a037800"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3a037990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7feb3a037c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7feb3a037c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feb3a036020"/>
        <function-ref name="runTask" scoped="" ref="0x7feb3a0361b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7feb3a039060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb3a039060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb3a0393e0"/>
        <function-ref name="source" scoped="" ref="0x7feb3a039570"/>
        <function-ref name="address" scoped="" ref="0x7feb3a039700"/>
        <function-ref name="destination" scoped="" ref="0x7feb3a039890"/>
        <function-ref name="setSource" scoped="" ref="0x7feb3a039a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb3a039bb0"/>
        <function-ref name="type" scoped="" ref="0x7feb3a039d40"/>
        <function-ref name="setType" scoped="" ref="0x7feb3a038020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb3a0381b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb3a038340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb3a0384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feb3a018020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="MasterAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feb3a018020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feb3a0183a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feb3a018530"/>
        <function-ref name="getPayload" scoped="" ref="0x7feb3a0186c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feb3a018850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feb3a0189e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feb3a01f910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="MasterAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feb3a01f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feb3a01fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feb3a018c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="MasterAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feb3a018c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feb3a017020"/>
        <function-ref name="source" scoped="" ref="0x7feb3a0171b0"/>
        <function-ref name="address" scoped="" ref="0x7feb3a017340"/>
        <function-ref name="destination" scoped="" ref="0x7feb3a0174d0"/>
        <function-ref name="setSource" scoped="" ref="0x7feb3a017660"/>
        <function-ref name="setDestination" scoped="" ref="0x7feb3a0177f0"/>
        <function-ref name="type" scoped="" ref="0x7feb3a017980"/>
        <function-ref name="setType" scoped="" ref="0x7feb3a017b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7feb3a017ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feb3a017e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7feb3a016020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7feb3b550c60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7feb3b551760" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7feb3b546d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7feb3b542c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7feb3b542940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7feb3b547030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7feb3b549870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7feb3b545b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7feb3b545550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7feb3b5458b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7feb3b542020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7feb3b544cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7feb3b5445a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7feb3b544320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7feb3b5465b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7feb3b5490e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7feb3b547dd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7feb3b5477e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7feb3b547b40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7feb3b505b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7feb3b507de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7feb3b505420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7feb3b507700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7feb3b5065a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7feb3b50a8f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7feb3b507020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7feb3b506cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7feb3b6747e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7feb3b93c700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7feb3b59aa80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7feb3b5981f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7feb3b59a2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7feb3b712020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7feb3c0b2e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7feb3b9fae20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7feb3b9fa610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7feb3b9ee770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7feb3b9ec020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7feb3b4a0020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7feb3b4a07d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7feb3b49f020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7feb3b49e020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7feb3b49d7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feb3b49b020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7feb3b49f7b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feb3b49bb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7feb3b49b910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7feb3b4a2850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7feb3b49e800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7feb3b49d020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7feb3b4928a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7feb3b490020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7feb3b493a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7feb3b490e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feb3b492190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7feb3b490740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feb3b496c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7feb3b493350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7feb3b466880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7feb3b465020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7feb3b461b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7feb3b461890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7feb3b45f5d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7feb3b468120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7feb3b464020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7feb3b45fd60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7feb3b45e860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7feb3b45e5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7feb3b465760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feb3b4660e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7feb3b45c190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7feb3b463770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7feb3b460e30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7feb3b4688c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7feb3b4603e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feb3b469270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7feb3b4647a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7feb3b461020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7feb3b463020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7feb3b4699a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7feb3b133110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feb3b137e40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7feb3b132600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feb3b132380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feb3b137460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feb3b133960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3b1c0350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3b1c0350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7feb3b1b91f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feb3b1bea60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7feb3b1bb820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feb3b1bb250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7feb3b1bb590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7feb3b1bca60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7feb3b1b7270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7feb3b1b9980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7feb3b1bc270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7feb3b1bf020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feb3b1c0c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7feb3b1ba820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feb3b1ba250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7feb3b1ba590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7feb3b1bfae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feb3b1bf860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feb3b1be350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7feb3b15d3f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b15d170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7feb3b15c490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b15c210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feb3b1577b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b1571b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3b1574e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feb3b1588a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7feb3b15a930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b15a370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3b15a6a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feb3b1422c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7feb3b156930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7feb3b156cb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3b142020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feb3b13e970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b13e370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3b13e6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feb3b13da60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feb3b140630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b1403b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feb3b13fb80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b13f5a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feb3b13f8f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7feb3b1399c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
              <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3b139060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7feb3b1393b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3b1396e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7feb3b1482a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feb3b16f180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b148020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7feb3b151d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b151ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7feb3b1541f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7feb3b154cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b154a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7feb3b14f7a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b14f1c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feb3b14f510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7feb3b1502b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b152c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feb3b150020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7feb3b14bbf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b14b970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7feb3b14a020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b1499a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7feb3b149cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feb3b170d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7feb3b14c9f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b14c770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7feb3b146730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feb3b16f180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feb3b146150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7feb3b1464a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feb3b16f180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7feb3b145580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feb3b16f180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3b0f2350" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3b0f2350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7feb3b0f2c70" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3b0eec70" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3b0eec70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feb3b0eb020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7feb3b0e8c50" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feb3b0eaba0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7feb3b0e82b0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feb3b0e9bd0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7feb3b0e8020" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7feb3b0e93b0" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7feb3b0e6480" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feb3b0ebb80" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feb3b0eb900" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3b0eb020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feb3b0ea3e0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7feb3b0c5350" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7feb3b0c5cd0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7feb3b0c5a50" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7feb3b0c4750" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7feb3b0c44d0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7feb3b0c32a0" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7feb3b0c3020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feb3b0c3990" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7feb3b0d3810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7feb3b0d12a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7feb3b0d1020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7feb3b0d2020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feb3b0d9a80" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7feb3b0d2760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7feb3b0d69b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7feb3b0d3120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7feb3b0d6270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7feb3b0d50e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7feb3b0d59f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7feb3b0d5770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7feb3b0d1cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7feb3b0d1a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7feb3b0ca3a0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7feb3b0cbd70" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7feb3b0ca110" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7feb3b0cd350" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feb3b4fb550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7feb3b4fa020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7feb3b0cad40" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7feb3b0c8c40" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7feb3b0cb4e0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7feb3b0c84b0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7feb3b0cdaf0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7feb3b0cc2b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7feb3b0ccd00" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feb3b4fb550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7feb3b4fa020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feb3b0cca80" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feb3b4fb550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7feb3b4fa020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7feb3b0b4d60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7feb3b0ae400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7feb3b0ae180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7feb3b0ad020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7feb3b0aed10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7feb3b0af9a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7feb3b0af0e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7feb3b0b1740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7feb3b0b14c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7feb3b0831f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3af34e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3af34e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feb3af2f070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3af2f070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7feb3af2f990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3af2f070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7feb3af2dad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7feb3af2d270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7feb3af2c270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7feb3ae6ce80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7feb3c0a6930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7feb3ae6cc00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7feb3c0a6930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3adc7020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3adc7020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feb3adc7260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3adc7260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7feb3adc40b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3adc7260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adc5e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7feb3adc32a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adc3020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7feb3adc7e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adc7ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feb3adc1610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3adc7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adc1020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7feb3adc1380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3adc7260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7feb3adb6680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adb6060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7feb3adb63f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7feb3adb5850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adb55d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7feb3adb7810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7feb3adbad60" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7feb3adbaae0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7feb3adcc2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adcc060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7feb3adcb510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adcb290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7feb3adc9680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3adc9400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7feb3ad8d520" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad8d2a0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7feb3ad90780" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad90500" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7feb3ad92e70" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7feb3ad92bf0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7feb3ad92350" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7feb3ad920d0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7feb3ad918d0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7feb3ad91650" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7feb3ad8e690" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad8e410" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7feb3ad81e60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7feb3ad81850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7feb3ad81bd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7feb3ad9c120" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad9dae0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7feb3ad9de30" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7feb3ad98710" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad98110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7feb3ad98480" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7feb3ad9cc00" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7feb3c0a6110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad9c980" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7feb3ad99620" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad993a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7feb3ad9d2e0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad9d060" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7feb3ad9b760" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad9b4e0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7feb3ad856c0" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad85440" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7feb3ad89790" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad89170" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7feb3ad89500" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7feb3ad87680" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad87400" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7feb3ad88b90" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad88570" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7feb3ad88900" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7feb3ad846c0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad84440" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7feb3ad952a0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad95020" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feb3ad7be00" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad7b840" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3ad7bb70" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feb3ad70620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad70020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3ad70350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feb3ad6f660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feb3ad722a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad72020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feb3ad71750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad71170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feb3ad714c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7feb3ad78cc0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7feb3ad7acc0" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7feb3ad7a350" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7feb3ad784f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7feb3ad778a0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feb3ad4d3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad51dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7feb3ad4d110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feb3ad4c6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7feb3ad49e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7feb3ad49060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7feb3ad498a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3ad49bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feb3ad4b840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7feb3ad4b260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feb3ad4b5b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7feb3ad4de30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7feb3ad4dbb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7feb3ad450e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7feb3ad4e870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7feb3ad58a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feb3ad50270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7feb3ad3f2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad3f020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7feb3ad41710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7feb3b1aa3a0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7feb3b1a9d10"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad41410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7feb3ad3e620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7feb3b1a7860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7feb3b1a5180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3ad3e320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7feb3ad556e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7feb3ad53840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7feb3ad53070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7feb3ad5ae20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7feb3ad57e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7feb3ad54020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7feb3ad54840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7feb3ad576c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7feb3ad39d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7feb3ad3a350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7feb3ad39530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7feb3ad392b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7feb3ad3aac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7feb3ad3b020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7feb3ad43c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7feb3ad3bad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7feb3ad3b850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7feb3acde870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7feb3acde290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7feb3acde5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7feb3acdf1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7feb3ace0880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7feb3ace0210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7feb3ace05f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7feb3ace6c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feb3ace6990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7feb3acdfa70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7feb3ace2730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7feb3ace24b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7feb3ace5d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7feb3ace5ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7feb3acdcae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7feb3ace19c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7feb3ace1740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7feb3acdc2b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7feb3ace44d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7feb3adb9ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7feb3adb1240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7feb3ace4cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7feb3ace61f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7feb3ace5390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7feb3ace1020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7feb3acda4a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7feb3acda4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7feb3acdad60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7feb3acd7ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7feb3acda4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7feb3acd7510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7feb3acd7830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7feb3acda4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7feb3acb9ce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7feb3b1ae550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3acb9a60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7feb3acb27f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7feb3b1ae550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3acb2570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7feb3accdc50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7feb3adb9ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7feb3adb1240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7feb3acbb0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7feb3acba070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7feb3acbb8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feb3b16f180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7feb3acbd860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feb3b16f180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7feb3acbd280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feb3b16f180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7feb3acbd5d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feb3b16f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7feb3acafe40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7feb3b1ae550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7feb3acb7060" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7feb3b1ae550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7feb3acb81e0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7feb3acb8a50" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feb3acb8da0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7feb3acb67b0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7feb3b1ae550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7feb3acb7930" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7feb3acb61c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feb3acb6510" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7feb3acbf7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7feb3acbf020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7feb3acc0720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7feb3acc3db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7feb3ab99190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7feb3ab98350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7feb3ab99b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7feb3ab998b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7feb3ab9c8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7feb3ab6f800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feb3ab6c270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7feb3ab6f070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7feb3ab6d9a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7feb3ab6d720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7feb3ab6d020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7feb3ab73870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7feb3ab6e810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7feb3ab6e030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7feb3aa1a810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7feb3aa190e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7feb3aa19920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7feb3a9f1420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a9f3e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feb3a9f1190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7feb3a9ec700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a9edd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feb3a9ec110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feb3a9ec460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7feb3a9ed020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7feb3b1ae550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a9ef970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feb3a9efcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7feb3a9f3020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7feb3b1ae550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a9f49d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feb3a9f4d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7feb3a9f0b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a9f0250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feb3a9f05a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feb3a9f08f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feb3a9d2a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7feb3a9d20d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7feb3a9d2460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3a9d27a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feb3a9ce020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7feb3a9d12a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7feb3a9d1630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3a9d1970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feb3a9d1ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
              <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7feb3a9d48f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7feb3a9d4670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7feb3a8f4b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7feb3a8f14e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7feb3a8efaa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7feb3a9252b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7feb3a927e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7feb3a8ee6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a8ee470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7feb3a8ecb30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a8ec8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7feb3a8ec020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7feb3a8eb5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a8eb370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7feb3a8e1020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7feb3a8e2750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7feb3a8da740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a8da4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7feb3a8ddcd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7feb3a8b57c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7feb3a8c12b0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7feb3a8cd020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a942020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7feb3a942860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feb3a8d1cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a942020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7feb3a942860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7feb3a8c33b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7feb3a8cb530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a93d020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7feb3a93d860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feb3a8cb2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a93d020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7feb3a93d860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7feb3a8ba7a0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7feb3a8b7020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7feb3a8cca90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a940ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7feb3a93f680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7feb3a8cbd20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a93d020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7feb3a93d860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7feb3a8c7b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7feb3a8c7910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7feb3a8c71f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7feb3a8ba070" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7feb3a8cc2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a940ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7feb3a93f680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feb3a8cc020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a940ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7feb3a93f680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7feb3a8c8020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7feb3a8b9020" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7feb3a8c8a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7feb3a8c8780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7feb3a8c5480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7feb3a8c5c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7feb3a8bc1f0" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7feb3a8be120" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7feb3a8c2350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7feb3a8bc930" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7feb3a8c1a50" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7feb3a8b9740" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7feb3a8c6390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7feb3a948d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7feb3a9444d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7feb3a8b8020" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7feb3a8b5020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7feb3a8ca700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7feb3a8ca480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7feb3a8b42a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a8b4020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7feb3a8cd800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feb3a942020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7feb3a942860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7feb3a8c3b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7feb3a8c01f0" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7feb3a8bd980" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7feb3a912b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7feb3a912730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7feb3a8bd700" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7feb3a912b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7feb3a912730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7feb3a8bec30" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7feb3a9252b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7feb3a927e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7feb3a8be9b0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7feb3a9252b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7feb3a927e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7feb3a8b4ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7feb3a8b8810" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7feb3a8c6ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7feb3a8b7780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7feb3a8c0960" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7feb3a8c2af0" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7feb3a84d020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7feb3a8279d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7feb3a838020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7feb3a82d620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7feb3a82d3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7feb3a8415b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7feb3a82bc50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7feb3a8325e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7feb3a83a070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7feb3a837020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7feb3a83b020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7feb3a83cd30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7feb3a83e4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7feb3a835020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7feb3a82c550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7feb3a827270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7feb3a82ec30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7feb3a822350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7feb3a81e9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7feb3a840420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7feb3a836740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7feb3a8331f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7feb3a83b8e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7feb3a843350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7feb3a82e460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7feb3a82e1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7feb3a846c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7feb3a82b4d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7feb3a826190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7feb3a820b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7feb3a81e270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7feb3a829b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7feb3a8268c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7feb3a82ddb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7feb3a823390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7feb3a840b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7feb3a8317e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7feb3a8247b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7feb3a828ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7feb3a833de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7feb3a833b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7feb3a81f2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7feb3a830a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7feb3a829420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7feb3a843e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7feb3a8fe4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7feb3a8fe080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7feb3a843b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7feb3a8fe4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7feb3a8fe080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7feb3a836020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7feb3a83fcb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7feb3a83fa30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7feb3a835980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feb3a835700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7feb3a823b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7feb3a83c620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7feb3a83f350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7feb3a8302a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7feb3a830020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feb3c0a5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7feb3a841ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7feb3a824020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7feb3a828350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7feb3a82ccc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7feb3a831020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7feb3a832d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7feb3a837740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7feb3a83a7b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7feb3a81fa40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7feb3a83ee30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7feb3a83ebb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7feb3a822b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7feb3a838750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7feb3a820350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7feb3a779020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7feb3a779880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7feb3a744dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7feb3a742020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7feb3a744530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7feb3a7436d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7feb3a742950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7feb3a740b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7feb3a7354c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feb3a73e490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feb3a735240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feb3a73e490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7feb3a738420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7feb3a736020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feb3a73e490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feb3a738ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feb3a73e490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7feb3a736930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7feb3a73e490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7feb3a52b5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feb3a52b360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7feb3a518b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7feb3a5181c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7feb3a518530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3a518860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7feb3a517880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feb3a5172c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feb3a5175f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feb3a4fe530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feb3a4fe530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feb3a4fe770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3a4fe770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7feb3a4fd2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3a4fe770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feb3a4fd060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feb3a4fe770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7feb3a498580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7feb3a4689e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7feb3a468020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7feb3a468750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7feb3a46a7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7feb3a46a020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7feb3a46dd30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feb3c0a5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7feb3a47e3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb3c0a5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3a47e150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7feb3a47f3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3a47f150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feb3a47b350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3a47b0d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feb3a47d390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feb3a47d110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feb3b15f350"/>
                <typename><typedef-ref name="message_t" ref="0x7feb3b15e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7feb3a2595e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7feb3a2595e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7feb3a2552a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7feb3b9f8020"/>
            <typename><typedef-ref name="error_t" ref="0x7feb3b9f01b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7feb3a2595e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7feb3a255020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7feb3a2595e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7feb3a0811f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feb3b9fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
