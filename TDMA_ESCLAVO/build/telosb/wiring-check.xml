<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6c03deb4a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6c04176e70"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6c04176e70"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6c04171aa0"/></to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c03debae0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bc620"/></to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7f6c03ddce50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03d0d980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03d0d980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03d032c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f6c03dd8360"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c039de260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c039de260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03d032c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="TimerDormir" scoped="" ref="0x7f6c03dd3860"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c039d8b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c039d8b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03d032c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="TimerComienzaDormir" scoped="" ref="0x7f6c03dced30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c039d1560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c039d1560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03d032c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6c03d6f910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6c02c1fc30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6c02c1fc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6c022cdaa0"/></to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c03d5f8d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c02c1d8b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c02c1d8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c022cc720"/></to>
    </wire>
    <wire loc="37:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f6c03d4ca50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6c02cc4360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6c02cc4360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6c039bc080"/></to>
    </wire>
    <wire loc="38:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6c03d548f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6c02c1f020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6c02c1f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6c022cee60"/></to>
    </wire>
    <wire loc="39:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c03d4f180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02c18910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c02c18910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02cc25c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c03d44c20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c039b7930"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c039b7930"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c0397e2f0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c02d96dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c02e1fb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c02e3d750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c02e5e080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c02faf620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c030a6c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c0383b7e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c02453020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c03577020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c038eccc0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c03cfa080"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6c040d6140"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6c0461e1e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6c0461e1e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6c041c3140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6c040d6b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c04174380"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c04174380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c041644e0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c040d53a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f6c041663a0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f6c04164b50"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f6c04162220"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f6c04165be0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f6c04165be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c04132b60"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f6c04162900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c0416fa10"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f6c04161020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c04094dd0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c04132b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c04118820"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6c041282c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6c04117020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6c04299c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6c04116320"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c041c2040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f6c041bd490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f6c043f69a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c04094dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c040bc020"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6c040b4b50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f6c040bd590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6c040bd590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c03e169e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6c040bae30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f6c04096830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6c04096830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c03e00020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6c040b3020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f6c04095b50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6c04095b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c03dfa630"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c03e05c50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f6c04027020"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f6c04027020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ed0540"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c03dfe2f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f6c040258a0"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f6c040258a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ecbb90"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c03df97a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f6c04022020"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f6c04022020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ec5060"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f6c04079d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f80b90"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f6c04060e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f48060"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f6c03fd53d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f38060"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f6c03fda3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e9ab90"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f6c040033f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f33540"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f6c0405be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f3eb90"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f6c04040020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f07060"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f6c04012020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ea4060"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f6c03ffe3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f27060"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f6c03fea3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ebbb90"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f6c03fcb3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e94060"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f6c04071580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f6fb90"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f6c03ffcbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f22540"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f6c0406c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f64540"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f6c04052710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f2eb90"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f6c040398a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ef6060"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f6c040208a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ec0540"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f6c0400b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e94060"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f6c0407ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f8a060"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f6c04065d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f536d0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f6c0404be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f1db90"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f6c04006bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f38060"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f6c03fe3bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03eaab90"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f6c03fcebb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e94060"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f6c03ff2bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ed5060"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f6c04046e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f12740"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f6c0402c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03edcb90"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f6c04017020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03eb0540"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f6c03fdf3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ea4060"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f6c03ff93e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ee6060"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f6c04076580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f79060"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f6c0405d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f43540"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f6c0401c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ebbb90"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f6c04058710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f38060"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f6c0403e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f02540"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f6c040108a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e9f540"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f6c03ff43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03edcb90"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f6c04081cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f95540"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f6c0406ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f5fb90"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f6c04050e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f27060"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f6c04036020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ef1540"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f6c03fef3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f1db90"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f6c03fe8bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03eb5060"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f6c03fd8bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e94060"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f6c04031020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ee6060"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f6c03fedbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f17060"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f6c0407b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f85540"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f6c04062710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f4eb90"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f6c04048710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f17060"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f6c03ff7bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ee1540"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f6c03fddbb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e9f540"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f6c040438a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f0db90"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f6c0402a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ed5060"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f6c040158a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03eaab90"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f6c04074d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f74540"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f6c0401a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03eb5060"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f6c0406fd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f69060"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f6c04055e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f33540"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f6c0403b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03efcb90"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f6c0400d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e9ab90"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f6c04080580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f90b90"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f6c04067580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f59060"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f6c0404d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f22540"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f6c040348a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03eecb90"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f6c03fe53e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03eb0540"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f6c03fd3ba0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f2eb90"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f6c04001bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f2eb90"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f6c0402f8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ee1540"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f6c03fd03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03e9ab90"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f6c03fc9bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03ec0540"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f6c04008060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6c03f3eb90"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03d032c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03cfae20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03cfae20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03a068e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c03cfa080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c03ab3020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03a068e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c02645db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6c03cf1750"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6c039f6020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c03ab3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c0283bb10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f6c039fe020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03a862f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6c03a81850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c03ab3870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6c03ab3870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c02834890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6c039ec300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c03b2c8c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6c03b2c8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c03b0fcf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c0283bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c0281e660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f6c0282d0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c0283a4f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6c0283a4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c0281d020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6c02831c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c03b2c8c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c02819190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c02824340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c02824340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c02818770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c02822a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c02822a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c02817a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c02821da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c02821da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f6c03ca65a0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f6c03ca65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bef6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f6c03ca4a20"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f6c03ca4a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03beeac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f6c03c9fd40"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f6c03c9fd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bdf220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f6c03c9d160"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f6c03c9d160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03bde610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f6c03c9b020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f6c03c9b020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bd76d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f6c03c9a570"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f6c03c9a570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03bd6ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f6c03c98410"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f6c03c98410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bd0b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f6c03c97890"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f6c03c97890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03bce020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f6c03c958c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f6c03c958c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bc7220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f6c03c94d40"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f6c03c94d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03bc6610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f6c03c92a50"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f6c03c92a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bc06d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f6c03c90020"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f6c03c90020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03bbfac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f6c03caba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bf6220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f6c03cacae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bfdcb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f6c03c993e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bd57a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f6c03cb2d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03bfd020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f6c03c90da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bbe7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f6c03cb65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03c4b6d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f6c03ca0da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03be5cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f6c03ca0020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03be5020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f6c03ca2a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03be7b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f6c03ca9da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bf42f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f6c03c96890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bcecb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f6c03ca9020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03bf5610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f6c03cbadb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c593e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f6c03cb38c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6c03bffb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f6c03cad8d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03c047a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f6c03c9c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bdd2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f6c03cb5a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6c03c05ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f6c03c93ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bc52f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f6c03ca3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c03bed7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f6c03c572f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c58bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6c03c57940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f6c03bb73f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6c03c55020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f6c03bb7b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03c03610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c593e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03c02c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c58bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bfcb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c593e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bf92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c58bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bf3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c593e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bf27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c58bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f6c03c4f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6c03c4f750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f6c03bb5430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6c03c4fda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f6c03bb5bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bec610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bebc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03be4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03be22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bdc160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bdb7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bd4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bd3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bcdb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bcb2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bc4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bc37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c03bbd610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6c03bbcc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6c03af20f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6c03b2a8e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6c03b2a8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c03b24b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03b15c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f6c03a7d9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f6c0263e3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f6c039fe020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f6c02638a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f6c039f9450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f6c026395d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f6c041663a0"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f6c02637100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6c039bc080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6c03991420"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6c03991420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6c02d89b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c039a57a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c02d528b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f6c03993640"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6c02d53ce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6c039b8c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6c02d54a80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6c039bb1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6c02d58020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6c039b9020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6c02d57df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c0397e2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c0399d5b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c0397c320"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c0397c320"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c02d89080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c039ba3f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02d57210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c039ae350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c0397d1a0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c0397d1a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6c02f2c6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6c03996880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6c0397ce10"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6c0397ce10"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6c02d75020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c039b9650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c02d56470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c039ab470"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c0397db50"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c0397db50"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c02f2ba70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f6c02d4a0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c0398a960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6c02d51860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6c03989e20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f6c03989e20"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6c02df2c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6c02d50690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c03981b70"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c03981b70"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c02df1a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6c02d4c4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6c0315eb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02d50ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f21d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02d4fb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f1d640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6c02d4e610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6c038ef550"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6c038ef550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6c038e50c0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f6c02d4b1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c03976490"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c03976490"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c03970970"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c02d4ad30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6c02d89b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f6c02d86d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c02f2ba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c02f1c020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6c02d75020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6c02d73410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f6c02df2c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6c02de7a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c02d89080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c02d822d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f6c0398da30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02df25e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c02df25e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f6c02de7370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6c02f2c6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6c02f1ec50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c0398a960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c02df5be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c02df5be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c02dea7b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f6c03980c90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c02df38e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6c02df38e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f6c02de94d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f6c03989130"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f6c02df0170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f6c02df0170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f6c02de5020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c02df1a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c02de6840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6c02d86d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6c0397a590"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6c0397a590"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6c03971020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6c02def6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c02e42220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6c02e42220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c02e40a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6c02e41020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c02d78350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6c02d78350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6c02d75d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6c02d75d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c02d8dce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6c02d8dce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6c02d87860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6c02d87860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c039770c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6c039770c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c03971b10"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6c02def020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02d8a980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c02d8a980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6c02d86690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6c02d86690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02e26aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c02e26aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02e22e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6c02e23950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c03977d60"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c03977d60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02fb47c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c02fb47c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c02fac020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c0396f7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c038fd020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c038fd020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c038e6390"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6c03967cd0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6c038fb4b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6c038fb4b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6c038e3020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6c03963840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6c030b46c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6c03963840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6c02fb75c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6c02fb75c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6c02fafca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6c030b46c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6c030a4320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6c0395c6c0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6c030b1020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6c030b1020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c030a4bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f6c03965570"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c030b1cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c030b1cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c030a3970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c03958970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c03956020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6c039599d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6c02e64a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6c02e64a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6c02e59a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f6c0394b720"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c02e66aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6c02e66aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c0357b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c0395b2e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f6c039472a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f6c039482a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f6c039492b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f6c038e9850"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f6c038e2500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f6c038df3a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6c03837220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6c03837220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6c03831af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6c038da5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6c037f3e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6c037f3e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037e4630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6c038d9830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f6c037ef6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6c037ef6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037d3630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6c038d8b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f6c037ecce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6c037ecce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037c8020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6c038d25b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f6c037ae400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6c037ae400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6c0364b680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6c038bf520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c031e9e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c031e9e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c035fb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6c038be570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f6c031e67b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6c031e67b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6c038bec80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f6c031e4ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6c031e4ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6c038c0d70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f6c031e7ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6c031e7ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c038c0450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c031e3160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c031e3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6c038c51d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f6c031d9870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6c031d9870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6c038c5a80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f6c031d7880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6c031d7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6c038c83c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f6c031d50a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6c031d50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c038c8c90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c031e0e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c031e0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c038c45f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c031dc670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c031dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6c038d19a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f6c031c9500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6c031c9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6c038d1020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f6c031cace0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6c031cace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c038c3020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c031dae50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c031dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6c038c38c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f6c031dce50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6c031dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6c038c21d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f6c031dbe50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6c031dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f6c038bc180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c031b7a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c031b7a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c035fb4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f6c038bd3d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c0318a9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c0318a9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c035fb4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6c038cedd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6c0315eb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6c038dd970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6c0315dd20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6c0315dd20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6c03141310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f6c038b2ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f6c038b3db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c0383b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c03831260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c03831260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c025deaf0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6c03831af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c025dd370"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c025deaf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c025d6ab0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6c025dd370"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c025d05f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c025d6ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c025b7510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f6c025c7d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c025d5360"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6c025d5360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6c025b7da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6c025c99b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c0381b080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6c0381b080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c03817cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c025b2020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c025bc1b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c025bc1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c025b1760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c025bb8f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c025bb8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c025b0a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c025bac10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c025bac10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6c038130f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6c03b2a8e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6c037f1090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037dfb00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6c037f0390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037d9020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6c03839b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037e9020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6c037ed9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037ceaf0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037e82f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6c04079d50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037e37a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f6c04040020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037dec60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f6c0407b580"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037d82f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6c04081cb0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037d27a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f6c04036020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037cdc60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f6c040438a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037c72f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f6c040398a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6c037aa700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6c037a7c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6c037ad060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6c0363cb70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03790760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f6c03ca2a50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f6c0378fa80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f6c03ca0da0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f6c0378d930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f6c040438a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f6c0364a2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6c0377b3f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f6c0377b3f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6c037643f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f6c0363b7a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6c0377e620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f6c0377e620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6c0376c7a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f6c0376f3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f6c037583f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f6c03778d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f6c03761d50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f6c037753f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f6c0375e3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f6c03783bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f6c03767d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f6c03772d50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f6c0375bd50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f6c0377a710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f6c03763710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f6c0376e710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f6c03757710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f6c03774710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f6c0375d710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f6c0377c020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f6c03765020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f6c03770100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f6c03759100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f6c03779a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f6c03762a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f6c03776020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f6c0375f020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f6c037848a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f6c03769a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f6c03773a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f6c0375ca30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6c031e6160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c031d8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6c031d00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6c031d70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6c031c4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6c031c6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6c031e4490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6c031cc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c031c7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6c031d2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6c031d30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c031e8a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035fa350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035fa350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035f1660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c031e3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6c031e2490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c031cbc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6c031e2be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c031c7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6c031cc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c031db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c031cd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6c031d0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c031cd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6c031c5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6c031c6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6c031d3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6c031ce0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6c031c9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6c031d5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6c031c4ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6c031e7480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6c031e0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c031da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6c031d10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6c031d1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c031d80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6c031e12f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6c031e0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c031e37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c031ca500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6c031c5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c031d20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6c031ce880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6c031e6e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6c031d40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6c031e1940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6c031d4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6c031cb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6c031c39b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035ef890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035eeba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035eda30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c035fb4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c035f0510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035ec8b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f6c035dfb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c03580770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6c03580770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c0357b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6c035ea060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c0355ec40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c0355ec40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c024d9940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6c035e7c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6c0355d8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6c0355d8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6c024d8d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6c035df2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6c03213020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6c03213020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6c024d6020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c035e8a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f6c035dbbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6c0357b1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c03577b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6c024d6020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6c034f6850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6c024d8d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6c034f7110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c024d9940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c034fbd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c024d85d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c024ce020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c024ce020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c0337a2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6c034f7110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6c0347ba10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6c024d7410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6c034f7790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6c034f7790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6c0347a060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6c034f1a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6c024d67c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c024c0760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c034f48e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6c034f2690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c024cf340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c024cf340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c0337b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6c034edb40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6c024c8c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6c024c8c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6c0337d4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c034f48e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c0347b250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6c034f6850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6c0347ac50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c034fbd80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c0347c470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6c034783e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6c034f1a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6c034795b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f6c034f2690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6c03472480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6c034edb40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f6c03478a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6c03468020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6c03468020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6c0345f700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c03472c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f6c034702f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6c034602c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6c0345ac20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6c03464d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6c0345a2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6c0342bbb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f6c04006bc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f6c034283e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f6c040033f0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6c03426bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f6c04001bc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f6c034233e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f6c03ffcbc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f6c03421bb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f6c03ffe3f0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f6c03431d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f6c032cfd40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6c024c7440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6c0337c3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6c024c7a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6c032d6020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6c032d6020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f6c032cfd40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6c024cc020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6c03468020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c024ce7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c0337aad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c0337aad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c032e1e80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c033798a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c024c0760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c0337a2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c032e2a60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c032e2a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c0244f6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f6c0337d4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6c03374d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c0337b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c032e4ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c032e4ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c02450850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6c0337c3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6c03373710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c032e1e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c0244ea70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c032e0790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c033798a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c03362bf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c032e1e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f6c03373d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6c03464d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6c033625e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6c034602c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6c032e1270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6c0244fe40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c0244d9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c032e0790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f6c0244d2d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f6c032df020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6c0244c2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6c02453630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6c0244a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f6c032c5bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6c0345f700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6c032c0700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f6c04006bc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6c032bee40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f6c04001bc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c031aac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6c031b4da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c031adb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c031a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6c031a0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6c031a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6c031932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6c031962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6c031b2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6c0319b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c031972f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6c031acc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6c031abc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6c031a1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6c031a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6c031a6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c031b5760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035fa350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c031b1aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6c031b0120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c0319aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6c031b0870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c03197ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c031b2dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6c0319de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c031ab480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c031ac480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6c031b4750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c0319ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6c0319f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c0319d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6c03195ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6c03196ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6c031a3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6c0319fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6c03198ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6c031a5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6c03193ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6c031b4100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6c031ad370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c031aa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6c031a1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6c031a6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6c031a0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6c031a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6c031b3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c031a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6c031ae020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6c031aecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6c031982f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6c03199ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c031b1450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c031992f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6c031952f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c031a3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6c0319e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6c031b3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6c031b2770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6c031a5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6c031ae670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6c031a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6c0319be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6c031927a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c0317dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6c03188da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c03181b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c0317b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6c03174e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6c0317be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6c031672f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6c031692f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6c03185120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6c0316f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c0316a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6c0317fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6c0317ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6c03175670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6c03177e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6c0317a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c03189760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035fa350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c03184aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6c03183120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c0316ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6c03183870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c0316aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c03185dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6c03170e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c0317e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c0317f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6c03188750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c03171e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6c03172670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c03170670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6c03168ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6c03169ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6c03176670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6c03172e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6c0316cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6c03178670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6c03167ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6c03188100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6c03181370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c0317d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6c03175e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6c0317ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6c03174670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6c0317c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6c03187450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c0317ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6c03182020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6c03182cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6c0316c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6c0316dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c03184450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c0316d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6c031682f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c03176e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6c03171670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6c03187aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6c03185770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6c03178e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6c03182670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6c03177670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6c0316fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6c031667a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f6c0313e880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f6c03133020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f6c03133020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f6c0312e140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f6c03129bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f6c03132c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f6c03132c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f6c03115150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f6c0312d530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6c030c01b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f6c03119540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f6c0311a590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f6c0311a590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6c030ca9e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f6c03110950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f6c03117ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f6c03117ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f6c030eda90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f6c031159f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f6c03119540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6c030dd020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6c030d7530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6c030d7530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c030d3e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c030d0020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f6c03cbadb0"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c030c8c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f6c04065d50"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6c030ad990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6c030a2900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f6c030af150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f6c030a10f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f6c030a1ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6c03837220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6c0308c690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f6c03839b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6c030869b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6c037f3e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6c03085cd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f6c037ed9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6c0308da80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f6c037aa700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6c03083020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c02fe7c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c02fe7c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c035fb4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c03083d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c02fe68f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c02fe68f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035fa350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6c0307f6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6c02fe52f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6c02fe52f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6c0307fde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f6c02fe4cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6c02fe4cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6c0307e530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f6c02fe3370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6c02fe3370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c0307ec60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c02fe2d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c02fe2d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6c03081e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f6c02fdcc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6c02fdcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6c03082780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f6c02fc37a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6c02fc37a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c03081550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c02fc82f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c02fc82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c0307d3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c02fdd480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c02fdd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c0307c5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02fd9e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02fd9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c0307b020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02fd8670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02fd8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6c0307de80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f6c02fdf7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6c02fdf7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6c0307a9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f6c02fc5ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6c02fc5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6c0307b890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f6c02fc62f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6c02fc62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6c0307a130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f6c02fc6ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6c02fc6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6c03075d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f6c02fb7df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6c02fb7df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f6c02fae550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c0309dd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c0309cbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6c03095c60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02f2a550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02f2a550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02f1ca80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6c03087e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6c02f22480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6c02f22480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6c02f148b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c030786c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c02fdac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6c02fe4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c02fdec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6c02fd1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6c02fd8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6c02fc42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6c02fcc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6c02fddc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6c02fd2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6c02fd4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6c02fd7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6c02fe0370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c02fcba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6c02fe0ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c02fc8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c02fe2060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6c02fcde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c02fdc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6c02fe5940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c02fcfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6c02fd0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c02fcd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6c02fd3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6c02fd0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6c02fc9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6c02fd6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6c02fc4ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6c02fde490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c02fda480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6c02fd2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6c02fd7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6c02fd1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6c02fd9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6c02fe4670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6c02fdf160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6c02fdfe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6c02fc92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6c02fcaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c02fe26b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c02fca2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6c02fc52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c02fd3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6c02fcf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6c02fe39c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6c02fd6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6c02fd4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6c02fcce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f6c02fb3020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f6c02fac7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6c02f98150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6c02fab020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6c037f3e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6c02faa380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f6c037f1090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6c02fa96b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f6c037f0390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6c02fa8a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6c037ad060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6c02fa76e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c02eb2d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6c02eb2d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6c035fb4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6c02fa6530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f6c02e8ead0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6c02e8ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c02fa5ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c02eac6b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c02eac6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6c02fa53a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f6c02eab370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6c02eab370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02fa4330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02fa31e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6c02fa1d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02f2a550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6c02fa3b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6c038ef550"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02f9c3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02ea3e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02ea3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02f9ccb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02ea2670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02ea2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6c02f9db10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f6c02ea9160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6c02ea9160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6c02f9a6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f6c02e8e2f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6c02e8e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6c02f9b590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f6c02e912f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6c02e912f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6c02f9be00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f6c02e91ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6c02e91ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c02f99020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c02e92ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c02e92ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6c02f998b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6c02eaf300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6c02eaf300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f6c02f8c9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6c02f26660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6c02f18af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6c02ebe300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6c0381b080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f6c02f123b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6c02ec0020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6c02f116e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6c03cf1750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6c02eba450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03d032c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c02ea5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6c02eae020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c02ea8c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6c02e9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6c02ea2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6c02ead370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6c02e97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c02e922f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6c02ea7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6c02ea6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6c02e9c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6c02e9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6c02ea1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c02eb1970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035fa350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c02eacd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c02e95a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6c02eabac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c02eac060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6c02e98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c02ea6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c02ea7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6c02eaf950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c02e99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6c02e9a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c02e98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6c02e90ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6c02e9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6c02e9ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6c02e93ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6c02ea0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6c02ea8490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c02ea5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6c02e9ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6c02ea1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6c02e9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6c02ea3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6c02eae670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6c02ea9e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6c02e932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6c02e94ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c02e942f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6c02e902f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c02e9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6c02e99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6c02eaecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6c02ead9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6c02ea0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6c02ea97b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6c02e9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6c02e97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6c02e8d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f6c02e62920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f6c02e5e940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6c02e68990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6c02e5e080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6c02e3de60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6c02e41020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6c02e3cae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c02e3e690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6c02e3e690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c0357b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6c02e3b8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6c02e64a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02e3a170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6c02e23200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6c02e1f570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6c02e1e3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6c02e23950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02e1ea70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6c02de5d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6c02def6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6c02de4b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6c02def020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02de32f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02de2170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6c02de2b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6c02d95410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f6c02db6db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f6c02d88800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c02d84580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6c02d84580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6c0357b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c02d701c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c0397d1a0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6c02cc33f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6c039bb1d0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6c02cc01d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6c039b9020"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6c02cc07e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6c039b8c20"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02cbda20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02f2a550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c02cb5890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c0399d5b0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6c02cc25c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6c039ba3f0"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c02cbeb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c039ae350"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c02cbf470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c039b9650"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6c02cb9af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6c02f26660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6c022cee60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6c022c07f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6c022cdaa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6c02cc07e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c022cc720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c02cbf470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6c02c1b020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6c022cbda0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6c022cbda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c02cbeb20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6c022bd5f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c02c86930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c022bc270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c02cbf470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6c02c86930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6c02c35df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6c02c33400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6c02cc33f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c02c32060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c02cbf470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6c02c31720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6c02cc07e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f6c02c30480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f6c02c30c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6c02c12020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6c02cc07e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6c02c12c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6c02cbf470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03a78530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerDormir" loc="44(SlaveAppC.TimerDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerComienzaDormir" loc="44(SlaveAppC.TimerComienzaDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f6c03fc3810" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f6c03fc3bc0" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f6c03fc2020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f6c03fc23d0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f6c03fc2740" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f6c03c8b930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f6c03c8bcd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f6c03c890d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f6c03c89450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f6c03c897d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f6c03c89b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f6c03c88020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f6c03c883b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f6c03c88780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f6c03c4dc80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f6c03c4a0d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6c03b67cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6c03b67cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6c03b25a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6c03b25a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6c03b0e570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6c03b0e570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6c03b0ed40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6c03b0ed40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6c03b0d160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6c03b0d160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6c03b0d940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6c03b0d940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6c03b0dd10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f6c03b0c540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f6c03b0c540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6c03b326d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6c03b326d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6c03aeb020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6c03aeb020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6c03aeb410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6c03aeb410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6c03aebbf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6c03aebbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6c03ae9020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03aafcc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03aafcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03a78530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03a78530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f6c03a78880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03a6a980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03a6a980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f6c03a6acd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c039f5550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c039f5550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f6c0335d5e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f6c033519b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f6c03336cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c030eb020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c030eb020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6c030eb7b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c030eb7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6c02cad660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6c02ca3360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6c02c9a0d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f6c02c81c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6c02c17330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f6c04172340" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c04172340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c041726c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6c04176e70" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6c04176e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6c04175220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c04174380" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c04174380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c04174700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f6c041663a0" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f6c041663a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f6c041704d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f6c04170660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f6c04166a40"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f6c04166bd0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f6c04166d60"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f6c04170020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f6c041701b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f6c04170340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f6c04166720"/>
        <function-ref name="node_id" scoped="" ref="0x7f6c041668b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f6c04162900" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f6c04162900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c04162c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c041644e0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c041644e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c04164860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f6c04162220" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f6c04162220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c041625a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f6c04161020" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f6c04161020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c041613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f6c04164b50" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f6c04164b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f6c04163ca0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f6c04163e30"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f6c04163340"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f6c041634d0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f6c04163660"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f6c041637f0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f6c04163980"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f6c04163b10"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f6c04163020"/>
        <function-ref name="node_id" scoped="" ref="0x7f6c041631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c0416fa10" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c0416fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c0416fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f6c04165be0" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f6c04165be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c04132020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f6c041282c0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6c041282c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6c0412e1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6c041287d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6c04128960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6c04128af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6c04128640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6c04128c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6c04128e10"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6c0412e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c04132b60" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c04132b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c0412f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f6c04117020" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6c04117020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6c04116020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6c04117530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6c041176c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6c04117850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6c041173a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6c041179e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6c04117b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6c04117d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f6c04116320" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6c04116320"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6c041166a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c04118820" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c04118820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c04118ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f6c04299c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6c04299c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6c044740a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f6c043f69a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f6c043f69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f6c043f6d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f6c04511020"/>
        <function-ref name="sleep" scoped="" ref="0x7f6c045111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f6c043373d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f6c043373d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6c04337750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f6c040e3240" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6c040e3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6c040e21b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6c040e3750"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6c040e38e0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6c040e3a70"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6c040e35c0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6c040e3c00"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6c040e3d90"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6c040e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f6c040d53a0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6c040d53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c040d5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6c04171aa0" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6c04171aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6c04171e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f6c040d6b60" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f6c040d6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c040d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f6c040d6140" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6c040d6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c040d64c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6c040d6650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6c040d67e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6c04611940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f6c04611940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c04611cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c04611e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6c0461e1e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6c0461e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c0461e560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6c0461e6f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6c0461e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6c041c2040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f6c041c2040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c041c23c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c041c2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f6c041bd490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f6c041bd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f6c041bd810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f6c041bd9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f6c041bdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6c041c3140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6c041c3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c041c34c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6c041c3650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6c041c37e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6c040bf9a0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c040bf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c040bfd20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c040ca020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c040ca1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c040ca340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c040ca4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c040ca660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c040ca7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c040cae30"/>
        <function-ref name="set" scoped="" ref="0x7f6c040ca980"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c040cab10"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c040caca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f6c040b4b50" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f6c040b4b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040ba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040ba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040ba4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c040ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040ba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c040ba980"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040bab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c040bc020" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c040bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c040bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f6c040bae30" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f6c040bae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040b91e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040b9370"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040b9500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040b9690"/>
        <function-ref name="get" scoped="" ref="0x7f6c040b9820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040b99b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c040b9b40"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040b9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6c040bc620" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c040bc620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c040bc9a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c040bcb30"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c040bccc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c040bce50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c040bb020"/>
        <function-ref name="get" scoped="" ref="0x7f6c040bb1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c040bb340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c040bb980"/>
        <function-ref name="set" scoped="" ref="0x7f6c040bb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c040bb660"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c040bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f6c040b3020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f6c040b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040b33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040b3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040b36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040b3850"/>
        <function-ref name="get" scoped="" ref="0x7f6c040b39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040b3b70"/>
        <function-ref name="set" scoped="" ref="0x7f6c040b3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f6c040bd590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f6c040bd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040bd910"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040bdaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040bdc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040bddc0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04096020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040961b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04096340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f6c04096830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f6c04096830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04096bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04096d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04095020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040951b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04095340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040954d0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04095660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f6c04094dd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c04094dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c04093180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f6c04095b50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f6c04095b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04094020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040941b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04094340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040944d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04094660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040947f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04094980"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04094b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6c04079d50" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6c04079d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04078100"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04078290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04078420"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040761b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04078740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040788d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04078a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04078bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04078d80"/>
        <function-ref name="get" scoped="" ref="0x7f6c04077020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040771b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04077340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040774d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04077760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040778f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04077a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04077c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040785b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04077da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04076020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6c04060e50" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6c04060e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0405f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0405f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0405f530"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0405d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0405f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0405f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0405fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0405fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0405e020"/>
        <function-ref name="get" scoped="" ref="0x7f6c0405e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0405e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0405e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0405e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0405e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0405ea80"/>
        <function-ref name="set" scoped="" ref="0x7f6c0405ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0405eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0405f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0405d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0405d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f6c03fd53d0" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f6c03fd53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fd5750"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fd58e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fd5a70"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fd37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fd5d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fd41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fd4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fd44d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fd4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fd47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fd4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fd4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fd4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fd3020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fd31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fd3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fd5c00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fd34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f6c03fda3e0" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f6c03fda3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fda760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fda8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fdaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fd87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fdada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fd9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fd91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fd9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fd94d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fd9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fd97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fd9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fd9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fd9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fd8020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fd81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fd8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fdac10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fd84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fd8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f6c040033f0" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f6c040033f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04003770"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04003900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04003a90"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040017f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04003db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04002020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c040021b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04002340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040024d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04002660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040027f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04002980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04002b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04002da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04001020"/>
        <function-ref name="set" scoped="" ref="0x7f6c040011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04001340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04003c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04001660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f6c0405be50" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f6c0405be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0405a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0405a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0405a530"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04058340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0405a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0405a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0405ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0405ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04059020"/>
        <function-ref name="get" scoped="" ref="0x7f6c040591b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04059340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c040594d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04059660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040598f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04059a80"/>
        <function-ref name="set" scoped="" ref="0x7f6c04059c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04059da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0405a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04058020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f6c04040020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f6c04040020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04040530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c040406c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0403e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040409e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04040b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04040d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0403f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0403f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0403f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0403f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0403f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0403f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0403fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0403fc10"/>
        <function-ref name="set" scoped="" ref="0x7f6c0403fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0403e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04040850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0403e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0403e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f6c04027020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f6c04027020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04027530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c040276c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040254d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040279e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04027b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04027d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04026020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040261b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04026340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040264d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04026660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04026a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04026c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c04026da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04025020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04027850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040251b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04025340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f6c04012020" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f6c04012020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04012530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c040126c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040104d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040129e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04012b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04012d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04011020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040111b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04011340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04011660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040117f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04011a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04011c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c04011da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04010020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04012850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04010340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f6c03ffe3f0" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f6c03ffe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ffe770"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ffe900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ffea90"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ffc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ffedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ffd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ffd1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ffd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ffd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ffd660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ffd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ffd980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ffdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ffdda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ffc020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ffc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ffc340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ffec20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ffc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ffc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f6c03fea3e0" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f6c03fea3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fea760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fea8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03feaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fe87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03feada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fe9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fe91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fe9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fe94d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fe9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fe97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fe9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fe9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fe9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fe8020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fe81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fe8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03feac10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fe84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fe8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f6c03fcb3f0" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f6c03fcb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fcb770"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fcb900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fcba90"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fc97f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fcbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fca1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fca4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fca660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fca7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fca980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fcab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fcada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fc9020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fc91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fc9340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fcbc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fc94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fc9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6c04071580" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6c04071580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04071900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04071a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04071c20"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0406f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04070020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04070340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04070660"/>
        <function-ref name="get" scoped="" ref="0x7f6c040707f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04070980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04070b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04070ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0406f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0406f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0406f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0406f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04071db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0406f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0406f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f6c03ffcbc0" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f6c03ffcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ffb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ffb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ffb340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ff9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ffb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ffb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ffb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ffbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ffbca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ffbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ffa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ffa1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ffa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ffa5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ffa760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ffa8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ffaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ffb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ffac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ffada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6c0406c580" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6c0406c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0406c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0406ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0406cc20"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0406a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0406b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0406b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0406b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0406b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0406b660"/>
        <function-ref name="get" scoped="" ref="0x7f6c0406b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0406b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0406bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0406bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0406a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0406a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0406a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0406a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0406cdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0406a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0406a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f6c04052710" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f6c04052710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04052a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04052c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04052db0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04050a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040511b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04051340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c040514d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04051660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040517f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04051980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04051b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04051ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04051e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04050120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040502b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04050440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c040505d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04051020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04050760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f6c040398a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f6c040398a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04039c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04039db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04038020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04037c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04038340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040384d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04038660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040387f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04038980"/>
        <function-ref name="get" scoped="" ref="0x7f6c04038b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04038ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04038e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04037020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040372b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04037440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040375d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04037760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040381b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040378f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04037a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f6c040208a0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f6c040208a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04020c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04020db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0401f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0401ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0401f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0401f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0401f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0401f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0401f980"/>
        <function-ref name="get" scoped="" ref="0x7f6c0401fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0401fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0401fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0401e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0401e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0401e440"/>
        <function-ref name="set" scoped="" ref="0x7f6c0401e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0401e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0401f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0401e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0401ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f6c0400b8a0" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f6c0400b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0400bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0400bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0400a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04009c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0400a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0400a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0400a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0400a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0400a980"/>
        <function-ref name="get" scoped="" ref="0x7f6c0400ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0400aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0400ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04009020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040092b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04009440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040095d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04009760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0400a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040098f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04009a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6c0407ed50" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6c0407ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0407d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0407d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0407d420"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0407b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0407d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0407d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0407da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0407dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0407dd80"/>
        <function-ref name="get" scoped="" ref="0x7f6c0407c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0407c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0407c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0407c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0407c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0407c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0407ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0407cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0407d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0407cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0407b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6c04065d50" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6c04065d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04064210"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040643a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04064530"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04062340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04064850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040649e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04064b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04064d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04063020"/>
        <function-ref name="get" scoped="" ref="0x7f6c040631b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04063340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c040634d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04063660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040638f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04063a80"/>
        <function-ref name="set" scoped="" ref="0x7f6c04063c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04063da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040646c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04062020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f6c0404be50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f6c0404be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0404a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0404a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0404a530"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04048340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0404a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0404a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0404ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0404ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04049020"/>
        <function-ref name="get" scoped="" ref="0x7f6c040491b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04049340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c040494d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04049660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040498f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04049a80"/>
        <function-ref name="set" scoped="" ref="0x7f6c04049c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04049da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0404a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04048020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f6c04006bc0" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f6c04006bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04005020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040051b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04005340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04003020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04005660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040057f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04005980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04005b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04005ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04005e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04004020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c040041b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04004340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040045d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04004760"/>
        <function-ref name="set" scoped="" ref="0x7f6c040048f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04004a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040054d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04004c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04004da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f6c03fe3bb0" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f6c03fe3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fe1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fe11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fe1340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fdf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fe1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fe17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fe1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fe1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fe1ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fe1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fe0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fe01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fe0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fe05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fe0760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fe08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fe0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fe14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fe0c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fe0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f6c03fcebb0" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f6c03fcebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fcd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fcd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fcd340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fcb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fcd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fcd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fcd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fcdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fcdca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fcde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fcc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fcc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fcc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fcc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fcc760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fcc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fcca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fcd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fccc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f6c03ff2bc0" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f6c03ff2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ff1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ff11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ff1340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ff1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ff17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ff1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ff1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ff1ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ff1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ff0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ff01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ff0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ff05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ff0760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ff08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ff0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ff14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ff0c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ff0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f6c04046e50" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f6c04046e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04045410"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040455a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04045730"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040434d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04045a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04045be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04045d70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04044020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040441b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04044340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040444d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04044660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040447f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04044a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04044c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c04044da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04043020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040458c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040431b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04043340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f6c0402c020" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f6c0402c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0402c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0402c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0402c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0402a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0402c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0402cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0402cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0402b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0402b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0402b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0402b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0402b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0402b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0402ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0402bc10"/>
        <function-ref name="set" scoped="" ref="0x7f6c0402bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0402a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0402c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0402a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0402a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f6c04017020" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f6c04017020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04017530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c040176c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040154d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040179e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04017b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04017d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04016020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040161b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04016340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040164d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04016660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04016a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04016c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c04016da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04015020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04017850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040151b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04015340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f6c03fdf3e0" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f6c03fdf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fdf760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fdf8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fdfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fdd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fdfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fde020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fde1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fde340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fde4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fde660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fde7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fde980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fdeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fdeda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fdd020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fdd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fdd340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fdfc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fdd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fdd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f6c03ff93e0" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f6c03ff93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ff9760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ff98f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ff9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ff77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ff9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ff8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ff81b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ff8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ff84d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ff8660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ff87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ff8980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ff8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ff8da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ff7020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ff71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ff7340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ff9c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ff74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ff7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6c04076580" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6c04076580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04076900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04076a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04076c20"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04074980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04075020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04075340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04075660"/>
        <function-ref name="get" scoped="" ref="0x7f6c040757f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04075980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04075b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04075ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04074020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040741b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04074340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c040744d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04076db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04074660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6c0405d710" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6c0405d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0405da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0405dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0405ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0405ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0405c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0405c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0405c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0405c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0405c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0405c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0405cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0405cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0405ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0405b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0405b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0405b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0405b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0405c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0405b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0405b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f6c0401c020" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f6c0401c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0401c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0401c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0401c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0401a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0401c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0401cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0401cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0401b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0401b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0401b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0401b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0401b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0401b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0401ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0401bc10"/>
        <function-ref name="set" scoped="" ref="0x7f6c0401bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0401a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0401c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0401a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0401a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f6c04058710" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f6c04058710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04058a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04058c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04058db0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04055a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04056340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c040564d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04056660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040567f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04056980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04056b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04056ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04056e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04055120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040552b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04055440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c040555d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04056020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04055760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f6c0403e8a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f6c0403e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0403ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0403edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0403d020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0403cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0403d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0403d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0403d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0403d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0403d980"/>
        <function-ref name="get" scoped="" ref="0x7f6c0403db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0403dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0403de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0403c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0403c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0403c440"/>
        <function-ref name="set" scoped="" ref="0x7f6c0403c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0403c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0403d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0403c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0403ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f6c040258a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f6c040258a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04025c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04025db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04024020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04023c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04024340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040244d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04024660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040247f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04024980"/>
        <function-ref name="get" scoped="" ref="0x7f6c04024b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04024ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04024e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04023020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040232b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04023440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040235d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04023760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040241b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040238f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04023a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f6c040108a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f6c040108a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04010c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04010db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0400f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0400ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0400f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0400f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0400f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0400f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0400f980"/>
        <function-ref name="get" scoped="" ref="0x7f6c0400fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0400fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0400fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0400e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0400e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0400e440"/>
        <function-ref name="set" scoped="" ref="0x7f6c0400e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0400e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0400f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0400e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0400ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f6c03ff43f0" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f6c03ff43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ff4770"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ff4900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ff4a90"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ff27f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ff4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ff3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ff31b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ff3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ff34d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ff3660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ff37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ff3980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ff3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ff3da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ff2020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ff21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ff2340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ff4c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ff24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ff2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6c04081cb0" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6c04081cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0408f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0408f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0408f3c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040801b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0408f6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0408f870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0408fa00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0408fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0408fd20"/>
        <function-ref name="get" scoped="" ref="0x7f6c0408e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0408e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0408e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0408e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0408e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0408e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0408ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0408ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0408f550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0408eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04080020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6c0406ad50" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6c0406ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04069100"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04069290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04069420"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04069740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040698d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04069a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04069bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04069d80"/>
        <function-ref name="get" scoped="" ref="0x7f6c04068020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04068340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040684d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04068760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040688f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04068a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04068c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040695b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04068da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04067020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f6c04050e50" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f6c04050e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0404f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0404f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0404f530"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0404d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0404f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0404f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0404fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0404fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0404e020"/>
        <function-ref name="get" scoped="" ref="0x7f6c0404e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0404e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0404e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0404e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0404e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0404ea80"/>
        <function-ref name="set" scoped="" ref="0x7f6c0404ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0404eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0404f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0404d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0404d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f6c04036020" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f6c04036020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04036530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c040366c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040344d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040369e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04036b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04036d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04035020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040351b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04035340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040354d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04035660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04035a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04035c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c04035da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04034020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04036850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040341b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04034340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f6c03fef3f0" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f6c03fef3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fef770"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fef900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fefa90"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fed7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fefdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fee1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fee660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fee7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fee980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03feeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03feeda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fed020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fed340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fefc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f6c03fe8bb0" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f6c03fe8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fe7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fe71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fe7340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fe5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fe7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fe77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fe7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fe7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fe7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fe7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fe6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fe61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fe6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fe65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fe6760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fe68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fe6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fe74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fe6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fe6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f6c03fd8bb0" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f6c03fd8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fd7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fd71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fd7340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fd5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fd7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fd77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fd7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fd7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fd7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fd7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fd6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fd61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fd6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fd65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fd6760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fd68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fd6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fd74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fd6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fd6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f6c04031020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f6c04031020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04031530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c040316c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0402f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040319e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04031b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04031d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04030020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040301b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04030340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040304d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04030660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040307f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04030a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04030c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c04030da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0402f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04031850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0402f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0402f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f6c03fedbc0" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f6c03fedbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fec020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fec1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fec340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fea020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fec660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fec7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fec980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fecb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fecca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fece30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03feb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03feb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03feb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03feb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03feb760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03feb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03feba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fec4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03febc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03febda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6c0407b580" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6c0407b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0407b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0407ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0407bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04079980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0407a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0407a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0407a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0407a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0407a660"/>
        <function-ref name="get" scoped="" ref="0x7f6c0407a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0407a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0407ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0407aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04079020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040791b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04079340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c040794d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0407bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04079660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6c04062710" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6c04062710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04062a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04062c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04062db0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04060a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04061340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c040614d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04061660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040617f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04061980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04061b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04061ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04061e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04060120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040602b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04060440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c040605d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04061020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04060760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f6c04048710" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f6c04048710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04048a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04048c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04048db0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04046a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040471b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04047340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c040474d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04047660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040477f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04047980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04047b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04047ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04047e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04046120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040462b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04046440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c040465d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04047020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04046760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f6c03ff7bc0" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f6c03ff7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ff6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ff61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ff6340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ff4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ff6660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ff67f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ff6980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ff6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ff6ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ff6e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ff5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ff51b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ff5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ff55d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ff5760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ff58f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ff5a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ff64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ff5c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ff5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f6c03fddbb0" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f6c03fddbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fdc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fdc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fdc340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fda020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fdc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fdc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fdc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fdcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fdcca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fdce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fdb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fdb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fdb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fdb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fdb760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fdb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fdba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fdc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fdbc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fdbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f6c040438a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f6c040438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04043c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04043db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04042020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04041c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04042340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040424d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04042660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040427f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04042980"/>
        <function-ref name="get" scoped="" ref="0x7f6c04042b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04042ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04042e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04041020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040412b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04041440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040415d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04041760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040421b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040418f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04041a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f6c0402a8a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f6c0402a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0402ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0402adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04029020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04028c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04029340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040294d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04029660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040297f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04029980"/>
        <function-ref name="get" scoped="" ref="0x7f6c04029b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04029ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04029e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04028020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040282b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04028440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040285d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04028760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040291b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040288f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04028a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f6c040158a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f6c040158a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04015c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04015db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04014020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04013c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04014340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04014660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040147f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04014980"/>
        <function-ref name="get" scoped="" ref="0x7f6c04014b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04014ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04014e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04013020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040132b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04013440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040135d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04013760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040141b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040138f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04013a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6c04074d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6c04074d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04073100"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04073290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04073420"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040711b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04073740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040738d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04073a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04073bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04073d80"/>
        <function-ref name="get" scoped="" ref="0x7f6c04072020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040721b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04072340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040724d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04072760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040728f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04072a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04072c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040735b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04072da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04071020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f6c0401a8a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f6c0401a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0401ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0401adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04019020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04018c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04019340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040194d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04019660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040197f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04019980"/>
        <function-ref name="get" scoped="" ref="0x7f6c04019b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04019ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04019e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04018020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040182b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04018440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040185d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04018760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040191b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040188f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04018a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6c0406fd50" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6c0406fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0406e100"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0406e290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0406e420"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0406c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0406e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0406e8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0406ea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0406ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0406ed80"/>
        <function-ref name="get" scoped="" ref="0x7f6c0406d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0406d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0406d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0406d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0406d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0406d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0406da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0406dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0406e5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0406dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0406c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f6c04055e50" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f6c04055e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04054210"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040543a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04054530"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04052340"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04054850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04054b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04054d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04053020"/>
        <function-ref name="get" scoped="" ref="0x7f6c040531b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04053340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c040534d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04053660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040538f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04053a80"/>
        <function-ref name="set" scoped="" ref="0x7f6c04053c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04053da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040546c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04052020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f6c0403b020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f6c0403b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0403b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0403b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0403b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040394d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0403b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0403bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0403bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0403a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0403a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0403a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0403a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0403a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0403a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0403aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0403ac10"/>
        <function-ref name="set" scoped="" ref="0x7f6c0403ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04039020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0403b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040391b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04039340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f6c04022020" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f6c04022020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04022530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c040226c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040204d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c040229e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04022b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04022d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04021020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040211b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04021340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040214d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04021660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c040217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04021a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04021c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c04021da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04020020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04022850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040201b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04020340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f6c0400d020" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f6c0400d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0400d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0400d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0400d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0400b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0400d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0400db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0400dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0400c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0400c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0400c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0400c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0400c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0400c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0400ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0400cc10"/>
        <function-ref name="set" scoped="" ref="0x7f6c0400cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0400b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0400d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0400b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0400b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6c04080580" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6c04080580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04080900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04080a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04080c20"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0407e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0407f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0407f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0407f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0407f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0407f660"/>
        <function-ref name="get" scoped="" ref="0x7f6c0407f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0407f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0407fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0407fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0407e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0407e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0407e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0407e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04080db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0407e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0407e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6c04067580" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6c04067580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04067900"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04067a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04067c20"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04065980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04066020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040661b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04066340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04066660"/>
        <function-ref name="get" scoped="" ref="0x7f6c040667f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04066980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04066b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04066ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04065020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c040651b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c04065340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c040654d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04067db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c04065660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c040657f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f6c0404d710" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f6c0404d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0404da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0404dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0404ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0404ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0404c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0404c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0404c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0404c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0404c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0404c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0404cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0404cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0404ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0404b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0404b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0404b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0404b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0404c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0404b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0404b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f6c040348a0" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f6c040348a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04034c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04034db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04033020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c04032c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04033340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040334d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04033660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c040337f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04033980"/>
        <function-ref name="get" scoped="" ref="0x7f6c04033b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c04033ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04033e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04032020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c040322b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04032440"/>
        <function-ref name="set" scoped="" ref="0x7f6c040325d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04032760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040331b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040328f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04032a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f6c03fe53e0" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f6c03fe53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fe5760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fe58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fe5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fe37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fe5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fe4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fe41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fe4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fe44d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fe4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fe47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fe4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fe4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fe4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fe3020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fe31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fe3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fe5c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fe34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fe3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f6c03fd3ba0" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f6c03fd3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fd2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fd21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fd2340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fd0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fd2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fd27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fd2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fd2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fd2ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fd2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fd1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fd11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fd1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fd15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fd1760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fd18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fd1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fd24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fd1c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fd1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f6c04001bc0" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f6c04001bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c04000020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c040001b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04000340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ffe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04000660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c040007f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c04000980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04000b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c04000ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04000e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fff1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fff5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fff760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fff8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fffa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c040004d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fffc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f6c0402f8a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f6c0402f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0402fc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0402fdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0402e020"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0402dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0402e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0402e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0402e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0402e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0402e980"/>
        <function-ref name="get" scoped="" ref="0x7f6c0402eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0402eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0402ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0402d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0402d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0402d440"/>
        <function-ref name="set" scoped="" ref="0x7f6c0402d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0402d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0402e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0402d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0402da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f6c03fd03e0" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f6c03fd03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fd0760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fd08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fd0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fce7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fd0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fcf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fcf1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fcf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fcf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fcf660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fcf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fcf980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fcfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fcfda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fce020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fce340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fd0c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f6c03fc9bc0" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f6c03fc9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03fc8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03fc81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03fc8340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03fc6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03fc8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03fc87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03fc8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03fc8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03fc8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03fc8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03fc7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03fc71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03fc7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03fc75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03fc7760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03fc78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03fc7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03fc84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03fc7c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03fc7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f6c04008060" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f6c04008060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c040087e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c04008970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c04008b00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c040067f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c04008e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c04007020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c040071b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c04007340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c040074d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c04007660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c040077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c04007980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c04007b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c04007da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c04006020"/>
        <function-ref name="set" scoped="" ref="0x7f6c040061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c04006340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c04008c90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c040064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c04006660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f95540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f95540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f958c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f95a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f95be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f93980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f94020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f94340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f94660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f947f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f94980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f94b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f94ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f93020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f931b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f93340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f934d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f93660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f95d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f90b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f90b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f8f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f8f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f8f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f8f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f8f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f8f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f8fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f8fca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f8fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f8e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f8e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f8e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f8e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f8e760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f8e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f8ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f8ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f8f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f8eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f8a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f8a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f8a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f8a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f8a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f884d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f8aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f8abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f8ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f891b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f89340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f894d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f89660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f89a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f89c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f89da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f88020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f881b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f8a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f85540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f85540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f858c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f85a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f85be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f83980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f84020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f84340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f84660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f847f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f84980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f84b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f84ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f83020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f831b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f83340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f834d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f83660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f85d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f80b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f80b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f7e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f7e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f7e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f7c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f7e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f7e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f7e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f7eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f7eca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f7ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f7d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f7d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f7d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f7d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f7d760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f7d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f7da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f7dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f7e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f7dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f79060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f79060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f793e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f79570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f79700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f774d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f79a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f79bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f79d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f78020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f781b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f78340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f78660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f78a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f78c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f78da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f77020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f771b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f79890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f74540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f74540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f748c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f74a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f74be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f72980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f73020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f73340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f73660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f737f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f73980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f73b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f73ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f72020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f721b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f72340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f724d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f72660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f74d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f6fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f6fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f6e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f6e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f6e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f6c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f6e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f6e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f6e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f6eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f6eca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f6ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f6d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f6d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f6d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f6d760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f6d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f6da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f6dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f6e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f6dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f69060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f69060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f693e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f69570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f69700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f674d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f69a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f69bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f69d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f681b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f68340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f68660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f68a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f68c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f68da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f67020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f671b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f69890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f64540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f64540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f648c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f64a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f64be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f62980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f63020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f631b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f63340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f63660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f637f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f63980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f63b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f63ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f62020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f621b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f62340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f624d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f62660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f64d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f627f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f5fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f5fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f5e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f5e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f5e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f5c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f5e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f5e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f5e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f5eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f5eca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f5ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f5d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f5d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f5d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f5d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f5d760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f5d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f5da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f5dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f5e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f5dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f59060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f59060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f593e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f59570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f59700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f574d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f59a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f59bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f59d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f58020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f581b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f58340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f584d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f58660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f587f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f58a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f58c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f58da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f57020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f571b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f59890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f57340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f536d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f536d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f53a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f53be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f53d70"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f51a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f52340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f524d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f52660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f527f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f52980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f52b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f52ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f52e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f51120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f512b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f51440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f515d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f51760"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f52020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f4eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f4eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f4d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f4d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f4d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f4b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f4d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f4d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f4d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f4db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f4dca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f4de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f4c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f4c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f4c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f4c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f4c760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f4c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f4ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f4cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f4d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f4cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f48060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f48060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f483e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f48570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f48700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f464d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f48a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f48bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f48d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f47020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f471b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f47340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f474d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f47660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f477f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f47a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f47c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f47da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f46020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f461b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f48890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f46340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f43540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f43540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f438c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f43a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f43be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f41980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f42020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f42340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f42660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f427f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f42980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f42b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f42ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f41020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f411b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f41340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f414d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f41660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f43d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f417f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f3eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f3eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f3d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f3d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f3d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f3b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f3d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f3d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f3d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f3db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f3dca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f3de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f3c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f3c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f3c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f3c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f3c760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f3c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f3ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f3cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f3d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f3cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f38060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f38060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f383e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f38570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f38700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f364d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f38a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f38bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f38d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f37020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f371b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f37340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f374d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f37660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f377f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f37a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f37c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f37da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f36020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f361b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f38890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f33540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f33540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f338c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f33a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f33be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f31980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f32020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f32340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f32660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f327f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f32980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f32b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f32ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f31020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f311b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f31340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f314d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f31660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f33d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f2eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f2eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f2c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f2c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f2c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f2a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f2c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f2c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f2c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f2cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f2cca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f2ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f2b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f2b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f2b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f2b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f2b760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f2b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f2ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f2bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f2c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f2bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f27060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f27060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f273e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f27570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f27700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f254d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f27a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f27bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f27d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f26020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f261b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f26340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f264d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f26660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f26a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f26c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f26da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f25020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f251b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f27890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f22540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f22540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f228c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f22a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f22be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f20980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f21340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f21660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f217f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f21980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f21b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f21ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f20020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f201b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f20340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f204d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f20660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f22d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f1db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f1db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f1c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f1c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f1c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f1a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f1c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f1c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f1c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f1cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f1cca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f1ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f1b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f1b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f1b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f1b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f1b760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f1b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f1ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f1bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f1c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f1bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f17060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f173e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f17570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f17700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f154d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f17a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f17bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f17d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f16020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f161b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f16340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f164d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f16660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f16a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f16c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f16da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f15020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f151b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f17890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f12740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f12740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f12ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f12c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f12de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f10a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f11340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f114d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f11660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f117f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f11980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f11b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f11ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f11e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f10120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f102b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f10440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f105d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f10760"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f11020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f0db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f0db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f0c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f0c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f0c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f0a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f0c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f0c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f0c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f0cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f0cca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f0ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f0b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f0b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f0b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f0b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f0b760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f0b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f0ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f0bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f0c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f0bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f07060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f07060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f073e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f07570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f07700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03f054d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f07a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f07bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f07d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f06020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f061b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f06340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f064d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f06660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f067f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03f06a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03f06c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03f06da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03f05020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03f051b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f07890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03f05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03f02540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03f02540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03f028c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03f02a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03f02be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03eff980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03f00020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03f001b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03f00340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03f004d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03f00660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03f007f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03f00980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03f00b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03f00ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03eff020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03eff1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03eff340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03eff4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03eff660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03f02d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03eff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03efcb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03efcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03efb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03efb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03efb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ef9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03efb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03efb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03efb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03efbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03efbca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03efbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03efa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03efa1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03efa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03efa5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03efa760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03efa8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03efaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03efac10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03efb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03efada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ef6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ef6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ef63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ef6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ef6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ef44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ef6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ef6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ef6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ef5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ef51b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ef5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ef54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ef5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ef57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ef5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ef5c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ef5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ef4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ef41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ef6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ef4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ef1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ef1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ef18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ef1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ef1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03eef980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ef0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ef01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ef0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ef04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ef0660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ef07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ef0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ef0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ef0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03eef020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03eef1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03eef340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03eef4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03eef660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ef1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03eef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03eecb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03eecb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03eeb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03eeb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03eeb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ee9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03eeb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03eeb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03eeb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03eebb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03eebca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03eebe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03eea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03eea1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03eea340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03eea5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03eea760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03eea8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03eeaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03eeac10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03eeb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03eeada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ee6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ee6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ee63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ee6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ee6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ee44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ee6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ee6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ee6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ee5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ee51b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ee5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ee54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ee5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ee57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ee5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ee5c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ee5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ee4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ee41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ee6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ee4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ee1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ee1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ee18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ee1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ee1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03edf980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ee0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ee01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ee0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ee04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ee0660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ee07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ee0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ee0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ee0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03edf020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03edf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03edf340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03edf4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03edf660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ee1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03edf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03edcb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03edcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03edb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03edb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03edb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ed9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03edb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03edb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03edb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03edbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03edbca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03edbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03eda020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03eda1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03eda340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03eda5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03eda760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03eda8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03edaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03edac10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03edb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03edada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ed5060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ed5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ed53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ed5570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ed5700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ed34d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ed5a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ed5bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ed5d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ed4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ed41b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ed4340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ed44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ed4660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ed47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ed4a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ed4c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ed4da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ed3020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ed31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ed5890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ed3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ed0540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ed0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ed08c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ed0a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ed0be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ece980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ecf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ecf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ecf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ecf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ecf660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ecf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ecf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ecfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ecfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ece020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ece1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ece340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ece4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ece660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ed0d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ece7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ecbb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ecbb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03eca020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03eca1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03eca340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ec8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03eca660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03eca7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03eca980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ecab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ecaca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ecae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ec9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ec91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ec9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ec95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ec9760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ec98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ec9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ec9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03eca4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ec9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ec5060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ec5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ec53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ec5570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ec5700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ec34d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ec5a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ec5bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ec5d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ec4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ec41b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ec4340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ec44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ec4660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ec47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ec4a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ec4c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ec4da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ec3020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ec31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ec5890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ec3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ec0540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ec0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ec08c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ec0a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ec0be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ebe980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ebf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ebf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ebf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ebf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ebf660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ebf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ebf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ebfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ebfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ebe020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ebe1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ebe340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ebe4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ebe660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ec0d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ebe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ebbb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ebbb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03eba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03eba1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03eba340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03eb8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03eba660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03eba7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03eba980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ebab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ebaca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ebae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03eb9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03eb91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03eb9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03eb95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03eb9760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03eb98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03eb9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03eb9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03eba4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03eb9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03eb5060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03eb5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03eb53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03eb5570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03eb5700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03eb34d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03eb5a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03eb5bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03eb5d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03eb4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03eb41b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03eb4340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03eb44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03eb4660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03eb47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03eb4a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03eb4c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03eb4da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03eb3020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03eb31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03eb5890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03eb3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03eb0540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03eb0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03eb08c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03eb0a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03eb0be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ead980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03eae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03eae1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03eae340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03eae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03eae660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03eae7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03eae980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03eaeb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03eaeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ead020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ead1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ead340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ead4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ead660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03eb0d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ead7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03eaab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03eaab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ea9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ea91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ea9340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ea7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ea9660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ea97f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ea9980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ea9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ea9ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ea9e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ea8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ea81b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ea8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ea85d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ea8760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ea88f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ea8a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ea8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ea94d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ea8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03ea4060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03ea4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03ea43e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03ea4570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03ea4700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03ea24d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03ea4a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03ea4bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03ea4d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03ea3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03ea31b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ea3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03ea34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03ea3660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03ea37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03ea3a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03ea3c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03ea3da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03ea2020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03ea21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03ea4890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03ea2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03e9f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03e9f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03e9f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03e9fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03e9fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03e9d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03e9e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03e9e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03e9e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03e9e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03e9e660"/>
        <function-ref name="get" scoped="" ref="0x7f6c03e9e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03e9e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03e9eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03e9eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03e9d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03e9d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03e9d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03e9d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03e9d660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03e9fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03e9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03e9ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03e9ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03e99020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03e991b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03e99340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03e97020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03e99660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03e997f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03e99980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03e99b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03e99ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03e99e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03e98020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03e981b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03e98340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03e985d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03e98760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03e988f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03e98a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03e98c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03e994d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03e98da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6c03e94060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6c03e94060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03e943e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03e94570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03e94700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03e924d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03e94a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03e94bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03e94d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03e93020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03e931b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03e93340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03e934d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03e93660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03e937f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03e93a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03e93c10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03e93da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03e92020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03e921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03e94890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03e92340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c03e05c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c03e05c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03e04020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03e041b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03e04340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03e02020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03e04660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03e047f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03e04980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03e04b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03e04ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03e04e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03e03020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03e031b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03e03340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03e035d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03e03760"/>
        <function-ref name="set" scoped="" ref="0x7f6c03e038f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03e03a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03e03c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03e044d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03e03da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c03e169e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c03e169e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03e16d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03e05020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03e051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03e05340"/>
        <function-ref name="get" scoped="" ref="0x7f6c03e054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03e05660"/>
        <function-ref name="set" scoped="" ref="0x7f6c03e057f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03e05980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c03dfe2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c03dfe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03dfe670"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03dfe800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03dfe990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03dfc660"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03dfecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03dfee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03dfd020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03dfd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03dfd340"/>
        <function-ref name="get" scoped="" ref="0x7f6c03dfd4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03dfd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03dfd7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03dfd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03dfdc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03dfdda0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03dfc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03dfc1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03dfc340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03dfeb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03dfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c03e00020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c03e00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03e003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03e00530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03e006c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03e00850"/>
        <function-ref name="get" scoped="" ref="0x7f6c03e009e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03e00b70"/>
        <function-ref name="set" scoped="" ref="0x7f6c03e00d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03dfe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c03df97a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c03df97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03df9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03df9cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03df9e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03df7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03df81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03df8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03df84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03df8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03df87f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03df8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03df8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03df8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03df8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03df7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03df72b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03df7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03df75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03df7760"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03df8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03df78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c03dfa630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c03dfa630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03dfa9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03dfab40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03dfacd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03dfae60"/>
        <function-ref name="get" scoped="" ref="0x7f6c03df9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03df91b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03df9340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03df94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6c03d5f8d0" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c03d5f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c03d5fc50"/>
        <function-ref name="source" scoped="" ref="0x7f6c03d5fde0"/>
        <function-ref name="address" scoped="" ref="0x7f6c03dc6020"/>
        <function-ref name="destination" scoped="" ref="0x7f6c03dc61b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c03dc6340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c03dc64d0"/>
        <function-ref name="type" scoped="" ref="0x7f6c03dc6660"/>
        <function-ref name="setType" scoped="" ref="0x7f6c03dc67f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c03dc6980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c03dc6b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c03dc6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f6c03d4ca50" loc="20:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f6c03d4ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c03d4cdd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c03d5c020"/>
        <function-ref name="start" scoped="" ref="0x7f6c03d5c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03d5c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f6c03deb4a0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6c03deb4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6c03deb820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6c03d6f910" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c03d6f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03d6fc90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c03d6fe20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c03dc7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c03dc71b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c03dc7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f6c03d548f0" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c03d548f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c03d54c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c03d54e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c03d5d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c03d5d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c03d5d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6c03d44c20" loc="21:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c03d44c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c03d55020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c03d551b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c03d55340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c03d554d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c03d55660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c03d557f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerDormir" ref="0x7f6c03dd3860" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerDormir" scoped="" ref="0x7f6c03dd3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03dcfcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03dd1300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03dcf0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03dd1c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03dce660"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03dce1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03dd1780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03dd2480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03dcf6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03dd2950"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03dd2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f6c03d4f180" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c03d4f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c03d4f500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c03debae0" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c03debae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c03debe60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c03de8020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c03de81b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c03de8340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c03de84d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03de8660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c03de87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c03de8e30"/>
        <function-ref name="set" scoped="" ref="0x7f6c03de8980"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c03de8b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c03de8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7f6c03ddce50" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7f6c03ddce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03dd9390"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03de5970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03ddb720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03ddb2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03dd9c90"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03dd9810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03de5df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03de6a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03ddbd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03de5020"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03de54f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f6c03dd8360" loc="13:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f6c03dd8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03dd4870"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03dd7e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03dd6c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03dd6780"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03dd31e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03dd4cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03dd6300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03dd7020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03dd4260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03dd74f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03dd79c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerComienzaDormir" ref="0x7f6c03dced30" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerComienzaDormir" scoped="" ref="0x7f6c03dced30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03dc9220"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03dcc7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03dca590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03dca110"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03dc9b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03dc96a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03dccc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03dcd940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03dcaba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03dcde10"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03dcc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c03d0d980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03d0d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c039e1e80"/>
        <function-ref name="fired" scoped="" ref="0x7f6c039e34a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c039e1260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c039e3da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c039e07a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c039e0320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c039e3920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c039e45a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c039e1870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c039e4a70"/>
        <function-ref name="stop" scoped="" ref="0x7f6c039e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6c03d032c0" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03d032c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03cff870"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03d02e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03d00c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03d00780"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03cfe1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03cffcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03d00300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03d02020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03cff260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03d024f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03d029c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6c03cfae20" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f6c03cfae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03cf5390"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03cf8970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03cf7720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03cf72a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03cf5c90"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03cf5810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03cf8df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03cf9a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03cf7d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03cf8020"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03cf84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6c03cf1750" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6c03cf1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03cf23d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c03cfa080" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c03cfa080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c03cfa400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c03ab3870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c03ab3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03ab0090"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03ab1090"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c03ab1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03ab1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c03ab0550"/>
        <function-ref name="start" scoped="" ref="0x7f6c03ab26a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03ab2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c03ab3020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c03ab3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c03ab33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c0283a4f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c0283a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c02837db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c02839da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c02837760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c028372a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c028362a0"/>
        <function-ref name="start" scoped="" ref="0x7f6c028393d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c028398e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c0283bb10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c0283bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c0283a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6c02821da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c02821da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c02820180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c02820310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c028204a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c02820630"/>
        <function-ref name="fired" scoped="" ref="0x7f6c028207c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6c02824340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c02824340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c028246c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c02824850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c028249e0"/>
        <function-ref name="get" scoped="" ref="0x7f6c02824b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c02824d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c02822020"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c028221b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c02822340"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c028224d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c02822660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c028227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6c02822a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c02822a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c02822e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c02821020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c028211b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c02821340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c028214d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c02821660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c028217f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c02821980"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c02821b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6c03cbb690" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c03cbb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03cbba10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03cbbba0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03cbbd30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03cba020"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03cba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6c03cbf020" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03cbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03cbf3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03cbf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03cbf6c0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03cbf850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03cbf9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03cbfb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03cbfd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03cbe020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03cbe1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03cbe340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03cbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6c03cbed60" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03cbed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03cbd180"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03cbd310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03cbd4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03cbd630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03cbd7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03cbd950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03cbdae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03cbdc70"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03cbde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f6c03caba50" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f6c03caba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03cabdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03caa020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03caa1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03caa340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03caa4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03caa660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03caa7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03caa980"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03caab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f6c03ca65a0" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f6c03ca65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03ca6920"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03ca6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03ca6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03ca6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03ca4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03ca41b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03ca4340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03ca44d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03ca4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f6c03cacae0" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f6c03cacae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03cace60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03cab020"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03cab1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03cab340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03cab4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03cab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f6c03c993e0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f6c03c993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c99760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03c998f0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03c99a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c99c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c99da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03c98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f6c03cb2d40" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f6c03cb2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03cac0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03cac270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03cac400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03cac590"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03cac720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f6c03c9a570" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f6c03c9a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c9a8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03c9aa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03c9ac10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03c9ada0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03c99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f6c03c90da0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f6c03c90da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c8f180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03c8f310"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03c8f4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c8f630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c8f7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03c8f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f6c03c98410" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f6c03c98410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03c98790"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03c98920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c98ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03c98c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03c98dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c97020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03c971b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03c97340"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03c974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f6c03cb65a0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f6c03cb65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03cb6920"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03cb6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03cb6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03cb6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03cb5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03cb51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03cb5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03cb54d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03cb5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f6c03ca0da0" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f6c03ca0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c9f180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03c9f310"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03c9f4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c9f630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c9f7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03c9f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f6c03ca0020" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f6c03ca0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03ca03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03ca0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03ca06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03ca0850"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03ca09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f6c03ca2a50" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f6c03ca2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03ca2dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03ca1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03ca11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03ca1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03ca14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03ca1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03ca17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03ca1980"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03ca1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f6c03ca9da0" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f6c03ca9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03ca8180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03ca8310"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03ca84a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03ca8630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03ca87c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03ca8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f6c03c96890" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f6c03c96890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c96c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03c96da0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03c95020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c951b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c95340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03c954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f6c03c9fd40" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f6c03c9fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03c9e0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03c9e270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c9e400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03c9e590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03c9e720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c9e8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03c9ea40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03c9ebd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03c9ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f6c03ca9020" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f6c03ca9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03ca93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03ca9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03ca96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03ca9850"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03ca99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f6c03cbadb0" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f6c03cbadb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03cb7180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03cb7310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03cb74a0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03cb7630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03cb77c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03cb7950"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03cb7ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03cb7c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03cb7e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03cb6020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03cb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f6c03c97890" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f6c03c97890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c97e10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03c96020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03c961b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03c96340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03c964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f6c03cb38c0" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f6c03cb38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03cb3c40"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03cb3dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03cb2020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03cb21b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03cb2340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03cb24d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03cb2660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03cb27f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03cb2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f6c03c958c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f6c03c958c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03c95c40"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03c95dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c94020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03c941b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03c94340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c944d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03c94660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03c947f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03c94980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f6c03cad8d0" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f6c03cad8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03cadc50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03cadde0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03cb3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03cb31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03cb3340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03cb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f6c03c9c020" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f6c03c9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c9c3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03c9c530"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03c9c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c9c850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c9c9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03c9cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f6c03cb5a20" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f6c03cb5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03cb5da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03cb4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03cb41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03cb4340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03cb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f6c03c9d160" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f6c03c9d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c9d4e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03c9d670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03c9d800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03c9d990"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03c9db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f6c03c93ae0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f6c03c93ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c93e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03c92020"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03c921b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c92340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c924d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03c92660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f6c03c9b020" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f6c03c9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03c9b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03c9b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c9b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03c9b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03c9b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c9bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03c9bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03c9a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03c9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f6c03ca8cd0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f6c03ca8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03ca70a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03ca7230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03ca73c0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03ca7550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03ca76e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03ca7870"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03ca7a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03ca7b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03ca7d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03ca6020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03ca61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f6c03ca3a20" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f6c03ca3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03ca3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03ca2020"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03ca21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03ca2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03ca24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03ca2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f6c03c94d40" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f6c03c94d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c930e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03c93270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03c93400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03c93590"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03c93720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f6c03c90020" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f6c03c90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c903a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03c90530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03c906c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03c90850"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03c909e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f6c03ca4a20" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f6c03ca4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03ca3020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03ca31b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03ca3340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03ca34d0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03ca3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f6c03c92a50" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f6c03c92a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03c92dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03c91020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c911b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03c91340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03c914d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c91660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03c917f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03c91980"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03c91b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f6c03c57940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6c03c57940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c57cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f6c03c572f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f6c03c572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c57670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f6c03c55020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6c03c55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f6c03c58bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03c58bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c03c593e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03c593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03c59760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03c598f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c59a80"/>
        <function-ref name="get" scoped="" ref="0x7f6c03c59c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c59da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c58020"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03c581b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c58340"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03c584d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03c58660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03c587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f6c03c4f750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6c03c4f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c4fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f6c03c4f100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f6c03c4f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c4f480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f6c03c4fda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6c03c4fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c4e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f6c03c50a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03c50a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c50e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c03c51260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03c51260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03c515e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03c51770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c51900"/>
        <function-ref name="get" scoped="" ref="0x7f6c03c51a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c51c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c51db0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03c50020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c501b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03c50340"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03c504d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03c50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03c047a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03c047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c04b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03c04cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03c04e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c03020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c031b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03c03340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03c4b6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03c4b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03c4ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03c4bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c4bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03c05020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03c051b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c05340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03c054d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03c05660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03c057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03c02c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03c02c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03c01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03c05ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03c05ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03c05e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03c04020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03c041b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03c04340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03c044d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03c03610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03c03610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03c03990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03c03b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03c03cb0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03c03e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03c02020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03c021b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03c02340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03c024d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03c02660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03c027f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03c02980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bfdcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bfdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bfc0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bfc230"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bfc3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bfc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bfc6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bfc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bffb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bffb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03bfe020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03bfe1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bfe340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bfe4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bfe660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bfe7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bfe980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bfeb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bfeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bf92f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bf92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bf9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03bfd020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03bfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bfd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bfd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bfd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bfd850"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bfd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bfcb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bfcb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bfa020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03bfa1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bfa340"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bfa4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bfa660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bfa7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03bfa980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bfab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03bfaca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03bfae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03bf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bf42f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bf42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bf4670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bf4800"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bf4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bf4b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bf4cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bf4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bf6220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bf6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03bf65a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03bf6730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bf68c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bf6a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bf6be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bf6d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bf5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bf51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bf5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bf27a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bf27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bf2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03bf5610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03bf5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bf5990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bf5b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bf5cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bf5e40"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bf4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bf3160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bf3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bf34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03bf3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bf3800"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bf3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bf3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bf3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03bf3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bf2020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03bf21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03bf2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03bf24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bed7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bed7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bedb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bedcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bede40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bec1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bef6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bef6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03befa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03befbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03befd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bee020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bee1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bee340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bee4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bee660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bebc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bebc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03be9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03beeac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03beeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03beee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bed020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bed1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bed340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bec610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bec610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bec990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03becb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03beccb0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bece40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03beb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03beb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03beb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03beb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03beb660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03beb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03beb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03be5cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03be5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03be40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03be4230"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03be43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03be4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03be46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03be4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03be7b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03be7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03be6020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03be61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03be6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03be64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03be6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03be67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03be6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03be6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03be6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03be22f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03be22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03be2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03be5020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03be5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03be53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03be5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03be56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03be5850"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03be59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03be4b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03be4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03be3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03be31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03be3340"/>
        <function-ref name="get" scoped="" ref="0x7f6c03be34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03be3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03be37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03be3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03be3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03be3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03be3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03be2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bdd2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bdd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bdd670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bdd800"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bdd990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bddb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bddcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bdde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bdf220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bdf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03bdf5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03bdf730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bdf8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bdfa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bdfbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bdfd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bde020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bde1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bde340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bdb7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bdb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bdbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03bde610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03bde610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bde990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bdeb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bdecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bdee40"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bdd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bdc160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bdc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bdc4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03bdc670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bdc800"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bdc990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bdcb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bdccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03bdce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bdb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03bdb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03bdb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03bdb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bd57a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bd57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bd5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bd5cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bd5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bd4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bd41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bd76d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bd76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03bd7a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03bd7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bd7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bd6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bd61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bd6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bd64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bd6660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bd67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bd3c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bd3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03bd6ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03bd6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bd6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bd5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bd51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bd5340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bd4610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bd4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bd4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03bd4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bd4cb0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bd4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bd3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bd31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03bd3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bd34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03bd3660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03bd37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03bd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bcecb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bcecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bcd0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bcd230"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bcd3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bcd550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bcd6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bcd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bd0b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bd0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03bcf020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03bcf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bcf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bcf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bcf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bcf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bcf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bcfb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bcfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bcb2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bcb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bcb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03bce020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03bce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bce3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bce530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bce6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bce850"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bcdb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bcdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bcc020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03bcc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bcc340"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bcc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bcc660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bcc7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03bcc980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bccb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03bccca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03bcce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03bcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bc52f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bc52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bc5670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bc5800"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bc5990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bc5b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bc5cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bc5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bc7220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bc7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03bc75a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03bc7730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bc78c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bc7a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bc7be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bc7d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bc6020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bc61b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bc37a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bc37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bc3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03bc6610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03bc6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bc6990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bc6b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bc6cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bc6e40"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bc4160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bc4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bc44e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03bc4670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bc4800"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bc4990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bc4b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bc4cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03bc4e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bc3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03bc31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03bc3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03bc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c03bbe7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c03bbe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bbeb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c03bbecb0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03bbee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bbd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bbd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c03bbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6c03bc06d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6c03bc06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03bc0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03bc0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bc0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c03bbf020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c03bbf1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bbf340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c03bbf4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c03bbf660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c03bbf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6c03bbcc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6c03bbcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6c03bbfac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6c03bbfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c03bbfe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c03bbe020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c03bbe1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c03bbe340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03bbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6c03bbd610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03bbd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03bbd990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03bbdb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03bbdcb0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03bbde40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03bbc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03bbc1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03bbc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03bbc4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03bbc660"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03bbc7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03bbc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f6c03bb5bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f6c03bb5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f6c03bb73f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f6c03bb73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bb7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f6c03bb7b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f6c03bb7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f6c03bb5430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f6c03bb5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03bb57b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f6c02817a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c02817a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c02817e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c02816020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c028161b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c02816340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c028164d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6c02819190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c02819190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02819510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c028196a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c02819830"/>
        <function-ref name="get" scoped="" ref="0x7f6c028199c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c02819b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c02819ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c02819e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c02818030"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c028181c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c02818350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c028184e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c0281d020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c0281d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c0281b870"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0281c840"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c0281b220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c0281cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c0281bd30"/>
        <function-ref name="start" scoped="" ref="0x7f6c0281de30"/>
        <function-ref name="stop" scoped="" ref="0x7f6c0281c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c0281e660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c0281e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c0281e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6c02818770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c02818770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c02818af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c02818c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c02818e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c02817020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c028171b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c02817340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c028174d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c02817660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c028177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6c03b2c8c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c03b2c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03b31700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03b300d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03b31bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03b30590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f6c03b2a8e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6c03b2a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03b27780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03b26150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03b27c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03b26610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6c03b15c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c03b15c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03b14020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03b141b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03b14340"/>
        <function-ref name="get" scoped="" ref="0x7f6c03b144d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c03b14660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03b147f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03b14980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03b14b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03b14ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c03b14e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c03b13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6c03b24b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c03b24b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03b239b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03b15360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03b23e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03b15820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6c03af20f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f6c03af20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03af0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03af09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03af04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03af0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6c03b0fcf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c03b0fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03af4b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03af3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03af3090"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03af3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c02834890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c02834890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c028310d0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c028320d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c02832a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c02832590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c02831590"/>
        <function-ref name="start" scoped="" ref="0x7f6c028336e0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02833bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f6c0282d0a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f6c0282d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c0282bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0282c9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c0282b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c0282b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c02829020"/>
        <function-ref name="start" scoped="" ref="0x7f6c0282c020"/>
        <function-ref name="stop" scoped="" ref="0x7f6c0282c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6c02831c00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c02831c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c0282fa80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c0282e4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c0282e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c0282e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f6c03a7d9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f6c03a7d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c03a7dd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c03a7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f6c03a81850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c03a81850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03a7d090"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03a7f090"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c03a7fa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03a7f550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c03a7d550"/>
        <function-ref name="start" scoped="" ref="0x7f6c03a806a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03a80bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c03a862f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03a862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03a82870"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03a85e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03a84c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03a84780"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03a811e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03a82cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03a84300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03a85020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03a82260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03a854f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03a859c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f6c039fe020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f6c039fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c039fb630"/>
        <function-ref name="fired" scoped="" ref="0x7f6c039fda60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c039fc920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c039fc4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c039f9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c039fbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c039fc020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c039fec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c039fb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c039fd110"/>
        <function-ref name="stop" scoped="" ref="0x7f6c039fd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f6c039f9450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f6c039f9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f6c039f97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c03a068e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c03a068e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03a00020"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03a034c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c03a01300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c03a03e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c03a00960"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c03a004c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03a03960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c03a04560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c03a01930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c03a04a50"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03a03020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f6c02637100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f6c02637100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c02637480"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c02637610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f6c0263e3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f6c0263e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c0263a870"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0263de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c0263bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c0263b780"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c026391e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c0263acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c0263b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c0263d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c0263a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c0263d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c0263d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f6c02638a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f6c02638a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f6c02638dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f6c026395d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f6c026395d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f6c02638660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f6c026387f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f6c02639c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f6c02639e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f6c02638020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f6c026381b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f6c02638340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f6c026384d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f6c02639950"/>
        <function-ref name="node_id" scoped="" ref="0x7f6c02639ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c02645db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c02645db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c0263f470"/>
        <function-ref name="fired" scoped="" ref="0x7f6c026439b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c026417c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c02641320"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c0263fdb0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c0263f910"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c02643e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c02644a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c02641df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c02643020"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02643510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6c039f6020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6c039f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c039f6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6c039ec300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c039ec300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c039eb150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c039ebad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c039eb610"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c039ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c039de260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c039de260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c039da6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c039ddca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c039dba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c039db5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c039d9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c039dab60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c039db170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c039dee50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c039da0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c039dd350"/>
        <function-ref name="stop" scoped="" ref="0x7f6c039dd820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c039d8b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c039d8b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c039d3110"/>
        <function-ref name="fired" scoped="" ref="0x7f6c039d55b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c039d44a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c039d4020"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c039d3a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c039d3590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c039d5a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c039d7750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c039d4ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c039d7c20"/>
        <function-ref name="stop" scoped="" ref="0x7f6c039d5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c039d1560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerComienzaDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c039d1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c039cda20"/>
        <function-ref name="fired" scoped="" ref="0x7f6c039ce020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c039ceda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c039ce920"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c039cc4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c039cc020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c039ce4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c039cf1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c039cd410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c039cf680"/>
        <function-ref name="stop" scoped="" ref="0x7f6c039cfb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6c039bc080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6c039bc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c039bc400"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c039bc590"/>
        <function-ref name="start" scoped="" ref="0x7f6c039bc720"/>
        <function-ref name="stop" scoped="" ref="0x7f6c039bc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6c039a57a0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c039a57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c039a5b20"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c039a5cb0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c039a5e40"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c039b5020"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c039b51b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c039b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6c03993640" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f6c03993640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6c03993ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6c039b8c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c039b8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c039b7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c039b71b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c039b7340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c039b74d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c039b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6c039bb1d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c039bb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c039bb550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c039bb6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c039bb870"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c039bba00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c039bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6c039b9020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6c039b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c039b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6c039b7930" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c039b7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c039b7cb0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c039b7e40"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c039b6020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c039b61b0"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c039b6340"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c039b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6c0399d5b0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c0399d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6c0399d930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6c0399dac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6c0399dc50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6c0399dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c039ba3f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c039ba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c039ba770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6c039ae350" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c039ae350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c039ae6d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c039ae860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c039ae9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6c03996880" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6c03996880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6c03996c00"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6c03996d90"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6c039a3020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6c039a31b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6c039a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6c039b9650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c039b9650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c039b99d0"/>
        <function-ref name="source" scoped="" ref="0x7f6c039b9b60"/>
        <function-ref name="address" scoped="" ref="0x7f6c039b9cf0"/>
        <function-ref name="destination" scoped="" ref="0x7f6c039b9e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c039b8030"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c039b81c0"/>
        <function-ref name="type" scoped="" ref="0x7f6c039b8350"/>
        <function-ref name="setType" scoped="" ref="0x7f6c039b84e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c039b8670"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c039b8800"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c039b8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6c039ab470" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c039ab470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6c039ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6c03991420" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6c03991420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c039917a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c03991930"/>
        <function-ref name="start" scoped="" ref="0x7f6c03991ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03991c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6c0397db50" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c0397db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6c0397c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6c0397ce10" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6c0397ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6c0397b1c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6c0397b350"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6c0397b4e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6c0397b670"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6c0397b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6c0397e2f0" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c0397e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c0397e670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c0397e800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c0397e990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c0397eb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c0397ecb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c0397ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6c03989e20" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6c03989e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c039811c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c03981350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c039814e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c03981670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c03981800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6c0397c320" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c0397c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6c0397c6a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6c0397c830"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6c0397c9c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6c0397cb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6c0398da30" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f6c0398da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c0398ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6c0397d1a0" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c0397d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c0397d520"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c0397d6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c0397d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c0398a960" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c0398a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c0398ace0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c0398ae70"/>
        <function-ref name="request" scoped="" ref="0x7f6c0398e030"/>
        <function-ref name="granted" scoped="" ref="0x7f6c0398e1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c0398e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6c03980c90" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f6c03980c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c0398d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c0398d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c0398d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c0398d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c0398d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6c03989130" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6c03989130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c039894b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c03989640"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c039897d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c03989960"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c03989af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6c03981b70" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c03981b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c0397e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6c0397a590" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6c0397a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c0397a910"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c0397aaa0"/>
        <function-ref name="start" scoped="" ref="0x7f6c0397ac30"/>
        <function-ref name="stop" scoped="" ref="0x7f6c0397adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6c03976490" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c03976490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c03976810"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c039769a0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c03976b30"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c03976cc0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c03976e50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c03975020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c039770c0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c039770c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c03977440"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c039775d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c03977760"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c039778f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c03977a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c03977d60" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c03977d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c03976180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6c03971020" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6c03971020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c039713a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c03971530"/>
        <function-ref name="start" scoped="" ref="0x7f6c039716c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03971850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6c03970970" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c03970970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c03970cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c03970e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c0396f030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c0396f1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c0396f350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c0396f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f6c03965570" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f6c03965570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c039658f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c03965a80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c03965c10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c03965da0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c03962020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c039621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6c03958970" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c03958970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c03958cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c03958e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c03957030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c039571c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c03957350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c039574e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f6c0395c6c0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6c0395c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c0395ca40"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c0395cbd0"/>
        <function-ref name="modify" scoped="" ref="0x7f6c0395cd60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c03965020"/>
        <function-ref name="resend" scoped="" ref="0x7f6c039651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c03971b10" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c03971b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c03970020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c039701b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c03970340"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c039704d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c03970660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6c039599d0" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6c039599d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6c03959d50"/>
        <function-ref name="rand32" scoped="" ref="0x7f6c0395b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6c03963840" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6c03963840"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6c03963bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c03963d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6c03956020" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c03956020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c039563a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c03956530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c039566c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f6c03967cd0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6c03967cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6c0396d0a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6c0396d230"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6c0396d3c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6c0396d550"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6c0396d6e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6c0396d870"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6c0396da00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6c0396db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c0395b2e0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c0395b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c0395b660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c0395b7f0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c0395b980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c0395bb10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c0395bca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0395be30"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c03958020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c03958660"/>
        <function-ref name="set" scoped="" ref="0x7f6c039581b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c03958340"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c039584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6c0396f7d0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c0396f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c0396fb50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c0396fce0"/>
        <function-ref name="request" scoped="" ref="0x7f6c0396fe70"/>
        <function-ref name="granted" scoped="" ref="0x7f6c0396e030"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c0396e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f6c0394b720" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f6c0394b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c0394bba0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c0394bd30"/>
        <function-ref name="isState" scoped="" ref="0x7f6c03955020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c039551b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c03955340"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c039554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f6c039472a0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f6c039472a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c03947620"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c039477b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f6c039482a0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f6c039482a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c03948620"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c039487b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f6c039492b0" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f6c039492b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c03949630"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c039497c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6c038ef550" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6c038ef550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6c038ef8d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6c038efa60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6c038efbf0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6c038efd80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6c038fc020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6c038fc1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6c038fc340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6c038fc4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6c038fc660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6c038fc7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6c038fc980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6c038fcb10"/>
        <function-ref name="sync" scoped="" ref="0x7f6c038fcca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6c038fb020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6c038fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6c038e9850" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f6c038e9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038ed480"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c038ed900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6c038fb4b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6c038fb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6c038fb830"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6c038fb9c0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6c038fbb50"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6c038fbce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6c038fbe70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6c038ee030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6c038ee1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6c038ee350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c038fd020" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c038fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c038fd3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c038fd530"/>
        <function-ref name="request" scoped="" ref="0x7f6c038fd6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c038fd850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c038fd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6c038e50c0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6c038e50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6c038e5440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6c038e55d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6c038e5760"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6c038e58f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6c038e5a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6c038e5c10"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6c038e5da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6c038e4020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6c038e41b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6c038e4340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6c038e44d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6c038e4660"/>
        <function-ref name="sync" scoped="" ref="0x7f6c038e47f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6c038e4a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6c038e4c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f6c038c3020" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c038c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c33a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f6c038dd970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6c038dd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6c038ddcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f6c038df3a0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f6c038df3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c038dcbe0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c038debc0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c038dc590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c038dc0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c038da0d0"/>
        <function-ref name="start" scoped="" ref="0x7f6c038de1f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c038de700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f6c038c8c90" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c038c8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c40a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f6c038d9830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f6c038d9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c038d9bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c038d9d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c038d8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c038d81b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c038d8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c038d84d0"/>
        <function-ref name="set" scoped="" ref="0x7f6c038d8660"/>
        <function-ref name="clr" scoped="" ref="0x7f6c038d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6c038e2500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f6c038e2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038e1130"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c038e15b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f6c038b2ca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f6c038b2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c038b00a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c038b0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f6c038c38c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6c038c38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c3c40"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6c038c21d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6c038c21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c2550"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f6c038c5a80" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6c038c5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c5e00"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6c038cedd0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6c038cedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6c038d4180"/>
        <function-ref name="changed" scoped="" ref="0x7f6c038d4310"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6c038d44a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6c038d4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6c038da5c0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6c038da5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c038da940"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c038daad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c038dac60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c038dadf0"/>
        <function-ref name="get" scoped="" ref="0x7f6c038d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c038d91b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c038d9340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c038d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f6c038c0450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c038c0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c038c09d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f6c038d8b50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f6c038d8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c038d7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c038d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c038d7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c038d74d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c038d7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c038d77f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c038d7980"/>
        <function-ref name="clr" scoped="" ref="0x7f6c038d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c038eccc0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c038eccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c038e60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6c038c45f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c038c45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c4970"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c4b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f6c038c0d70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6c038c0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c038bf180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6c038bf520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6c038bf520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c038bf8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c038bfa30"/>
        <function-ref name="request" scoped="" ref="0x7f6c038bfbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c038bfd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c038bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f6c038bc180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f6c038bc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c038bc500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c038bc690"/>
        <function-ref name="request" scoped="" ref="0x7f6c038bc820"/>
        <function-ref name="granted" scoped="" ref="0x7f6c038bc9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c038bcb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6c038e3020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6c038e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6c038e33a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6c038e3530"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6c038e36c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6c038e3850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6c038e39e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6c038e3b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6c038e3d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6c038e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f6c038c83c0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6c038c83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c8740"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f6c038c51d0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6c038c51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038c5550"/>
        <function-ref name="write" scoped="" ref="0x7f6c038c56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f6c038be570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6c038be570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c038be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c038bce00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c038bce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c038bb1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c038bb350"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c038bb4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c038bb670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c038bb800"/>
        <function-ref name="get" scoped="" ref="0x7f6c038bb990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c038bbb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c038ba1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c038bbcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c038bbe40"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c038ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f6c038b3db0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f6c038b3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c038b2180"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c038b2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c038e6390" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c038e6390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c038e6710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c038e68a0"/>
        <function-ref name="request" scoped="" ref="0x7f6c038e6a30"/>
        <function-ref name="granted" scoped="" ref="0x7f6c038e6bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c038e6d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f6c038d19a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6c038d19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038d1d20"/>
        <function-ref name="write" scoped="" ref="0x7f6c038cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f6c038d1020" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6c038d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c038d14a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c038d1630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f6c038d25b0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6c038d25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c038d2930"/>
        <function-ref name="disable" scoped="" ref="0x7f6c038d2ac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6c038d2c50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6c038d2de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f6c038bd3d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f6c038bd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c038bd750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c038bd8e0"/>
        <function-ref name="request" scoped="" ref="0x7f6c038bda70"/>
        <function-ref name="granted" scoped="" ref="0x7f6c038bdc00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c038bdd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f6c038bec80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6c038bec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c038c00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c0383b7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c0383b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c0383bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f6c03837220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6c03837220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c03835b30"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03836a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c038354e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c03835020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c03834020"/>
        <function-ref name="start" scoped="" ref="0x7f6c03836090"/>
        <function-ref name="stop" scoped="" ref="0x7f6c038365a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c03831260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c03831260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c038315e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f6c03831af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6c03831af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c037f7390"/>
        <function-ref name="fired" scoped="" ref="0x7f6c037f8360"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c037f8ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c037f8820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c037f7850"/>
        <function-ref name="start" scoped="" ref="0x7f6c037f9970"/>
        <function-ref name="stop" scoped="" ref="0x7f6c037f9e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c025dd370" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c025dd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c025daba0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c025dcb80"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c025da550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c025da090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c025d9090"/>
        <function-ref name="start" scoped="" ref="0x7f6c025dc1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c025dc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c025deaf0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c025deaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c025dee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c025d5360" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c025d5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c025d3ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c025d4b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c025d3550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c025d3090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c025d2090"/>
        <function-ref name="start" scoped="" ref="0x7f6c025d41b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c025d46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c025d6ab0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c025d6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c025d6e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6c025bac10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c025bac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c025b9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c025b91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c025b9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c025b94d0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c025b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6c025bc1b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c025bc1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c025bc530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c025bc6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c025bc850"/>
        <function-ref name="get" scoped="" ref="0x7f6c025bc9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c025bcb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c025bcd00"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c025bb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c025bb1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c025bb340"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c025bb4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c025bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6c025bb8f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c025bb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c025bbc70"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c025bbe00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c025ba020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c025ba1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c025ba340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c025ba4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c025ba660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c025ba7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c025ba980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f6c025b0a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6c025b0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c025b0e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6c025af020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6c025af1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6c025af340"/>
        <function-ref name="fired" scoped="" ref="0x7f6c025af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6c025b2020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c025b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c025b23a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c025b2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c025b26c0"/>
        <function-ref name="get" scoped="" ref="0x7f6c025b2850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c025b29e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c025b2b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c025b2d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c025b1020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c025b11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c025b1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c025b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c025b7da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c025b7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c025b3670"/>
        <function-ref name="fired" scoped="" ref="0x7f6c025b5610"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c025b3020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c025b5ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c025b3b30"/>
        <function-ref name="start" scoped="" ref="0x7f6c025b6bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c025b5150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c025b7510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c025b7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c025b7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6c025b1760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c025b1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c025b1ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c025b1c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c025b1e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c025b0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c025b01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c025b0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c025b04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c025b0660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c025b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6c0381b080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c0381b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c0381a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c0381a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c0381a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c0381ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6c038130f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f6c038130f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03811020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c038119a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c038114e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03811e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6c03817cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c03817cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c03815b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c03814550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c03814090"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c03814a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6c025d05f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6c025d05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c025cae50"/>
        <function-ref name="fired" scoped="" ref="0x7f6c025cfe00"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c025ca800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c025ca340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c025c9340"/>
        <function-ref name="start" scoped="" ref="0x7f6c025cf430"/>
        <function-ref name="stop" scoped="" ref="0x7f6c025cf940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f6c025c7d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f6c025c7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c025c3670"/>
        <function-ref name="fired" scoped="" ref="0x7f6c025c4550"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c025c3020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c025c4a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c025c3b30"/>
        <function-ref name="start" scoped="" ref="0x7f6c025c5b60"/>
        <function-ref name="stop" scoped="" ref="0x7f6c025c4090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6c025c99b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c025c99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c025c87e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c025c71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c025c8ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c025c7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f6c037f1090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f6c037f1090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037f1410"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037f15a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037f1730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037f18c0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037f1a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037f1be0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037f1d70"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f6c037f0390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f6c037f0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037f0710"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037f08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037f0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037f0bc0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037f0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037ef020"/>
        <function-ref name="set" scoped="" ref="0x7f6c037ef1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f6c037ef6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f6c037ef6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037efa20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037efbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037efd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037ed020"/>
        <function-ref name="get" scoped="" ref="0x7f6c037ed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037ed340"/>
        <function-ref name="set" scoped="" ref="0x7f6c037ed4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f6c037f3e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6c037f3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037f2210"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037f23a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037f2530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037f26c0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037f2850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037f29e0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037f2b70"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037f2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f6c037ecce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f6c037ecce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037eb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037eb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037eb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037eb550"/>
        <function-ref name="get" scoped="" ref="0x7f6c037eb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037eb870"/>
        <function-ref name="set" scoped="" ref="0x7f6c037eba00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037ebb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f6c03839b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f6c03839b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037f3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037f31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037f34d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037f3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037f37f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037f3980"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037f3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f6c037ed9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f6c037ed9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037edd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037ec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037ec340"/>
        <function-ref name="get" scoped="" ref="0x7f6c037ec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037ec660"/>
        <function-ref name="set" scoped="" ref="0x7f6c037ec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037ec980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c037e82f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037e8670"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037e8800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c037e8990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c037e6660"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037e8cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037e8e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c037e7020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c037e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037e7340"/>
        <function-ref name="get" scoped="" ref="0x7f6c037e74d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c037e7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c037e77f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c037e7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c037e7c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c037e7da0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037e6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c037e61b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c037e6340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037e8b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c037e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c037e9020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037e9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037e96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037e9850"/>
        <function-ref name="get" scoped="" ref="0x7f6c037e99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037e9b70"/>
        <function-ref name="set" scoped="" ref="0x7f6c037e9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037e8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c037e37a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037e37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037e3b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037e3cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c037e3e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c037e1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037e2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c037e24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c037e2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037e27f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037e2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c037e2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c037e2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c037e2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c037e1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c037e12b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037e1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c037e15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c037e1760"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037e2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c037e18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c037e4630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037e4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037e49b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037e4b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037e4cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037e4e60"/>
        <function-ref name="get" scoped="" ref="0x7f6c037e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037e31b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037e3340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c037dec60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037dec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037dd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037dd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c037dd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c037db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037dd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037dd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c037dd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c037ddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037ddca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037dde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c037dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c037dc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c037dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c037dc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c037dc760"/>
        <function-ref name="set" scoped="" ref="0x7f6c037dc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c037dca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c037dcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037dd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c037dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c037dfb00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037dfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037dfe80"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037de030"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037de1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037de350"/>
        <function-ref name="get" scoped="" ref="0x7f6c037de4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037de670"/>
        <function-ref name="set" scoped="" ref="0x7f6c037de800"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037de990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c037d82f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037d8670"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037d8800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c037d8990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c037d5660"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037d8cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037d8e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c037d6020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c037d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037d6340"/>
        <function-ref name="get" scoped="" ref="0x7f6c037d64d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c037d6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c037d67f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c037d6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c037d6c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c037d6da0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037d5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c037d51b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c037d5340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037d8b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c037d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c037d9020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037d93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037d9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037d96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037d9850"/>
        <function-ref name="get" scoped="" ref="0x7f6c037d99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037d9b70"/>
        <function-ref name="set" scoped="" ref="0x7f6c037d9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037d8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c037d27a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037d27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037d2b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037d2cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c037d2e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c037d0a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037d1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c037d14d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c037d1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037d17f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037d1980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c037d1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c037d1ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c037d1e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c037d0120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c037d02b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037d0440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c037d05d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c037d0760"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037d1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c037d08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c037d3630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037d3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037d39b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037d3b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037d3cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037d3e60"/>
        <function-ref name="get" scoped="" ref="0x7f6c037d2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037d21b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037d2340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c037cdc60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037cdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037cc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c037cc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c037ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037cc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037cc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c037cc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c037ccb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037ccca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c037cce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c037cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c037cb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c037cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c037cb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c037cb760"/>
        <function-ref name="set" scoped="" ref="0x7f6c037cb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c037cba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c037cbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037cc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c037cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c037ceaf0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037ceaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037cee70"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037cd030"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037cd1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037cd350"/>
        <function-ref name="get" scoped="" ref="0x7f6c037cd4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037cd670"/>
        <function-ref name="set" scoped="" ref="0x7f6c037cd800"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037cd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c037c72f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c037c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037c7670"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037c7800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c037c7990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c037c5660"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037c7cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037c7e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c037c6020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c037c61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037c6340"/>
        <function-ref name="get" scoped="" ref="0x7f6c037c64d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c037c6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c037c67f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c037c6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c037c6c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c037c6da0"/>
        <function-ref name="set" scoped="" ref="0x7f6c037c5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c037c51b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c037c5340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037c7b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c037c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c037c8020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c037c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c037c83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c037c8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c037c86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c037c8850"/>
        <function-ref name="get" scoped="" ref="0x7f6c037c89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c037c8b70"/>
        <function-ref name="set" scoped="" ref="0x7f6c037c8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c037c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f6c037aa700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6c037aa700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6c037aaa80"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037aac10"/>
        <function-ref name="captured" scoped="" ref="0x7f6c037aada0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6c037ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f6c037ae400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6c037ae400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c037ae780"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037ae910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6c037aeaa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6c037aec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f6c037ad060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6c037ad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c037ad3e0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037ad570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6c037ad700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6c037ad890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f6c0378fa80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f6c0378fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6c0378fe00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6c0378d020"/>
        <function-ref name="captured" scoped="" ref="0x7f6c0378d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c0378d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c0378d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6c0378d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6c037a7c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6c037a7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6c03790020"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037901b0"/>
        <function-ref name="captured" scoped="" ref="0x7f6c03790340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6c037904d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6c03790760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6c03790760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6c03790ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f6c03790c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c03790e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6c0378f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6c0378f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c0378f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6c0378f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6c0378f660"/>
        <function-ref name="setControl" scoped="" ref="0x7f6c0378f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f6c0378d930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c0378d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0378dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0378de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0378c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0378bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0378c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0378c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0378c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0378c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0378c980"/>
        <function-ref name="get" scoped="" ref="0x7f6c0378cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0378cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0378ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0378b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0378b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0378b440"/>
        <function-ref name="set" scoped="" ref="0x7f6c0378b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0378b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0378b8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0378c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0378ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6c0377b3f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6c0377b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0377b770"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0377b900"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0377ba90"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0377bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0377bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0377a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0377a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0377a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6c0376f3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6c0376f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0376f770"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0376f900"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0376fa90"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0376fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0376fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0376e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0376e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0376e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6c03778d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6c03778d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03777100"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03777290"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03777420"/>
        <function-ref name="edge" scoped="" ref="0x7f6c037775b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03777740"/>
        <function-ref name="enable" scoped="" ref="0x7f6c037778d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03777a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03777bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6c037753f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6c037753f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03775770"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03775900"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03775a90"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03775c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03775db0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03774020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037741b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03774340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6c03783bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6c03783bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0377d020"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0377d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0377d340"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0377d4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0377d660"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0377d7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0377d980"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0377db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6c03772d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6c03772d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03771210"/>
        <function-ref name="fired" scoped="" ref="0x7f6c037713a0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03771530"/>
        <function-ref name="edge" scoped="" ref="0x7f6c037716c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03771850"/>
        <function-ref name="enable" scoped="" ref="0x7f6c037719e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03771b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03771d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6c0377a710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6c0377a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0377aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0377ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0377adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03779020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037791b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03779340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037794d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03779660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6c0376e710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6c0376e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0376ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0376ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0376edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0376d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0376d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0376d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0376d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0376d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6c0377e620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6c0377e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0377e9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0377eb30"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0377ecc0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0377ee50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03784020"/>
        <function-ref name="enable" scoped="" ref="0x7f6c037841b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03784340"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c037844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6c03774710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6c03774710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03774a90"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03774c20"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03774db0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03773020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037731b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03773340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037734d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03773660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6c0377c020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6c0377c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0377c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0377c530"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0377c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0377c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0377c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0377cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0377cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0377b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6c03770100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6c03770100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03770480"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03770610"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037707a0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03770930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03770ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03770c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03770de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0376f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6c03779a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6c03779a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03779db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03778020"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037781b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03778340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037784d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03778660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037787f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03778980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6c03776020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6c03776020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c037763a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03776530"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037766c0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03776850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037769e0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03776b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03776d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03775020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6c037848a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6c037848a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03784c20"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03784db0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03783020"/>
        <function-ref name="edge" scoped="" ref="0x7f6c037831b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03783340"/>
        <function-ref name="enable" scoped="" ref="0x7f6c037834d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03783660"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c037837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6c03773a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6c03773a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03773db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03772020"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037721b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03772340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037724d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03772660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037727f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03772980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6c037643f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6c037643f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03764770"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03764900"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03764a90"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03764c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03764db0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03763020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037631b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03763340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6c037583f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6c037583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03758770"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03758900"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03758a90"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03758c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03758db0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03757020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037571b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03757340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6c03761d50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6c03761d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03760100"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03760290"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03760420"/>
        <function-ref name="edge" scoped="" ref="0x7f6c037605b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03760740"/>
        <function-ref name="enable" scoped="" ref="0x7f6c037608d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03760a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03760bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6c0375e3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6c0375e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0375e770"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0375e900"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0375ea90"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0375ec20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0375edb0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0375d020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0375d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0375d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6c03767d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6c03767d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03766100"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03766290"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03766420"/>
        <function-ref name="edge" scoped="" ref="0x7f6c037665b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03766740"/>
        <function-ref name="enable" scoped="" ref="0x7f6c037668d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03766a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03766bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6c0375bd50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6c0375bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0375a210"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0375a3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0375a530"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0375a6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0375a850"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0375a9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0375ab70"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0375ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6c03763710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6c03763710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03763a90"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03763c20"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03763db0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03762020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037621b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03762340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037624d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03762660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6c03757710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6c03757710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03757a90"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03757c20"/>
        <function-ref name="disable" scoped="" ref="0x7f6c03757db0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03756020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037561b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03756340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037564d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03756660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6c0376c7a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6c0376c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0376cb20"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0376ccb0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0376ce40"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03769020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037691b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03769340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037694d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03769660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6c0375d710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6c0375d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0375da90"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0375dc20"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0375ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0375c020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0375c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0375c340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0375c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0375c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6c03765020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6c03765020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c037653a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03765530"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037656c0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03765850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037659e0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03765b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03765d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03764020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6c03759100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6c03759100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03759480"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03759610"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037597a0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03759930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c03759ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03759c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c03759de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03758020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6c03762a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6c03762a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03762db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03761020"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037611b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03761340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037614d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03761660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037617f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03761980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6c0375f020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6c0375f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0375f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0375f530"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0375f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0375f850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0375f9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0375fb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0375fd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0375e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6c03769a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6c03769a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c03769db0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c03767020"/>
        <function-ref name="disable" scoped="" ref="0x7f6c037671b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c03767340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c037674d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c03767660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c037677f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c03767980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6c0375ca30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6c0375ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0375cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0375b020"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0375b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0375b340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0375b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0375b660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0375b7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0375b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f6c0364a2f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f6c0364a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0364a670"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0364a800"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0364a990"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0364ab20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0364acb0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0364ae40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0363d020"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0363d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6c0364b680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f6c0364b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c0364ba00"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0364bb90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6c0364bd20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6c0364a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f6c0363b7a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f6c0363b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c0363bb20"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0363bcb0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0363be40"/>
        <function-ref name="edge" scoped="" ref="0x7f6c0363a020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f6c0363a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f6c0363a340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f6c0363a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6c0363a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6c0363cb70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f6c0363cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c0363b020"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0363b1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6c0363b340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6c0363b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6c031dae50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c031dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d9410"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d95a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6c031e6160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6c031e6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6c031e0e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c031e0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031dc210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6c031d8880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c031d8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d8c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6c031d00a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6c031d00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d0420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6c031d70a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6c031d70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d7420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6c031c4500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6c031c4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c4880"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6c031c6500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6c031c6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c6880"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6c031e4490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6c031e4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6c031cc880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6c031cc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ccc00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ccd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6c031c7500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c031c7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c7880"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6c031dce50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6c031dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031db210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6c031dbe50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6c031dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031da210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6c031d2880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6c031d2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d2c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6c031d30a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6c031d30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d3420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6c031d7880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6c031d7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d7c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6c031e8a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c031e8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c031e8e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c031e7020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c031e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6c031e3e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c031e3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6c031e2490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6c031e2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e2910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6c031cbc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c031cbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ca0a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ca230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6c031e2be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6c031e2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6c031c7ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c031c7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c60a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6c031e3160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c031e3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6c031cc0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6c031cc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031cc420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031cc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6c031db670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c031db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031db9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6c031dc670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c031dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031dc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6c031e7ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6c031e7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6c031cd0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c031cd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031cd420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031cd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6c031d0880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6c031d0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d0c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6c031cd880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c031cd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031cdc00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031cdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6c031c5ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6c031c5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c40a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6c031c6ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6c031c6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c50a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6c031d3880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6c031d3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d3c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6c031ce0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6c031ce0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ce420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ce5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6c031c9ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6c031c9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c70a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6c031d5880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6c031d5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d5c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6c031c4ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6c031c4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c031c30a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c031c3230"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c33c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c031c3550"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c031c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6c031e7480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6c031e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6c031e0670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6c031e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031e09f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031e0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6c031da670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c031da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031da9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6c031d10a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6c031d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d1420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6c031d50a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6c031d50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d5420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6c031d1880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6c031d1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d1c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6c031d9870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6c031d9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d9bf0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6c031e67b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6c031e67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6c031d80a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c031d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d8420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c031e9e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c031e9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c031e81c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c031e8350"/>
        <function-ref name="request" scoped="" ref="0x7f6c031e84e0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c031e8670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c031e8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6c031e12f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6c031e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6c031e0020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6c031e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6c031c9500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6c031c9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c9880"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6c031cace0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6c031cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c90a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6c031e37b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c031e37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6c031ca500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c031ca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ca880"/>
        <function-ref name="write" scoped="" ref="0x7f6c031caa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6c031c5500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6c031c5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031c5880"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6c031d20a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c031d20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d2420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6c031ce880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6c031ce880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031cec00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ced90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6c031e6e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6c031e6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6c031e4ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6c031e4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6c031d40a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6c031d40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d4420"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6c031e1940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6c031e1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031e1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6c031d4880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6c031d4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031d4c00"/>
        <function-ref name="write" scoped="" ref="0x7f6c031d4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6c031cb0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6c031cb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031cb820"/>
        <function-ref name="write" scoped="" ref="0x7f6c031cb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6c031c39b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6c031c39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c031c3d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c031c2020"/>
        <function-ref name="write" scoped="" ref="0x7f6c031c21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c031c2340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c031c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6c035f82c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f6c035f82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c035f8640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c035f87d0"/>
        <function-ref name="write" scoped="" ref="0x7f6c035f8960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c035f8af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c035f8c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6c035fa350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035fa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c035fa6d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c035fa860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c035fa9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6c035f7540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f6c035f7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c035f78c0"/>
        <function-ref name="write" scoped="" ref="0x7f6c035f7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6c035f6370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f6c035f6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c035f66f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c035f6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c035fb4d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c035fb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c035fb850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c035fb9e0"/>
        <function-ref name="request" scoped="" ref="0x7f6c035fbb70"/>
        <function-ref name="granted" scoped="" ref="0x7f6c035fbd00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c035fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6c035f51d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f6c035f51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c035f5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f6c035df2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6c035df2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c035df660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c035df7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6c035ef890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f6c035ef890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c035efc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c035efda0"/>
        <function-ref name="write" scoped="" ref="0x7f6c035ee020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c035ee1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c035ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6c035f1660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c035f1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c035f19e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c035f1b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c035f1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f6c035e7c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6c035e7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6c035e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f6c035dfb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f6c035dfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c035e8020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c035e81b0"/>
        <function-ref name="isState" scoped="" ref="0x7f6c035e8340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c035e84d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c035e8660"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c035e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6c035ea060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6c035ea060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c035ea3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c035ea570"/>
        <function-ref name="request" scoped="" ref="0x7f6c035ea700"/>
        <function-ref name="granted" scoped="" ref="0x7f6c035ea890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c035eaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6c035eeba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f6c035eeba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c035ed020"/>
        <function-ref name="write" scoped="" ref="0x7f6c035ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6c035eda30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f6c035eda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c035eddb0"/>
        <function-ref name="write" scoped="" ref="0x7f6c035ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c035e8a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c035e8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c035e8df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c035e0020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c035e01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c035e0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c035e04d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c035e0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c035e07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c035e0e30"/>
        <function-ref name="set" scoped="" ref="0x7f6c035e0980"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c035e0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c035e0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c035f0510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c035f0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c035f0890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c035f0a20"/>
        <function-ref name="request" scoped="" ref="0x7f6c035f0bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c035f0d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c035ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f6c035dbbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f6c035dbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c035da020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c035da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6c035ec8b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f6c035ec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c035ecc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6c03580770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6c03580770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c03580af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c03580c80"/>
        <function-ref name="isState" scoped="" ref="0x7f6c03580e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c0357c020"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c0357c1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c0357c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6c0357b1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6c0357b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c0357b550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c0357b6e0"/>
        <function-ref name="isState" scoped="" ref="0x7f6c0357b870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c0357ba00"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c0357bb90"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c0357bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c03577020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c03577020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c035773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6c03577b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6c03577b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c03576020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c035761b0"/>
        <function-ref name="isState" scoped="" ref="0x7f6c03576340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c035764d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c03576660"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c035767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6c03213020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6c03213020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c032133a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c03213530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6c0355d8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6c0355d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6c0355dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c0355ec40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c0355ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c0355d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c0355d1b0"/>
        <function-ref name="request" scoped="" ref="0x7f6c0355d340"/>
        <function-ref name="granted" scoped="" ref="0x7f6c0355d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c0355d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6c024d85d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c024d85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6c024d8950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6c024d8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6c024d6020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6c024d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c024d63a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c024d6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6c024d67c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6c024d67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6c024d6b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6c024d8d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6c024d8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6c024d7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c024d9940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c024d9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c024d9cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c024d9e50"/>
        <function-ref name="request" scoped="" ref="0x7f6c024d8020"/>
        <function-ref name="granted" scoped="" ref="0x7f6c024d81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c024d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6c024d7410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6c024d7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6c024d7790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6c024d7920"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6c024d7ab0"/>
        <function-ref name="write" scoped="" ref="0x7f6c024d7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6c034f48e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c034f48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6c034f4c60"/>
        <function-ref name="configure" scoped="" ref="0x7f6c034f4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6c034f6850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6c034f6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c034f6bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c034f6d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6c034f1a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6c034f1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6c034f1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6c034f7110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6c034f7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6c034f7490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6c034f2690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6c034f2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c034f2a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c034f2ba0"/>
        <function-ref name="request" scoped="" ref="0x7f6c034f2d30"/>
        <function-ref name="granted" scoped="" ref="0x7f6c034f1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c034f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c034fbd80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c034fbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c034f8180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c034f8310"/>
        <function-ref name="request" scoped="" ref="0x7f6c034f84a0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c034f8630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c034f87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6c034f7790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6c034f7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6c034f7b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6c034f7ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6c034f7e30"/>
        <function-ref name="write" scoped="" ref="0x7f6c034f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6c034edb40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6c034edb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c034ef020"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c034ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6c0347b250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c0347b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6c0347b5f0"/>
        <function-ref name="configure" scoped="" ref="0x7f6c0347b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6c0347ac50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6c0347ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c03479020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c034791b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6c034783e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6c034783e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6c03478780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6c0347ba10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6c0347ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6c0347bd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f6c03478a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6c03478a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6c03478dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6c03476020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6c034761b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6c03476340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6c034764d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6c03476660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6c034767f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6c03476980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6c03476b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6c03476ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6c03476e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6c03475020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6c034751b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6c03475440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6c034755d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6c03475760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6c034758f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6c03475a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6c03475c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6c03475da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6c03474020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6c034741b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6c03474340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6c034744d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03474660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6c034749f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6c03474b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6c03474d10"/>
        <function-ref name="tx" scoped="" ref="0x7f6c03473020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6c034731b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6c03473340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6c034734d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6c03473660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6c034737f0"/>
        <function-ref name="rx" scoped="" ref="0x7f6c03473980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6c03473b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6c03473ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6c03473e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6c03472020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6c034721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c03472c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c03472c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c03471020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c034711b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c03471340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c034714d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c03471660"/>
        <function-ref name="get" scoped="" ref="0x7f6c034717f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c03471980"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c03470020"/>
        <function-ref name="set" scoped="" ref="0x7f6c03471ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c03471b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c03471e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6c034795b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6c034795b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c03479950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c03479ae0"/>
        <function-ref name="request" scoped="" ref="0x7f6c03479c70"/>
        <function-ref name="granted" scoped="" ref="0x7f6c03479e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c03478020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c0347c470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c0347c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c0347c810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c0347c9a0"/>
        <function-ref name="request" scoped="" ref="0x7f6c0347cb30"/>
        <function-ref name="granted" scoped="" ref="0x7f6c0347ccc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c0347ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6c0347a060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6c0347a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6c0347a3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6c0347a570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6c0347a700"/>
        <function-ref name="write" scoped="" ref="0x7f6c0347a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6c03472480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6c03472480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c03472800"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c03472990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f6c034702f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f6c034702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c03470670"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c03470800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f6c034602c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6c034602c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03460640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6c03464d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6c03464d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c034630e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c03463270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6c03468020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6c03468020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6c034683a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6c03468530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6c034686c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6c03468850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6c034689e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6c03468b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6c03468d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6c03467020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6c034671b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6c03467340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6c034674d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6c03467660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6c034677f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6c03467a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6c03467c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6c03467da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6c03466020"/>
        <function-ref name="isUart" scoped="" ref="0x7f6c034661b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6c03466340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6c034664d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6c03466660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6c034667f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6c03466980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6c03466b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c03466ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6c03465220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6c034653b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6c03465540"/>
        <function-ref name="tx" scoped="" ref="0x7f6c034656d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6c03465860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6c034659f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6c03465b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6c03465d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6c03464020"/>
        <function-ref name="rx" scoped="" ref="0x7f6c034641b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6c03464340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6c034644d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6c03464660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6c034647f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6c03464980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6c03426bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6c03426bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03425020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c034251b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03425340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03423020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03425660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c034257f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03425980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03425b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03425ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03425e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03424020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c034241b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03424340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c034245d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03424760"/>
        <function-ref name="set" scoped="" ref="0x7f6c034248f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03424a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c034254d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03424c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03424da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6c0345a2d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6c0345a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c0345a650"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c0345a7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f6c034233e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f6c034233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03423760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c034238f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03423a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c034217f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03423da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03422020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c034221b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03422340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c034224d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03422660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c034227f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03422980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03422b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03422da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03421020"/>
        <function-ref name="set" scoped="" ref="0x7f6c034211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03421340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03423c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c034214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03421660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f6c03421bb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f6c03421bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03420020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c034201b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03420340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c0341e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03420660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c034207f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c03420980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03420b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03420ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03420e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c0341f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c0341f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c0341f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c0341f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c0341f760"/>
        <function-ref name="set" scoped="" ref="0x7f6c0341f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c0341fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c034204d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c0341fc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c0341fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f6c0345f700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6c0345f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6c0345fa80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6c0345fc10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6c0345fda0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6c0345e020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6c0345e1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6c0345e340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6c0345e4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6c0345e660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6c0345e7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6c0345e980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6c0345eb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6c0345eca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6c0345ee30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6c0345d120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6c0345d2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6c0345d440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6c0345d5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f6c0345d760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6c0345d8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6c0345da80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6c0345dc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6c0345dda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6c0345c020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6c0345c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c0345c340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6c0345c6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6c0345c860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6c0345c9f0"/>
        <function-ref name="tx" scoped="" ref="0x7f6c0345cb80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6c0345cd10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6c0345b020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6c0345b1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6c0345b340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6c0345b4d0"/>
        <function-ref name="rx" scoped="" ref="0x7f6c0345b660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6c0345b7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6c0345b980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6c0345bb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6c0345bca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6c0345be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f6c03431d10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f6c03431d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6c034580e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6c03458270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6c03458400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6c03458590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6c03458720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6c034588b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6c03458a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6c03458bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c03458d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6c03457020"/>
        <function-ref name="getData" scoped="" ref="0x7f6c034571b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6c03457340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6c034574d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6c03457760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6c034578f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f6c03457a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6c03457c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6c03457da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6c0342f020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6c0342f1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6c0342f340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6c0342f4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6c0342f660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6c0342f7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6c0342f980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6c0342fd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6c0342e020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6c0342e1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6c0342e340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6c0342e4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6c0342e660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6c0342e7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6c0342e980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6c0342eb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6c0342eca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6c0342ee30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6c0342d020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6c0342d1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6c0342d340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6c0342d4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6c0342d660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6c0342d7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f6c0342d980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6c0342db10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6c0342dca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6c0342de30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6c0342c020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6c0342c1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6c0342c340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6c0342c8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6c0342ca60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6c0342cbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6c0342cd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6c0342b020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6c0342b1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6c0342b340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6c0342b4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6c0342b660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6c0342b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f6c034283e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f6c034283e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03428760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c034288f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c03428a80"/>
        <function-ref name="clr" scoped="" ref="0x7f6c034267f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03428da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03427020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c034271b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c03427340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c034274d0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03427660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c034277f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c03427980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03427b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c03427da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03426020"/>
        <function-ref name="set" scoped="" ref="0x7f6c034261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03426340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c03428c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c034264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03426660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6c0345ac20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6c0345ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03459020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6c0342bbb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6c0342bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0342a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0342a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c0342a340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03428020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0342a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0342a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c0342a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c0342ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c0342aca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c0342ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c03429020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c034291b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c03429340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c034295d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c03429760"/>
        <function-ref name="set" scoped="" ref="0x7f6c034298f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c03429a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c0342a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c03429c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c03429da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6c024ce020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c024ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6c024ce3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6c024ce530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f6c024c7440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6c024c7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c024c77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6c024c0760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c024c0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6c024c0ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f6c024c0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f6c024c7a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6c024c7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6c024c7dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6c024c6020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6c024c61b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6c024c6340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6c024c64d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6c024c6660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6c024c67f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6c024c6980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c024c6b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6c024c6ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f6c024c6e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6c024c5020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6c024c51b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6c024c5440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6c024c55d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f6c024c5760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6c024c58f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6c024c5a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6c024c5c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6c024c5da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6c024c4020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6c024c41b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6c024c4340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6c024c44d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6c024c4660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6c024c49f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6c024c4b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6c024c4d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6c024c3020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6c024c31b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6c024c3340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6c024c34d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6c024c3660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6c024c37f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6c024c3980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6c024c3b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6c024c3ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6c024c3e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6c024c2020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6c024c21b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6c024c2340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6c024c24d0"/>
        <function-ref name="setData" scoped="" ref="0x7f6c024c2660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6c024c27f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6c024c2980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6c024c2b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6c024c2ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6c024c2e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6c024c1020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6c024c15b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6c024c1740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6c024c18d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6c024c1a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6c024c1bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6c024c1d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6c024c0020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6c024c01b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6c024c0340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6c024c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6c024c8c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6c024c8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c024c7020"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c024c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c024cf340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c024cf340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c024cf6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c024cf850"/>
        <function-ref name="request" scoped="" ref="0x7f6c024cf9e0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c024cfb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c024cfd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6c024cc020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6c024cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6c024cc3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6c024cc530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6c024cc6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6c024cc850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6c024cc9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6c024ccb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6c024ccd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6c024cb020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6c024cb1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6c024cb340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6c024cb4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6c024cb660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6c024cb7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6c024cba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6c024cbc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6c024cbda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6c024ca020"/>
        <function-ref name="isUart" scoped="" ref="0x7f6c024ca1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6c024ca340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6c024ca4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6c024ca660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6c024ca7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6c024ca980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6c024cab10"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c024caca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6c024c9220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6c024c93b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6c024c9540"/>
        <function-ref name="tx" scoped="" ref="0x7f6c024c96d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6c024c9860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6c024c99f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6c024c9b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6c024c9d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6c024c8020"/>
        <function-ref name="rx" scoped="" ref="0x7f6c024c81b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6c024c8340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6c024c84d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6c024c8660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6c024c87f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6c024c8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6c024ce7c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c024ce7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6c024ceb40"/>
        <function-ref name="userId" scoped="" ref="0x7f6c024cecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6c0337a2c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c0337a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6c0337a640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6c0337a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6c033798a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c033798a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6c03379c20"/>
        <function-ref name="configure" scoped="" ref="0x7f6c03379db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6c0337d4d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6c0337d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c0337d850"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c0337d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c0337b020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c0337b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c0337b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c0337b530"/>
        <function-ref name="request" scoped="" ref="0x7f6c0337b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c0337b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c0337b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6c0337c3f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6c0337c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c0337c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6c0337aad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c0337aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6c0337ae50"/>
        <function-ref name="userId" scoped="" ref="0x7f6c03379020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6c03362bf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c03362bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6c03361020"/>
        <function-ref name="userId" scoped="" ref="0x7f6c033611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6c03374d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6c03374d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c03373180"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c03373310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f6c033625e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6c033625e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03362960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6c03373710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6c03373710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c03373ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f6c03373d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f6c03373d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6c03362180"/>
        <function-ref name="txDone" scoped="" ref="0x7f6c03362310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6c032e2a60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c032e2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6c032e2e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6c032e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6c032e0790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c032e0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6c032e0b30"/>
        <function-ref name="configure" scoped="" ref="0x7f6c032e0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6c032e1270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6c032e1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c032e15f0"/>
        <function-ref name="requested" scoped="" ref="0x7f6c032e1780"/>
        <function-ref name="granted" scoped="" ref="0x7f6c032e1910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c032e1aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6c032e1c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c032e4ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c032e4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c032e20a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c032e2230"/>
        <function-ref name="request" scoped="" ref="0x7f6c032e23c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c032e2550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c032e26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f6c032df020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f6c032df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6c032df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6c032e1e80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c032e1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6c032e0220"/>
        <function-ref name="userId" scoped="" ref="0x7f6c032e03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c02453020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c02453020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c024533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6c02453630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6c02453630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6c024539b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6c02453b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6c02453cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6c02453e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6c0244f6c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6c0244f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6c0244fa60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6c0244fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6c0244d9d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6c0244d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6c0244dd70"/>
        <function-ref name="configure" scoped="" ref="0x7f6c0244c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6c0244c2b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6c0244c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6c0244c630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6c0244c7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6c0244c950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6c0244cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6c0244fe40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6c0244fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c0244e1e0"/>
        <function-ref name="requested" scoped="" ref="0x7f6c0244e370"/>
        <function-ref name="granted" scoped="" ref="0x7f6c0244e500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c0244e690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6c0244e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c0244cd30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c0244cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c0244b0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c0244b270"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c0244b400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c0244b590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c0244b720"/>
        <function-ref name="get" scoped="" ref="0x7f6c0244b8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c0244ba40"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c0244a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c0244bd60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c0244bbd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c0244a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c02450850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c02450850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c02450bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c02450d80"/>
        <function-ref name="request" scoped="" ref="0x7f6c0244f020"/>
        <function-ref name="granted" scoped="" ref="0x7f6c0244f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c0244f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f6c0244d2d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f6c0244d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6c0244d650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6c0244ea70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6c0244ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6c0244edf0"/>
        <function-ref name="userId" scoped="" ref="0x7f6c0244d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6c0244a480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f6c0244a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c0244a800"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c0244a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f6c032d6020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6c032d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6c032d63a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6c032d6530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6c032d66c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6c032d6850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6c032d69e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6c032d6b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6c032d6d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6c032d5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c032d51b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6c032d5340"/>
        <function-ref name="getData" scoped="" ref="0x7f6c032d54d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6c032d5660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6c032d57f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6c032d5a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6c032d5c10"/>
        <function-ref name="getIV" scoped="" ref="0x7f6c032d5da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6c032d4020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6c032d41b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6c032d4340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6c032d44d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6c032d4660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6c032d47f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6c032d4980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6c032d4b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6c032d4ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6c032d3220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6c032d33b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6c032d3540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6c032d36d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6c032d3860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6c032d39f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6c032d3b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6c032d3d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6c032d2020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6c032d21b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6c032d2340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6c032d24d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6c032d2660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6c032d27f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6c032d2980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6c032d2b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6c032d2ca0"/>
        <function-ref name="setData" scoped="" ref="0x7f6c032d2e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6c032d1020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6c032d11b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6c032d1340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6c032d14d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6c032d1660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6c032d17f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6c032d1d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6c032d0020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6c032d01b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6c032d0340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6c032d04d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6c032d0660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6c032d07f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6c032d0980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6c032d0b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6c032d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f6c032c5bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f6c032c5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6c032c4020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6c032c41b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6c032c4340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6c032c44d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6c032c4660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6c032c47f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6c032c4980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6c032c4b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6c032c4ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6c032c4e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6c032c3020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6c032c31b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6c032c3340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6c032c35d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6c032c3760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6c032c38f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6c032c3a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f6c032c3c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6c032c3da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6c032c2020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6c032c21b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6c032c2340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6c032c24d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6c032c2660"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c032c27f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6c032c2b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6c032c2d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6c032c1020"/>
        <function-ref name="tx" scoped="" ref="0x7f6c032c11b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6c032c1340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6c032c14d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6c032c1660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6c032c17f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6c032c1980"/>
        <function-ref name="rx" scoped="" ref="0x7f6c032c1b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6c032c1ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6c032c1e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6c032c0020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6c032c01b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6c032c0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6c032bee40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6c032bee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c032bd1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c032bd370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c032bd500"/>
        <function-ref name="clr" scoped="" ref="0x7f6c032bb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c032bd820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c032bd9b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c032bdb40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c032bdcd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c032bde60"/>
        <function-ref name="get" scoped="" ref="0x7f6c032bc020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c032bc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c032bc340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c032bc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c032bc760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c032bc8f0"/>
        <function-ref name="set" scoped="" ref="0x7f6c032bca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c032bcc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c032bd690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c032bcda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c032bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f6c032cfd40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f6c032cfd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6c032cb0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6c032cb270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6c032cb400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6c032cb590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6c032cb720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6c032cb8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6c032cba40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6c032cbbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c032cbd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6c032ca020"/>
        <function-ref name="getData" scoped="" ref="0x7f6c032ca1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6c032ca340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6c032ca4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6c032ca760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6c032ca8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f6c032caa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6c032cac10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6c032cada0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6c032c9020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6c032c91b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6c032c9340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6c032c94d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6c032c9660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6c032c97f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6c032c9980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6c032c9d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6c032c8020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6c032c81b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6c032c8340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6c032c84d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6c032c8660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6c032c87f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6c032c8980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6c032c8b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6c032c8ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6c032c8e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6c032c7020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6c032c71b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6c032c7340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6c032c74d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6c032c7660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6c032c77f0"/>
        <function-ref name="setData" scoped="" ref="0x7f6c032c7980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6c032c7b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6c032c7ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6c032c7e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6c032c6020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6c032c61b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6c032c6340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6c032c68d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6c032c6a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6c032c6bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6c032c6d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6c032c5020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6c032c51b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6c032c5340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6c032c54d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6c032c5660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6c032c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6c032c0700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6c032c0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c032c0a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c032c0c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c032c0da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c032bea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c032bf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c032bf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c032bf4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c032bf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c032bf7f0"/>
        <function-ref name="get" scoped="" ref="0x7f6c032bf980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c032bfb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c032bfca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c032bfe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c032be120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c032be2b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c032be440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c032be5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c032bf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c032be760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c032be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6c031aac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c031aac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a8210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6c031b4da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6c031b4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6c031adb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c031adb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ac020"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6c031a7670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c031a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a79f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6c031a0e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6c031a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319f210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6c031a7e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6c031a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a6210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6c031932f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6c031932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03193670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03193800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6c031962f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6c031962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03196670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03196800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6c031b2120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6c031b2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6c0319b670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6c0319b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6c031972f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c031972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03197670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03197800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6c031acc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6c031acc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ab020"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6c031abc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6c031abc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031aa020"/>
        <function-ref name="write" scoped="" ref="0x7f6c031aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6c031a1670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6c031a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a19f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6c031a4e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6c031a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a3210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6c031a6670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6c031a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a69f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6c031b5760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c031b5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c031b5ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c031b5c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c031b5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6c031b1aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c031b1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6c031b0120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6c031b0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6c0319aa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c0319aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319adf0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03199020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6c031b0870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6c031b0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6c03197ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c03197ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03197e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03196020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6c031b2dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c031b2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6c0319de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6c0319de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319b210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6c031ab480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c031ab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ab800"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6c031ac480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c031ac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ac800"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ac990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6c031b4750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6c031b4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6c0319ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c0319ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319d210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6c0319f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6c0319f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6c0319d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c0319d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6c03195ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6c03195ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03195e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03193020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6c03196ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6c03196ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03196e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03195020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6c031a3670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6c031a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a39f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6c0319fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6c0319fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319e210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6c03198ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6c03198ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03198e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03197020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6c031a5670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6c031a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a59f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6c03193ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6c03193ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c03193e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c03192020"/>
        <function-ref name="write" scoped="" ref="0x7f6c031921b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c03192340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c031924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6c031b4100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6c031b4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6c031ad370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6c031ad370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031ad6f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031ad880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6c031aa480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c031aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031aa800"/>
        <function-ref name="write" scoped="" ref="0x7f6c031aa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6c031a1e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6c031a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a0210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6c031a6e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6c031a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a5210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6c031a0670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6c031a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a09f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6c031a8670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6c031a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a89f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6c031b3450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6c031b3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6c031a8e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c031a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a7210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c031b7a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c031b7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c031b7e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c031b5020"/>
        <function-ref name="request" scoped="" ref="0x7f6c031b51b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c031b5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c031b54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6c031ae020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6c031ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6c031aecc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6c031aecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031ad0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6c031982f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6c031982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03198670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03198800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6c03199ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6c03199ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03199e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03198020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6c031b1450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c031b1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6c031992f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c031992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03199670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03199800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6c031952f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6c031952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03195670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03195800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6c031a3e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c031a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a1210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6c0319e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6c0319e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6c031b3aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6c031b3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6c031b2770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6c031b2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031b2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6c031a5e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6c031a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a4210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6c031ae670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6c031ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031ae9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6c031a4670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6c031a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031a49f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c031a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6c0319be50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6c0319be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0319a610"/>
        <function-ref name="write" scoped="" ref="0x7f6c0319a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6c031927a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6c031927a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c03192b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c03192cb0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03192e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c03191020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c031911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6c0317dc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c0317dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317c210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6c03188da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6c03188da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03187180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6c03181b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c03181b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317f020"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6c0317b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c0317b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6c03174e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6c03174e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03172210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6c0317be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6c0317be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317a210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6c031672f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6c031672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03167670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03167800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6c031692f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6c031692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03169670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03169800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6c03185120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6c03185120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031854a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6c0316f670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6c0316f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6c0316a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c0316a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316a670"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6c0317fc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6c0317fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317e020"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6c0317ec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6c0317ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317d020"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6c03175670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6c03175670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031759f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03175b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6c03177e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6c03177e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03176210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6c0317a670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6c0317a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6c03189760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c03189760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c03189ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c03189c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c03189e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6c03184aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c03184aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03184e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6c03183120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6c03183120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031835a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6c0316ea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c0316ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316edf0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6c03183870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6c03183870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03183bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6c0316aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c0316aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316ae50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03169020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6c03185dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c03185dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03184180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6c03170e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6c03170e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316f210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6c0317e480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c0317e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317e800"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6c0317f480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c0317f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317f800"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6c03188750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6c03188750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03188ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6c03171e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c03171e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03170210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6c03172670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6c03172670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031729f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03172b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6c03170670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c03170670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031709f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03170b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6c03168ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6c03168ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03168e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03167020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6c03169ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6c03169ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03169e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c03168020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6c03176670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6c03176670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031769f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03176b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6c03172e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6c03172e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03171210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6c0316cad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6c0316cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316ce50"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6c03178670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6c03178670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031789f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03178b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6c03167ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6c03167ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c03167e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c03166020"/>
        <function-ref name="write" scoped="" ref="0x7f6c031661b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c03166340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c031664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6c03188100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6c03188100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03188480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6c03181370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6c03181370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031816f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03181880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6c0317d480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c0317d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317d800"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6c03175e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6c03175e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03174210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6c0317ae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6c0317ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03178210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6c03174670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6c03174670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031749f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03174b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6c0317c670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6c0317c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6c03187450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6c03187450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031877d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6c0317ce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c0317ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0317b210"/>
        <function-ref name="write" scoped="" ref="0x7f6c0317b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c0318a9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c0318a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c0318ad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c03189020"/>
        <function-ref name="request" scoped="" ref="0x7f6c031891b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c03189340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c031894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6c03182020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6c03182020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6c03182cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6c03182cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031810a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6c0316c2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6c0316c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316c670"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6c0316dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6c0316dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316de50"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6c03184450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c03184450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031847d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6c0316d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c0316d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316d670"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6c031682f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6c031682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03168670"/>
        <function-ref name="write" scoped="" ref="0x7f6c03168800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6c03176e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c03176e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03175210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6c03171670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6c03171670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031719f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03171b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6c03187aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6c03187aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03187e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6c03185770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6c03185770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c03185af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6c03178e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6c03178e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03177210"/>
        <function-ref name="write" scoped="" ref="0x7f6c031773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6c03182670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6c03182670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c031829f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6c03177670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6c03177670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031779f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03177b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6c0316fe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6c0316fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0316e610"/>
        <function-ref name="write" scoped="" ref="0x7f6c0316e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6c031667a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6c031667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c03166b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c03166cb0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03166e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c03165020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c031651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f6c0315eb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6c0315eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6c0315a020"/>
        <function-ref name="changed" scoped="" ref="0x7f6c0315a1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6c0315a340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6c0315a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f6c0315dd20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6c0315dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6c031460e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f6c03141310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6c03141310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6c03141690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f6c0313e880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6c0313e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0313ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f6c03133020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6c03133020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031333a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f6c03129bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6c03129bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0312d020"/>
        <function-ref name="write" scoped="" ref="0x7f6c0312d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f6c0312d530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f6c0312d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6c0312d8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c0312da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f6c0312e140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6c0312e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0312e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f6c03132c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6c03132c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c03119020"/>
        <function-ref name="write" scoped="" ref="0x7f6c031191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f6c03119540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f6c03119540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c031198c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03119a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c03119be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03119d70"/>
        <function-ref name="get" scoped="" ref="0x7f6c03118020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c031181b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03118340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c031184d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f6c03110950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6c03110950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6c03113780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f6c03115150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6c03115150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c031154d0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03115660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f6c031159f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f6c031159f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03115d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03114020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c031141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03114340"/>
        <function-ref name="get" scoped="" ref="0x7f6c031144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03114660"/>
        <function-ref name="set" scoped="" ref="0x7f6c031147f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03114980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f6c03117ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6c03117ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6c030efae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f6c030eda90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6c030eda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6c030de8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6c030dd020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c030dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c030dde30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c030db800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c030db340"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c030dbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f6c030d7530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6c030d7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c030d63d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c030d6d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c030d6890"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c030d5260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6c030d0020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6c030d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c030d03a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6c030d0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6c030d06c0"/>
        <function-ref name="get" scoped="" ref="0x7f6c030d0850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6c030d09e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c030d0b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f6c030d0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c030cf020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c030cf1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f6c030cf340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6c030cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6c030d3e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c030d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c0417f640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6c0417f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c030d2ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c030d1670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c030d11b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c030d1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f6c0311a590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f6c0311a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0311a910"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0311aaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0311ac30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c0311adc0"/>
        <function-ref name="get" scoped="" ref="0x7f6c030cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c030cb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c030cb340"/>
        <function-ref name="clr" scoped="" ref="0x7f6c030cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6c030c8c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6c030c8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c030c7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c030c71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6c030c7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6c030c5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c030c7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c030c77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6c030c7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f6c030c7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c030c7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f6c030c7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f6c030c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6c030c61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f6c030c6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6c030c65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f6c030c6760"/>
        <function-ref name="set" scoped="" ref="0x7f6c030c68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6c030c6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f6c030c6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f6c030c74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6c030c6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6c030ca9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6c030ca9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c030cad60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c030c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c030c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c030c8340"/>
        <function-ref name="get" scoped="" ref="0x7f6c030c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c030c8660"/>
        <function-ref name="set" scoped="" ref="0x7f6c030c87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c030c8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6c030c01b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6c030c01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6c030c0530"/>
        <function-ref name="stop" scoped="" ref="0x7f6c030c06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6c030b1cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c030b1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c030b00a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c030b0230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c030b03c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c030b0550"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c030b06e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c030b0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6c030ad990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6c030ad990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6c030add10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f6c030b1020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6c030b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c030b13a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c030b1530"/>
        <function-ref name="modify" scoped="" ref="0x7f6c030b16c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c030b1850"/>
        <function-ref name="resend" scoped="" ref="0x7f6c030b19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6c030b46c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6c030b46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6c030b4a40"/>
        <function-ref name="stop" scoped="" ref="0x7f6c030b4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6c030af150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6c030af150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6c030af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6c030a3970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c030a3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c030a3cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c030a3e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c030a2030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c030a21c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c030a2350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c030a24e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6c03095c60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6c03095c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c03099210"/>
        <function-ref name="clear" scoped="" ref="0x7f6c03099940"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c0309aac0"/>
        <function-ref name="set" scoped="" ref="0x7f6c03092090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f6c0307b020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c0307b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0307b3a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0307b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6c0307b890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6c0307b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0307bc10"/>
        <function-ref name="write" scoped="" ref="0x7f6c0307bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6c030a2900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6c030a2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6c030a2c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f6c0307e530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6c0307e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c0307e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f6c0308da80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6c0308da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6c0308de00"/>
        <function-ref name="disable" scoped="" ref="0x7f6c0308c020"/>
        <function-ref name="captured" scoped="" ref="0x7f6c0308c1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6c0308c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f6c030a1ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f6c030a1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c0309d390"/>
        <function-ref name="fired" scoped="" ref="0x7f6c0309f360"/>
        <function-ref name="startAt" scoped="" ref="0x7f6c0309fce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c0309f820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6c0309d850"/>
        <function-ref name="start" scoped="" ref="0x7f6c030a0970"/>
        <function-ref name="stop" scoped="" ref="0x7f6c030a0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6c0309dd00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c0309dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c0309c0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c0309c230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c0309c3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c0309c550"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c0309c6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c0309c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f6c03081550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c03081550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c030818d0"/>
        <function-ref name="write" scoped="" ref="0x7f6c03081a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6c03081e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6c03081e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0307f1c0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0307f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f6c03075d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6c03075d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c030780e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6c03078270"/>
        <function-ref name="sfd" scoped="" ref="0x7f6c03078400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c030a4bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c030a4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c030a3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c030a31b0"/>
        <function-ref name="modify" scoped="" ref="0x7f6c030a3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c030a34d0"/>
        <function-ref name="resend" scoped="" ref="0x7f6c030a3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f6c03083d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c03083d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c030820e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c03082270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c03082400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f6c0307ec60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c0307ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c0307d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6c030869b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6c030869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c03086d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03085020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c030851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03085340"/>
        <function-ref name="get" scoped="" ref="0x7f6c030854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03085660"/>
        <function-ref name="set" scoped="" ref="0x7f6c030857f0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03085980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c030a6c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c030a6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c030a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6c0309cbb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c0309cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c0309b020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c0309b1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c0309b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f6c03087e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6c03087e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c0308d220"/>
        <function-ref name="isSet" scoped="" ref="0x7f6c0308d3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c0308d540"/>
        <function-ref name="set" scoped="" ref="0x7f6c0308d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6c0307d3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c0307d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0307d960"/>
        <function-ref name="write" scoped="" ref="0x7f6c0307daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6c03083020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6c03083020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c030833a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c03083530"/>
        <function-ref name="request" scoped="" ref="0x7f6c030836c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c03083850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c030839e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f6c0308c690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f6c0308c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c0308cb10"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c0308cca0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c0308ce30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03086020"/>
        <function-ref name="get" scoped="" ref="0x7f6c030861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03086340"/>
        <function-ref name="set" scoped="" ref="0x7f6c030864d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03086660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6c0307a130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6c0307a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0307a4b0"/>
        <function-ref name="write" scoped="" ref="0x7f6c0307a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f6c0307a9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6c0307a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0307ad40"/>
        <function-ref name="write" scoped="" ref="0x7f6c03079020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6c0307f6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6c0307f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c0307fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f6c03085cd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f6c03085cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c030840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c03084230"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c030843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c03084550"/>
        <function-ref name="get" scoped="" ref="0x7f6c030846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c03084870"/>
        <function-ref name="set" scoped="" ref="0x7f6c03084a00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c03084b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c030786c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c030786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c03078a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c03078bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c03078d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c03077020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c030771b0"/>
        <function-ref name="get" scoped="" ref="0x7f6c03077340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c030774d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c03077b10"/>
        <function-ref name="set" scoped="" ref="0x7f6c03077660"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c030777f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c03077980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f6c0307c5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c0307c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c0307c960"/>
        <function-ref name="write" scoped="" ref="0x7f6c0307caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6c030a4320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6c030a4320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6c030a46a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c030a4830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f6c03082780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6c03082780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c03082b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c03082c90"/>
        <function-ref name="write" scoped="" ref="0x7f6c03082e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c03081020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c030811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f6c0307fde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6c0307fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c0307e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f6c0307de80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6c0307de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c0307c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6c030a10f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6c030a10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6c030a1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6c02fdac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c02fdac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd9210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6c02fe4020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6c02fe4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6c02fdec70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c02fdec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fdd020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6c02fd8670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02fd8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd89f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6c02fd1e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6c02fd1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd0210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6c02fd8e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6c02fd8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd7210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6c02fc42f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6c02fc42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc4670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6c02fc62f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6c02fc62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc6670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6c02fe3370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6c02fe3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6c02fcc670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6c02fcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6c02fc82f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c02fc82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc8670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6c02fddc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6c02fddc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fdc020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fdc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6c02fdcc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6c02fdcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fda020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6c02fd2670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6c02fd2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd29f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6c02fd4e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6c02fd4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd3210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6c02fd7670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6c02fd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd79f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6c02fe68f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c02fe68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c02fe6c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c02fe6e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c02fe5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6c02fe2d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c02fe2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6c02fe0370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6c02fe0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6c02fcba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c02fcba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcbdf0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6c02fe0ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6c02fe0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6c02fc8ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c02fc8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc8e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6c02fe2060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c02fe2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe23e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6c02fcde50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6c02fcde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcc210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fcc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6c02fdc480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c02fdc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fdc800"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fdc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6c02fdd480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c02fdd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fdd800"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fdd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6c02fe5940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6c02fe5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6c02fcfe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c02fcfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcd210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fcd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6c02fd0670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6c02fd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd09f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6c02fcd670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c02fcd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fcdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6c02fc5ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6c02fc5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc5e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6c02fc6ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6c02fc6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc6e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6c02fd3670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6c02fd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd39f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6c02fd0e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6c02fd0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcf210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fcf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6c02fc9ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6c02fc9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc9e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6c02fd6670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6c02fd6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd69f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6c02fc4ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6c02fc4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c02fc4e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c02fc3020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c02fc3340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c02fc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6c02fe52f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6c02fe52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6c02fde490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6c02fde490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fde810"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fde9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6c02fda480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c02fda480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fda800"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fda990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6c02fd2e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6c02fd2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd1210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6c02fd7e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6c02fd7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd6210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6c02fd1670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6c02fd1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd19f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6c02fd9670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6c02fd9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd99f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6c02fe4670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6c02fe4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6c02fd9e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02fd9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd8210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c02fe7c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c02fe7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c02fe6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c02fe61b0"/>
        <function-ref name="request" scoped="" ref="0x7f6c02fe6340"/>
        <function-ref name="granted" scoped="" ref="0x7f6c02fe64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c02fe6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6c02fdf160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6c02fdf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fdf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6c02fdfe00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6c02fdfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fde1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6c02fc92f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6c02fc92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc9670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6c02fcaad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6c02fcaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcae50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6c02fe26b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c02fe26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe2a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6c02fca2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c02fca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fca670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fca800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6c02fc52f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6c02fc52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fc5670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6c02fd3e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c02fd3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd2210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6c02fcf670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6c02fcf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fcfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6c02fe4cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6c02fe4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6c02fe39c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6c02fe39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fe3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6c02fd6e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6c02fd6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd4210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6c02fdf7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6c02fdf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fdfb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6c02fd4670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6c02fd4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fd49f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fd4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6c02fcce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6c02fcce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02fcb610"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fcb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6c02fc37a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6c02fc37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c02fc3b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c02fc3cb0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fc3e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c02fc2020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c02fc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f6c02fb7df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6c02fb7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02fb41c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6c02fb4350"/>
        <function-ref name="sfd" scoped="" ref="0x7f6c02fb44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02fb47c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02fb47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02fb4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f6c02fb3020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6c02fb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6c02fb33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6c02fb75c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6c02fb75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6c02fb7940"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02fb7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f6c02faa380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f6c02faa380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c02faa700"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c02faa890"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c02faaa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c02faabb0"/>
        <function-ref name="get" scoped="" ref="0x7f6c02faad40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c02fa9020"/>
        <function-ref name="set" scoped="" ref="0x7f6c02fa91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c02fa9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6c02fa3b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6c02fa3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6c02fa2020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6c02fa21b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6c02fa2340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6c02fa24d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6c02fa2660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6c02fa27f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6c02fa2980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6c02fa2b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6c02fa2ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6c02fa2e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6c02fa1020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6c02fa11b0"/>
        <function-ref name="sync" scoped="" ref="0x7f6c02fa1340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6c02fa15d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6c02fa1760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f6c02f8c9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f6c02f8c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c02f8cd50"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c02f8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6c02fa1d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6c02fa1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c02f9f330"/>
        <function-ref name="clear" scoped="" ref="0x7f6c02f9fa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c02fa0ba0"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f9d210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f6c02fa96b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f6c02fa96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c02fa9a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c02fa9bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c02fa9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c02fa8020"/>
        <function-ref name="get" scoped="" ref="0x7f6c02fa81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c02fa8340"/>
        <function-ref name="set" scoped="" ref="0x7f6c02fa84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6c02fa8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f6c02f9ccb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02f9ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02f9b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02f9b230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6c02f9b590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6c02f9b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02f9b910"/>
        <function-ref name="write" scoped="" ref="0x7f6c02f9baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f6c02f9a6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6c02f9a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02f9aa50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02f9abe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6c02fa4330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02fa4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c02fa46b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c02fa4840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c02fa49d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c02fa4b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c02fa4cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c02fa4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f6c02fae550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6c02fae550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02fae8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6c02faea60"/>
        <function-ref name="sfd" scoped="" ref="0x7f6c02faebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f6c02fa53a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6c02fa53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fa5720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6c02fab020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6c02fab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6c02fab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6c02fab530"/>
        <function-ref name="toggle" scoped="" ref="0x7f6c02fab6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6c02fab850"/>
        <function-ref name="get" scoped="" ref="0x7f6c02fab9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6c02fabb70"/>
        <function-ref name="set" scoped="" ref="0x7f6c02fabd00"/>
        <function-ref name="clr" scoped="" ref="0x7f6c02faa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f6c02f99020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c02f99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02f993a0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02f99530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c02faf620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c02faf620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02faf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6c02fa31e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02fa31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02fa3560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c02fa36f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c02fa3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02fac020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02fac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02fac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6c02fa76e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6c02fa76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c02fa7a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c02fa7bf0"/>
        <function-ref name="request" scoped="" ref="0x7f6c02fa7d80"/>
        <function-ref name="granted" scoped="" ref="0x7f6c02fa6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c02fa61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6c02f9be00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6c02f9be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02f9a1c0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02f9a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f6c02fa6530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6c02fa6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c02fa68b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c02fa6a40"/>
        <function-ref name="write" scoped="" ref="0x7f6c02fa6bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c02fa6d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c02fa5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6c02f998b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6c02f998b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02f99e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f6c02fac7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6c02fac7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6c02facb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c02f98150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c02f98150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c02f984d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c02f98660"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c02f987f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c02f98980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c02f98b10"/>
        <function-ref name="get" scoped="" ref="0x7f6c02f98ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c02f98e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c02f974d0"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f97020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c02f971b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c02f97340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f6c02f9c3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02f9c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02f9c760"/>
        <function-ref name="write" scoped="" ref="0x7f6c02f9c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f6c02f9db10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6c02f9db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02f9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f6c02fa8a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6c02fa8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6c02fa8dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f6c02fa7020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6c02fa71b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6c02fa7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f6c02fa5ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c02fa5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02fa4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6c02fafca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6c02fafca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6c02fae0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02fae230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6c02f2ba70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c02f2ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6c02f2bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6c02f2f670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f2f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c02f2f9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c02f2fb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c02f2fd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c02f2c020"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c02f2c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c02f2c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6c02f2a550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02f2a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c02f29b00"/>
        <function-ref name="clear" scoped="" ref="0x7f6c02f272a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c02f293d0"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f279d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f6c02f2b0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f2b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02f2b440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c02f2b5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c02f2b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6c02f22480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6c02f22480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c02f22800"/>
        <function-ref name="isSet" scoped="" ref="0x7f6c02f22990"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02f22b20"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f22cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6c02f26660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6c02f26660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c02f25ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f6c02f23460"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c02f255b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f23b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6c02f2c6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6c02f2c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c02f2ca60"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c02f2cbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c02f2cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6c02f1c020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6c02f1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6c02f1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6c02f21d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02f21d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c02f1e0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c02f1e270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c02f1e400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c02f1e590"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c02f1e720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c02f1e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6c02f134a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c02f134a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02f13820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02f139b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02f13b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02f13cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02f13e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6c02f1ca80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02f1ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c02f19020"/>
        <function-ref name="clear" scoped="" ref="0x7f6c02f19750"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c02f1b8d0"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f19e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f6c02f1d640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02f1d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02f1d9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c02f1db50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c02f1dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6c02f148b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6c02f148b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c02f14c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f6c02f14dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02f13020"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f6c02f123b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f6c02f123b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c02f11020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f6c02f116e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6c02f116e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c02f0f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6c02f18af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6c02f18af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c02f150d0"/>
        <function-ref name="clear" scoped="" ref="0x7f6c02f15800"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c02f17970"/>
        <function-ref name="set" scoped="" ref="0x7f6c02f14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6c02f1ec50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6c02f1ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c02f1d020"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c02f1d1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c02f1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6c02ec0020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6c02ec0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c02ec0c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6c02ebe300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6c02ebe300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6c02ebd150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6c02ebdad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6c02ebd610"/>
        <function-ref name="overflow" scoped="" ref="0x7f6c02ebc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6c02eba450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6c02eba450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6c02eb6a20"/>
        <function-ref name="fired" scoped="" ref="0x7f6c02eb7020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6c02eb7da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6c02eb7920"/>
        <function-ref name="getdt" scoped="" ref="0x7f6c02eb54a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6c02eb5020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6c02eb74a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6c02eb9090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6c02eb6410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6c02eb9560"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02eb9a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6c02ea5c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6c02ea5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea3210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6c02eae020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6c02eae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6c02ea8c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6c02ea8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea7020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6c02ea2670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6c02ea2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea29f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6c02e9be50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6c02e9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9a210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6c02ea2e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6c02ea2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea1210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6c02e8e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6c02e8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e8e670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e8e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6c02e912f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6c02e912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e91670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e91800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6c02ead370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6c02ead370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02ead6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6c02e97670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6c02e97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e979f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6c02e922f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6c02e922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e92670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e92800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6c02ea7c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6c02ea7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea6020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6c02ea6c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6c02ea6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea5020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6c02e9c670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6c02e9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6c02e9fe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6c02e9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9e210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6c02ea1670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6c02ea1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea19f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6c02eb1970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6c02eb1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6c02eb1cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6c02eb1e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6c02eaf030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6c02eacd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6c02eacd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eab0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6c02eab370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6c02eab370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6c02e95a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6c02e95a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e95df0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6c02eabac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6c02eabac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eabe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6c02e92ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6c02e92ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e92e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6c02eac060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6c02eac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eac3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6c02e98e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6c02e98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e97210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6c02ea6480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6c02ea6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea6800"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6c02ea7480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6c02ea7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea7800"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6c02eaf950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6c02eaf950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eafcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6c02e99e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6c02e99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e98210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6c02e9a670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6c02e9a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6c02e98670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6c02e98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e989f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6c02e90ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6c02e90ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e90e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6c02e91ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6c02e91ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e91e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6c02e9e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6c02e9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6c02e9ae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6c02e9ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e99210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6c02e93ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6c02e93ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e93e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6c02ea0670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6c02ea0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea09f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6c02e8ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6c02e8ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c02e8ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c02e8d020"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e8d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c02e8d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c02e8d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6c02eaf300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6c02eaf300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eaf680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6c02ea8490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6c02ea8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea8810"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6c02ea5480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6c02ea5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea5800"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6c02e9ce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6c02e9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9b210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6c02ea1e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6c02ea1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea0210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6c02e9b670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6c02e9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6c02ea3670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6c02ea3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea39f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6c02eae670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6c02eae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eae9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6c02ea3e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6c02ea3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02ea2210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02ea23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c02eb2d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c02eb2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c02eb10a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c02eb1230"/>
        <function-ref name="request" scoped="" ref="0x7f6c02eb13c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6c02eb1550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c02eb16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6c02ea9160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6c02ea9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02ea94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6c02ea9e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6c02ea9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02ea81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6c02e932f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6c02e932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e93670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e93800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6c02e94ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6c02e94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e94e50"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6c02eac6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6c02eac6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eaca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6c02e942f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6c02e942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e94670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e94800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6c02e902f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6c02e902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e90670"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e90800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6c02e9ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6c02e9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9c210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6c02e99670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6c02e99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e999f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6c02eaecc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6c02eaecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02ead0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6c02ead9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6c02ead9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02eadd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6c02ea0e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6c02ea0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9f210"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6c02ea97b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6c02ea97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6c02ea9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6c02e9f670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6c02e9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e9f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6c02e97e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6c02e97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6c02e95610"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e957a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6c02e8d7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6c02e8d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6c02e8db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6c02e8dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f6c02e8de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6c02e8c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6c02e8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6c02e64a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6c02e64a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6c02e64da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6c02e63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6c02e62920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f6c02e62920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02e64560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c02e68990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c02e68990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02e68d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6c02e59a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6c02e59a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6c02e59da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6c02e58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6c02e5e940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f6c02e5e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02e59560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c02e5e080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c02e5e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02e5e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6c02e66aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6c02e66aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c02e66e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c02e5f020"/>
        <function-ref name="isState" scoped="" ref="0x7f6c02e5f1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c02e5f340"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c02e5f4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c02e5f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6c02e41020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6c02e41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02e413a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02e41530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02e416c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02e41850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02e419e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c02e42220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c02e42220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02e425a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02e42730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02e428c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02e42a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02e42be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6c02e3de60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6c02e3de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02e3c210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02e3c3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02e3c530"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02e3c6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02e3c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c02e40a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c02e40a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02e40d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02e3d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02e3d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02e3d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02e3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6c02e3b8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6c02e3b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6c02e3bc70"/>
        <function-ref name="rand32" scoped="" ref="0x7f6c02e3be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c02e3d750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c02e3d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02e3dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6c02e3a170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02e3a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02e3a4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c02e3a680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c02e3a810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f6c02e3cae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6c02e3cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c02e3ce60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c02e3b020"/>
        <function-ref name="isState" scoped="" ref="0x7f6c02e3b1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c02e3b340"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c02e3b4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c02e3b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6c02e3e690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6c02e3e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c02e3ea10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c02e3eba0"/>
        <function-ref name="isState" scoped="" ref="0x7f6c02e3ed30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c02e29020"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c02e291b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c02e29340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6c02e23950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6c02e23950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02e23cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02e26aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02e26aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02e26e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f6c02e23200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6c02e23200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02e23580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6c02e1e3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6c02e1e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02e1e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c02e1fb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c02e1fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02e22e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02e22e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02e1f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6c02e1ea70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02e1ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02e1edf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c02e1c020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c02e1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f6c02e1f570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6c02e1f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02e1f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6c02def020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6c02def020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02def3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6c02def6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6c02def6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02defa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02defbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02defd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02dee020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02dee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c02df38e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c02df38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02df3c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02df3df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02df2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02df21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02df2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6c02df2c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6c02df2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02df10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02df1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02df13c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02df1550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02df16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02df25e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02df25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02df2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c02df5be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c02df5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c02df3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c02df31b0"/>
        <function-ref name="request" scoped="" ref="0x7f6c02df3340"/>
        <function-ref name="granted" scoped="" ref="0x7f6c02df34d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c02df3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6c02df1a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c02df1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02df1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6c02df0170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6c02df0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02df04f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02df0680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02df0810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02df09a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02df0b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6c02de5d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6c02de5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02de4180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02de4310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02de44a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02de4630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02de47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6c02de4b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6c02de4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02de3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f6c02db6db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f6c02db6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c02db5180"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c02db5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6c02de32f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02de32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c02de3670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c02de3800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c02de3990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c02de3b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c02de3cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c02de3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6c02de7a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6c02de7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02de7da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02de6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02de61b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02de6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02de64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6c02de2b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6c02de2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6c02de1020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6c02de11b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6c02de1340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6c02de14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6c02de2170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02de2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02de24f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c02de2680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c02de2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6c02de7370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f6c02de7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02de76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6c02dea7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6c02dea7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c02deab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c02deacc0"/>
        <function-ref name="request" scoped="" ref="0x7f6c02deae50"/>
        <function-ref name="granted" scoped="" ref="0x7f6c02de9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c02de91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6c02de94d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f6c02de94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02de9850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02de99e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02de9b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02de9d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02de7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6c02de6840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6c02de6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02de6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6c02de5020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6c02de5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02de53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02de5530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02de56c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02de5850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02de59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6c02d96dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6c02d96dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6c02d95180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6c02d95410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6c02d95410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6c02d95790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6c02d95920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6c02d95ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6c02d95c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6c02d89b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6c02d89b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c02d88020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c02d881b0"/>
        <function-ref name="start" scoped="" ref="0x7f6c02d88340"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02d884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6c02d87860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6c02d87860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02d87be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d87d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02d86020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02d861b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02d86340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6c02d86690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6c02d86690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02d86a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c02d8dce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c02d8dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02d8a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d8a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02d8a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02d8a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02d8a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6c02d89080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c02d89080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6c02d89400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6c02d89590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6c02d89720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6c02d898b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f6c02d88800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f6c02d88800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c02d88b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c02d88d10"/>
        <function-ref name="isState" scoped="" ref="0x7f6c02d87020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c02d871b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c02d87340"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c02d874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6c02d86d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6c02d86d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c02d85180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c02d85310"/>
        <function-ref name="start" scoped="" ref="0x7f6c02d854a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02d85630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02d8a980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02d8a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02d8ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6c02d822d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c02d822d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6c02d82650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6c02d827e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6c02d82970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6c02d82b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6c02d84580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6c02d84580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6c02d84900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6c02d84a90"/>
        <function-ref name="isState" scoped="" ref="0x7f6c02d84c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6c02d84db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6c02d83020"/>
        <function-ref name="forceState" scoped="" ref="0x7f6c02d831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6c02d75d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6c02d75d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02d74180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d74310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02d744a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02d74630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02d747c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c02d78350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c02d78350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02d786d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d78860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02d789f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02d78b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02d78d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6c02d75020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6c02d75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6c02d753a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6c02d75530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6c02d756c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6c02d75850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6c02d759e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f6c02d701c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c02d701c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c02d70540"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c02d706d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c02d70860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6c02d73410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6c02d73410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6c02d73790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6c02d73920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6c02d73ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6c02d73c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6c02d73dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6c02d50690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6c02d50690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02d50a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6c02d51860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6c02d51860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02d51be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d51d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02d50020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02d501b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02d50340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6c02d4e610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6c02d4e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6c02d4e990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6c02d4eb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6c02d4ecb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6c02d4ee40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6c02d4d020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6c02d4d1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6c02d4d340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6c02d4d4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6c02d4d660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6c02d4d7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6c02d4d980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6c02d4db10"/>
        <function-ref name="sync" scoped="" ref="0x7f6c02d4dca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6c02d4c020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6c02d4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6c02d528b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6c02d528b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c02d52c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c02d52dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c02d51020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c02d511b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c02d51340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c02d514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6c02d53ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f6c02d53ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6c02d520a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f6c02d4b1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f6c02d4b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6c02d4b570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6c02d4b700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6c02d4b890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6c02d4ba20"/>
        <function-ref name="setCca" scoped="" ref="0x7f6c02d4bbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6c02d4bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6c02d54a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c02d54a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02d54e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02d53020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d531b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02d53340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02d534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6c02d58020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c02d58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02d583a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d58530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02d586c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02d58850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02d589e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6c02d57df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6c02d57df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02d561c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6c02d50ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6c02d50ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6c02d4f0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6c02d4f230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6c02d4f3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6c02d4f550"/>
        <function-ref name="getPower" scoped="" ref="0x7f6c02d4f6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6c02d4f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6c02d4c4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6c02d4c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6c02d4c950"/>
        <function-ref name="changed" scoped="" ref="0x7f6c02d4cae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6c02d4cc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6c02d4ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6c02d4fb70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6c02d4fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02d4e020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6c02d4e1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6c02d4e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02d57210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02d57210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02d57590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6c02d4ad30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6c02d4ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6c02d490e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6c02d49270"/>
        <function-ref name="led1On" scoped="" ref="0x7f6c02d49400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6c02d49590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6c02d49720"/>
        <function-ref name="get" scoped="" ref="0x7f6c02d498b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6c02d49a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6c02d481b0"/>
        <function-ref name="set" scoped="" ref="0x7f6c02d49bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6c02d49d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6c02d48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6c02d56470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c02d56470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c02d567f0"/>
        <function-ref name="source" scoped="" ref="0x7f6c02d56980"/>
        <function-ref name="address" scoped="" ref="0x7f6c02d56b10"/>
        <function-ref name="destination" scoped="" ref="0x7f6c02d56ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c02d56e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c02d54020"/>
        <function-ref name="type" scoped="" ref="0x7f6c02d541b0"/>
        <function-ref name="setType" scoped="" ref="0x7f6c02d54340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c02d544d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c02d54660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c02d547f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f6c02d4a0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f6c02d4a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6c02d4a470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6c02d4a600"/>
        <function-ref name="request" scoped="" ref="0x7f6c02d4a790"/>
        <function-ref name="granted" scoped="" ref="0x7f6c02d4a920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6c02d4aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6c02cc4360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6c02cc4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6c02cc46e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6c02cc4870"/>
        <function-ref name="start" scoped="" ref="0x7f6c02cc4a00"/>
        <function-ref name="stop" scoped="" ref="0x7f6c02cc4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6c02cc33f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c02cc33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02cc3770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02cc3900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02cc3a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02cc3c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02cc3db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6c02cc01d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6c02cc01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02cc0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6c02cc07e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c02cc07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02cc0b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02cc0cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02cc0e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02cbf030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02cbf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6c02cbda20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6c02cbda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6c0417f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c02cbb020"/>
        <function-ref name="clear" scoped="" ref="0x7f6c02cbb750"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c02cbc890"/>
        <function-ref name="set" scoped="" ref="0x7f6c02cbbe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6c02cb5890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6c02cb5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6c02cb5c10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6c02cb5da0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6c02cb4020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6c02cb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02cc25c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02cc25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02cc2940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6c02cbeb20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6c02cbeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c02cbd020"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c02cbd1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c02cbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6c02cbf470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c02cbf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c02cbf7f0"/>
        <function-ref name="source" scoped="" ref="0x7f6c02cbf980"/>
        <function-ref name="address" scoped="" ref="0x7f6c02cbfb10"/>
        <function-ref name="destination" scoped="" ref="0x7f6c02cbfca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c02cbfe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c02cbe020"/>
        <function-ref name="type" scoped="" ref="0x7f6c02cbe1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f6c02cbe340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c02cbe4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c02cbe660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c02cbe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6c02cb9af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6c02cb9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6c04180680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6c041809f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6c02cb70d0"/>
        <function-ref name="clear" scoped="" ref="0x7f6c02cb7800"/>
        <function-ref name="isValid" scoped="" ref="0x7f6c02cb8970"/>
        <function-ref name="set" scoped="" ref="0x7f6c02cb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6c02c1f020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c02c1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02c1f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02c1f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02c1f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02c1f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02c1f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6c02c1fc30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c02c1fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02c1d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02c1d1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02c1d340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02c1d4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02c1d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6c02c1d8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c02c1d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c02c1dc30"/>
        <function-ref name="source" scoped="" ref="0x7f6c02c1ddc0"/>
        <function-ref name="address" scoped="" ref="0x7f6c02c1c020"/>
        <function-ref name="destination" scoped="" ref="0x7f6c02c1c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c02c1c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c02c1c4d0"/>
        <function-ref name="type" scoped="" ref="0x7f6c02c1c660"/>
        <function-ref name="setType" scoped="" ref="0x7f6c02c1c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c02c1c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c02c1cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c02c1cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6c02c1b020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6c02c1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c02c1b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c02c1b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c02c1b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6c022cee60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c022cee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c022cd210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c022cd3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c022cd530"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c022cd6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c022cd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6c022cdaa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c022cdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c022cde20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c022cc020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c022cc1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c022cc340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c022cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6c022cc720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c022cc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c022ccaa0"/>
        <function-ref name="source" scoped="" ref="0x7f6c022ccc30"/>
        <function-ref name="address" scoped="" ref="0x7f6c022ccdc0"/>
        <function-ref name="destination" scoped="" ref="0x7f6c022cb020"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c022cb1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c022cb340"/>
        <function-ref name="type" scoped="" ref="0x7f6c022cb4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f6c022cb660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c022cb7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c022cb980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c022cbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6c022cbda0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6c022cbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6c022c9180"/>
        <function-ref name="noAck" scoped="" ref="0x7f6c022c9310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6c022c94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6c022c07f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c022c07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c022c0b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c022c0d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c022bd020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c022bd1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c022bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f6c022bd5f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c022bd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c022bd970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c022bdb00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c022bdc90"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c022bde20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c022bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6c022bc270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c022bc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c022bc5f0"/>
        <function-ref name="source" scoped="" ref="0x7f6c022bc780"/>
        <function-ref name="address" scoped="" ref="0x7f6c022bc910"/>
        <function-ref name="destination" scoped="" ref="0x7f6c022bcaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c022bcc30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c022bcdc0"/>
        <function-ref name="type" scoped="" ref="0x7f6c022bb020"/>
        <function-ref name="setType" scoped="" ref="0x7f6c022bb1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c022bb340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c022bb4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c022bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c02c86930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c02c86930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02c86cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02c86e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02c83020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02c831b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02c83340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f6c02c33400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6c02c33400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02c337a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02c33930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02c33ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02c33c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02c33de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6c02c35df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6c02c35df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6c02c341c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02c34350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02c344e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6c02c34670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6c02c34800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6c02c31720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c02c31720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02c31aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02c31c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02c31dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02c30020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02c301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f6c02c34b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f6c02c34b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f6c02c33020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f6c02c30480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f6c02c30480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c02c30800"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c02c30990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f6c02c30c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f6c02c30c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6c02c2f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6c02c2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6c02c32060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c02c32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c02c323e0"/>
        <function-ref name="source" scoped="" ref="0x7f6c02c32570"/>
        <function-ref name="address" scoped="" ref="0x7f6c02c32700"/>
        <function-ref name="destination" scoped="" ref="0x7f6c02c32890"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c02c32a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c02c32bb0"/>
        <function-ref name="type" scoped="" ref="0x7f6c02c32d40"/>
        <function-ref name="setType" scoped="" ref="0x7f6c02c31020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c02c311b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c02c31340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c02c314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6c02c12020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6c02c12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6c02c123a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6c02c12530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6c02c126c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6c02c12850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6c02c129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6c02c18910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6c02c18910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6c02c18c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6c02c12c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6c02c12c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6c02c11020"/>
        <function-ref name="source" scoped="" ref="0x7f6c02c111b0"/>
        <function-ref name="address" scoped="" ref="0x7f6c02c11340"/>
        <function-ref name="destination" scoped="" ref="0x7f6c02c114d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f6c02c11660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6c02c117f0"/>
        <function-ref name="type" scoped="" ref="0x7f6c02c11980"/>
        <function-ref name="setType" scoped="" ref="0x7f6c02c11b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6c02c11ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6c02c11e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6c02c10020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6c04175e60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f6c04176aa0" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f6c0416a030" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f6c04167e80" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f6c04167bc0" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f6c0416c2b0" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f6c0416eae0" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f6c0416ade0" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f6c0416a7f0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f6c0416ab50" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f6c041672a0" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f6c04167020" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f6c04168840" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f6c041685c0" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f6c0416b860" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f6c0416e350" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f6c0416b0c0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f6c0416ca60" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f6c0416cdc0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f6c04128020" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f6c0412b270" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f6c0412a840" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f6c0412cb00" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f6c0412b9e0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f6c0412fd00" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f6c0412c420" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f6c0412a120" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f6c042997e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f6c04561700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f6c041bfa80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f6c041bd1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f6c041bf2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f6c04337020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6c04cd7e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f6c0461fe20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f6c0461f610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f6c04613770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f6c04611020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f6c040c5a00" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f6c040c41f0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f6c040c49d0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f6c040c3940" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f6c040c0120" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6c040c0930" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f6c040c3190" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6c040bf4c0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f6c040bf240" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f6c040c5270" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f6c040c2190" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f6c040c2920" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6c040b5270" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f6c040b59a0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6c040b7420" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6c040b4820" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6c040b7b20" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6c040b40e0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6c040b8610" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6c040b8ce0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6c0408a070" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f6c0408a7c0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f6c040852e0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6c04085060" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f6c04084d30" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6c0408d870" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6c04089780" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f6c04083520" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f6c04081020" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6c04083d70" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6c04089020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6c0408b870" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f6c04081910" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f6c04086020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f6c040845f0" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f6c0408b070" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f6c04085b80" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6c040909c0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f6c04088020" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f6c040867c0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f6c040887e0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6c0408d120" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f6c03d622a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6c03d88180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d62020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f6c03d6bd60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d6bae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f6c03d6d1f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f6c03d6dcb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d6da30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f6c03d687a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d681c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6c03d68510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f6c03d692b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d6cc40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6c03d69020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f6c03d64bf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d64970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f6c03d65020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d639a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f6c03d63cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6c03d8ad50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f6c03d669f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d66770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f6c03d60730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6c03d88180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6c03d60150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f6c03d604a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6c03d88180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f6c03d5f580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6c03d88180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f6c03d4d110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6c03d51e40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f6c03d4c600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6c03d4c380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6c03d51460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6c03d4d960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f6c03d763f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d76170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f6c03d75490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d75210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6c03d727b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d721b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c03d724e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6c03d718a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f6c03d74930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d74370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c03d746a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6c03d5b2c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6c03d70930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6c03d70cb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c03d5b020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6c03d57970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d57370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c03d576a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6c03d56a60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6c03d5a630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d5a3b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6c03d59b80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d595a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6c03d598f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f6c03d482b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c03d4ab50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f6c03d48020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f6c03d44980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c03d44380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f6c03d446f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f6c03d48d90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f6c04ccb110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c03d48b10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f6c03d46880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c03d46600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f6c03d4a350" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c03d4a0d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f6c03d47990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c03d47710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03de78e0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03de78e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6c03dde7c0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6c03de1020" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f6c03de0da0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6c03de07d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6c03de0b10" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f6c03de0020" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f6c03ddc8a0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f6c03ddc020" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6c03de1800" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f6c03de44d0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6c03de4250" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f6c03ddfdc0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6c03ddf7f0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6c03ddfb30" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f6c03de3020" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6c03de4d10" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6c03de3820" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6c03d529c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
              <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03d52060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f6c03d523b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c03d526e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03cf4910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03cf4910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6c03cf1270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03ceb400" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03ceb400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6c03ceb640" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6c03ce62d0" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6c03ce92b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f6c03ce8900" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6c03ce8330" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f6c03ce8670" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6c03ce9a90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f6c03ce6ac0" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6c03cea2a0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6c03cea020" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03ceb640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6c03ceaad0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f6c03ccd870" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f6c03cc42a0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6c03cc4020" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f6c03cc4c80" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f6c03cc4a00" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f6c03cc36a0" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f6c03cc3420" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6c03cc3d90" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6c03cd20e0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f6c03cd1a10" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f6c03cd1790" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f6c03cd2810" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6c03cd6270" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f6c03cd1020" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6c03cd5190" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f6c03cd39a0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6c03cd6a00" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6c03cd58a0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f6c03cd32a0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6c03cd3020" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f6c03cd0450" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f6c03cd01d0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f6c03ccae80" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f6c03cca8b0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f6c03ccabf0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f6c03cd7d80" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6c04120b00"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6c0411f5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f6c03cc8840" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f6c03cc77b0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f6c03cca020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f6c03cc7020" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f6c03ccc550" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f6c03cccce0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f6c03ccb750" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6c04120b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6c0411f5a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6c03ccb4d0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6c04120b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6c0411f5a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f6c03cb1270" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f6c03cae8c0" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f6c03cae640" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6c03cad4e0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6c03cad260" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6c03cafe40" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6c03caf580" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f6c03cb1c20" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f6c03cb19a0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6c03c831f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03b34e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03b34e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6c03b2e070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03b2e070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6c03b2e990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03b2e070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6c03b2dad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6c03b2d270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6c03b2c270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f6c03a6be80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f6c04ccb930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f6c03a6bc00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f6c04ccb930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f6c039a6e40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039a6bc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f6c039a7120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039a9e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f6c039aa7a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f6c039aa520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f6c039acbd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f6c039ac950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f6c039a92a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f6c039a9020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f6c039a6020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039a7d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f6c03994750" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f6c03994140" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6c039944c0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f6c039a1b50" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039a1530" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f6c039a18c0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f6c0399fd00" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c0399fa80" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f6c039a2d10" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f6c039a2350" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f6c039a20d0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f6c039b35f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039b3370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f6c039b27d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039b2550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f6c039af940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039af6c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f6c03998040" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03999d90" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f6c0399c030" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039a49e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f6c039a4d70" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f6c03999020" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c0399bc80" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f6c0399b450" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c0399cde0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f6c0399b1c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f6c03996020" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03998d70" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f6c039b0a60" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039b07e0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6c039875e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03987020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c03987350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6c03982bb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c039825b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c039828e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6c03983d20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6c03985900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03985680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6c03984e00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03984820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6c03984b70" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6c0398b4b0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f6c0398c4d0" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f6c0398fae0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6c0398ccc0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6c0398a020" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6c039615e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c03961020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f6c03961350" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6c039608f0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f6c0395c2c0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6c0395d340" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f6c0395db80" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c0395c020" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6c0395faa0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6c0395f4c0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6c0395f810" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f6c039600b0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f6c03961df0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f6c03959690" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f6c03962e50" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f6c0396caa0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6c03963350" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f6c03953840" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03953580" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f6c03954d40" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f6c03dc33a0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f6c03dc2d10"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03954a40" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f6c03952b90" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f6c03dc1860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f6c03dbe180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03952890" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f6c039698b0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f6c039679c0" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f6c039671f0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f6c0396b020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f6c03969070" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f6c03968190" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f6c039689b0" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f6c0396b880" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f6c0394b350" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f6c0394e8f0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f6c0394db00" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f6c0394d880" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f6c0394d0e0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f6c0394f5e0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f6c0394f360" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f6c0394e110" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f6c0394fe10" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f6c038f0020" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f6c038f19f0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f6c038f1d40" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f6c038f3960" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f6c038f3020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f6c038f4820" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f6c038f4c00" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f6c038f92a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6c038f9020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f6c038f1270" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f6c038f6d70" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6c038f6af0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f6c038f83e0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6c038f8160" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f6c038ef270" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f6c038f4020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6c038f5c50" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f6c038f0a20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f6c038f8b60" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6c039caea0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6c039c7630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f6c038f6390" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f6c038fa850" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f6c038f99f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f6c038f5530" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f6c038eec50" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6c038eec50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f6c038eb540" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6c038e92b0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6c038eec50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6c038ebcc0" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f6c038e9020" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6c038eec50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6c038c62a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6c03dc8550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c038c6020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6c038c6d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6c03dc8550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c038c6b00" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f6c038dd640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6c039caea0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6c039c7630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f6c038cfaf0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f6c038ceab0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f6c038ce350" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6c03d88180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f6c038cf2b0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6c03d88180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f6c038d5b40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6c03d88180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6c038cf020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6c03d88560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f6c038be120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6c03dc8550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6c038cb2c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6c03dc8550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6c038cc3d0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6c038ccc40" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6c038cb020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6c038c9a80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6c03dc8550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6c038cbb90" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6c038c9490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6c038c97e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6c038d2190" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6c038d3960" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f6c038d31f0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f6c038d68d0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f6c037ac190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6c037aa350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6c037acb30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6c037ac8b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f6c037af8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6c03782800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6c0377e270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6c03782070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f6c037809a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f6c03780720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f6c03780020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f6c03785870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f6c03781810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f6c03781030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f6c0362d810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f6c0362b0e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f6c0362b920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f6c03604420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c03605e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6c03604190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f6c035ff700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c03600d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6c035ff110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6c035ff460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6c03600020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6c03dc8550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c03602970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6c03602cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f6c03605020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6c03dc8550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c036079d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6c03607d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6c03603b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c03603250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6c036035a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6c036038f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6c035e5a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6c035e50d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6c035e5460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c035e57a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6c035e1020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6c035e42a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6c035e4630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c035e4970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6c035e4ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
              <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f6c035e78f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f6c035e7670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f6c03507b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6c035044e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f6c03502aa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6c035382b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6c03539e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f6c035016f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c03501470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f6c03500b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c035008b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f6c03500020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6c034ff5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c034ff370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f6c034f4020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f6c034f5750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f6c034ed740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c034ed4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f6c034f0cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f6c034c87c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f6c034d42d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f6c034e0020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03555020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6c03555860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6c034e3cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03555020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6c03555860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f6c034d63b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f6c034de530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03550020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6c03550860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6c034de2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03550020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6c03550860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f6c034cd9e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f6c034c9020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f6c034dfa90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03553ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6c03552680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f6c034ded20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03550020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6c03550860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f6c034dab90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f6c034da910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f6c034da1f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f6c034cd2b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f6c034df2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03553ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6c03552680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6c034df020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03553ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6c03552680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f6c034db020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f6c034cc190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f6c034dba00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f6c034db780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f6c034d7480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f6c034d7c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f6c034cf420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f6c034d1190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f6c034d5350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f6c034cfb60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f6c034d4ab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f6c034cc8b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f6c034d9390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f6c0355bd80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f6c035574d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f6c034cb070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f6c034c8020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f6c034dc700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f6c034dc480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f6c034c72a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c034c7020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f6c034e0800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6c03555020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6c03555860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f6c034d6b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f6c034d2270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f6c034d0ba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6c03524b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6c03524730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6c034d0920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6c03524b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6c03524730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f6c034d1ca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6c035382b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6c03539e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6c034d1a20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6c035382b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6c03539e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f6c034c7ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f6c034cb860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f6c034d9ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f6c034c9780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f6c034d29e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f6c034d5b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6c03460020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f6c0343a9d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f6c0344b020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f6c03440620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6c034403a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f6c034545b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f6c0343dc50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f6c034455e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f6c0344d070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f6c0344a020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f6c0344e020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f6c0344fd30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f6c034504b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f6c03447020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f6c0343f550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f6c0343a270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f6c03441c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f6c03435350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f6c034319d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f6c03453420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f6c03449740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f6c034461f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f6c0344e8e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f6c03456350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f6c03441460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6c034411e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f6c03459c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f6c0343d4d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f6c03438190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f6c03433b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f6c03431270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f6c0343cb90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f6c034388c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f6c03440db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f6c03436390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f6c03453b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f6c034447e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f6c034377b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f6c0343bac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f6c03446de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f6c03446b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f6c034322d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f6c03442a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f6c0343c420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f6c03456e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f6c035104a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6c03510080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6c03456b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f6c035104a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6c03510080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f6c03449020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f6c03452cb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6c03452a30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f6c03447980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6c03447700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f6c03436b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f6c0344f620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f6c03452350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f6c034422a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f6c03442020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6c04cca520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f6c03454ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f6c03437020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f6c0343b350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f6c0343fcc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f6c03444020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f6c03445d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f6c0344a740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f6c0344d7b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f6c03432a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f6c03450e30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6c03450bb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f6c03435b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f6c0344b750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f6c03433350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f6c0338e020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f6c0338e880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6c03357dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f6c03354020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6c03357530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6c033566d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6c03354950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f6c03353b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f6c033484c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6c03351490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6c03348240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6c03351490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f6c0334a420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f6c03349020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6c03351490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6c0334aca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6c03351490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f6c03349930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f6c03351490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6c0313e5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6c0313e360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6c0312bb00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f6c0312b1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f6c0312b530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c0312b860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6c03129880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6c031292c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6c031295f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c03111530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c03111530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6c03111770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03111770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f6c031102e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03111770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6c03110060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c03111770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f6c030ad580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f6c0309baf0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6c0309baf0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6c0309bd30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c0309bd30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f6c03096bc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c0309bd30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03096940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f6c03094d80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03094b00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f6c03098920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c030986a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6c030950c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c0309bd30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03093a80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f6c03093de0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6c0309bd30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6c030759e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6c03075020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f6c03075750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f6c030767f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f6c03076020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6c03079d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6c04cca920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f6c0308a5f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6c04cca160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c0308a370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f6c0308b5f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c0308b370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6c030875f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03087370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6c030895f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6c03089370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6c03d79350"/>
                <typename><typedef-ref name="message_t" ref="0x7f6c03d789a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f6c02e655e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6c02e655e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f6c02e622a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f6c0461d020"/>
            <typename><typedef-ref name="error_t" ref="0x7f6c046151b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6c02e655e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f6c02e62020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6c02e655e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f6c02c7a1f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6c04623090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
